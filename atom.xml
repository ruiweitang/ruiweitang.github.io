<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>梦溪笔谈</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-11T08:51:56.912Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>棠哥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>移动webday06笔记</title>
    <link href="http://yoursite.com/2020/02/06/1-%E7%A7%BB%E5%8A%A8webday06%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/02/06/1-移动webday06笔记/</id>
    <published>2020-02-06T02:00:06.000Z</published>
    <updated>2020-03-11T08:51:56.912Z</updated>
    
    <content type="html"><![CDATA[<h2 id="《部分案例代码下载》"><a href="#《部分案例代码下载》" class="headerlink" title="《部分案例代码下载》"></a><a href="/download/移动webday06部分案例代码.zip">《部分案例代码下载》</a></h2><h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><blockquote><ul><li style="list-style: none"><input type="checkbox"> 了解less的作用</li><li style="list-style: none"><input type="checkbox"> 能够了解less的基本语法</li><li style="list-style: none"><input type="checkbox"> 能够理解rem和em的区别</li><li style="list-style: none"><input type="checkbox"> 掌握媒体查询+rem适配</li><li style="list-style: none"><input type="checkbox"> 能够完成苏宁rem布局首页</li></ul><p>。。。。。。</p></blockquote><p><strong>理解上课的知识点……</strong></p><h1 id="LESS的学习"><a href="#LESS的学习" class="headerlink" title="LESS的学习"></a>LESS的学习</h1><blockquote><p> 在写css的时候，可以直接写一个.css文件，但是实际开发中也会使用less的方法写css。</p><p>less的写法比css的写法功能更加强大。</p></blockquote><h2 id="维护css的弊端"><a href="#维护css的弊端" class="headerlink" title="维护css的弊端"></a>维护css的弊端</h2><blockquote><p>css是一门非编程式语言，没有变量、函数、作用域等概念</p></blockquote><ul><li><p>css需要书写大量没有逻辑的代码，冗余度较高</p><blockquote><p>比如：相同的样式往往css中需要写很多次，而你却无可奈何</p></blockquote></li><li><p>不方便维护和拓展，不利于复用</p><blockquote><p>比如：更改网页的主题色css需要一个一个的修改，而你却无可奈何</p></blockquote></li><li><p>css没有很好的计算能力</p><blockquote><p> 比如：css中的大小不能直接填写计算式子，一般要手动计算后填写结果</p></blockquote></li></ul><blockquote><p>使用less就能解决以上css中的弊端</p></blockquote><h2 id="Less的介绍"><a href="#Less的介绍" class="headerlink" title="Less的介绍"></a>Less的介绍</h2><blockquote><p><a href="http://lesscss.cn/" target="_blank" rel="noopener">Less</a> 是一门 CSS 预处理语言，也叫做css的预处理器。它扩展了 CSS 的写法，增加了变量、函数等特性。</p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">less</span>作为<span class="selector-tag">css</span>的拓展，并没有减少<span class="selector-tag">css</span>的功能，而是在现有的<span class="selector-tag">css</span>语法中，加入了程序式语言的特性</span><br><span class="line"><span class="selector-tag">less</span>在<span class="selector-tag">css</span>的语法基础上，引入了变量、<span class="selector-tag">Mixin</span>（混入）、运算以及函数等功能，大大简化了<span class="selector-tag">css</span>的编写，并且减低了<span class="selector-tag">css</span>的维护成本，正如其名字一样：<span class="selector-tag">less</span>可以让我们用更少（<span class="selector-tag">less</span>）的代码做更多的事情</span><br><span class="line">当然，常见的<span class="selector-tag">css</span>预处理器有：<span class="selector-tag">Less</span>、<span class="selector-tag">Sass</span>、<span class="selector-tag">Stylus</span></span><br></pre></td></tr></table></figure><p><strong>注意点：</strong></p><ul><li>在less中，完全兼容css的语法，所以可以直接在less文件中写css没问题</li><li><strong>浏览器不认识less文件</strong>，需要需要使用less中的样式，需要先把less文件编译成.css文件，再使用！！</li></ul><h2 id="less的编译插件及配置"><a href="#less的编译插件及配置" class="headerlink" title="less的编译插件及配置"></a>less的编译插件及配置</h2><blockquote><p>less写完之后需要编译.css文件才能使用，此时可以使用VScode中的插件完成。</p></blockquote><p><strong>插件的安装步骤：</strong></p><ol><li><p>选择左侧第五个拓展按钮，下载插件 <strong><code>easy less</code></strong> ，点击安装，再点击重新加载</p><blockquote><p>安装好之后，重新加载或者关闭vscode重新打开</p></blockquote><p><img src="\images\easyless安装.gif" alt="easyless安装"></p></li><li><p>实际开发中需要对插件进行配置</p><blockquote><p>让编译好的css文件在css文件夹中</p></blockquote><p>在设置代码中添加一下配置即可</p><blockquote><p>使用的时候直接复制粘贴，<strong>注意在上一行的最后加一个逗号</strong></p><p>设置完之后需要<strong>重新打开vscode</strong>即可</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"less.compile": &#123;</span><br><span class="line">    "out": "../css/"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="\images\easyless配置.gif" alt="easyless配置"></p></li></ol><p><strong>注意点：</strong></p><ul><li><p>以后项目中如果有less文件之后，样式都在less文件中写即可，不用去修改css文件</p><blockquote><p>因为css文件都是less编译之后的结果，只需要关注less的修改即可</p></blockquote></li><li><p>但是页面中引入的必须是编译之后的css文件，因为less文件浏览器不认识。</p></li></ul><h2 id="Less语法"><a href="#Less语法" class="headerlink" title="Less语法"></a>Less语法</h2><h3 id="less的注释"><a href="#less的注释" class="headerlink" title="less的注释"></a>less的注释</h3><blockquote><p>在less文件中可以写两种注释</p></blockquote><ul><li>一种是css的注释：<code>/* 注释的内容 */</code> ，最后会编译展示在css文件中</li><li>一种是less的注释：<code>// 注释的内容</code> ，只在less中使用，不会编译展示在css文件中</li></ul><blockquote><p>一般在less文件中，推荐使用less的注释方法</p></blockquote><h3 id="less的变量"><a href="#less的变量" class="headerlink" title="less的变量"></a>less的变量</h3><blockquote><p>一般在网站中会有主题色（当前网页中用的较多的颜色），如果此时需要改换网页的主题色，一个个去改非常麻烦，此时可以使用less中的变量完成效果</p></blockquote><p><strong>语法：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">变量：可以变化的量</span><br><span class="line">语法：@变量名:变量值;</span><br><span class="line">作用：编译的时候会把<span class="selector-tag">less</span>中所有的变量名替换成变量值，这样可以统一修改某一个值（如主题色）</span><br></pre></td></tr></table></figure><p><strong>例子：</strong></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@mainColor:</span><span class="number">#e92322</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box1</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">@mainColor</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box2</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">@mainColor</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box3</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="variable">@mainColor</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less的嵌套"><a href="#less的嵌套" class="headerlink" title="less的嵌套"></a>less的嵌套</h3><blockquote><p>在less中，选择器的关系可以通过嵌套来表示</p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// less中的嵌套：less中选择器可以嵌套</span></span><br><span class="line"><span class="comment">// 1、后代选择器，选择器嵌套即可</span></span><br><span class="line"><span class="comment">// 2、子代选择器，前面使用&gt;</span></span><br><span class="line"><span class="comment">// 3、并集选择器，前面直接写,</span></span><br><span class="line"><span class="comment">// 4、交集选择器，前面使用&amp;（&amp;表示这一级选择器）</span></span><br><span class="line"><span class="comment">// 5、伪元素，前面使用&amp;（&amp;表示这一级选择器）</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.father</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">    </span><br><span class="line">   <span class="comment">// 后代的关系，直接嵌套即可</span></span><br><span class="line">  <span class="selector-class">.son</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: blue;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 子代选择器，前面加一个&gt;</span></span><br><span class="line">    &gt;<span class="selector-class">.sun</span> &#123;</span><br><span class="line">      <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">      <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">      <span class="attribute">background-color</span>: yellow;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  <span class="comment">// 并集选择器</span></span><br><span class="line">  <span class="selector-class">.box1</span>,</span><br><span class="line">  <span class="selector-class">.box2</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 交集选择器</span></span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-class">.active</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: red;</span><br><span class="line">  &#125;</span><br><span class="line">    </span><br><span class="line">  <span class="comment">// 伪元素</span></span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="————————"><a href="#————————" class="headerlink" title="————————"></a>————————</h5><h3 id="less的运算"><a href="#less的运算" class="headerlink" title="less的运算"></a>less的运算</h3><blockquote><p>在less代码中可以直接写加减乘除进行计算</p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 伪类的写法</span></span><br><span class="line">  <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="comment">// less中可以直接计算加减乘除计算的，编译之后会把计算的结果直接显示在css文件中。之后学习的rem布局中需要使用到less运算的功能</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span> / <span class="number">3</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span> * <span class="number">2</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span> + <span class="number">100</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span> - <span class="number">100</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="less的函数（了解）"><a href="#less的函数（了解）" class="headerlink" title="less的函数（了解）"></a>less的函数（了解）</h3><blockquote><p>针对于css中重复的样式，除了可以使用定义公共类的方式，还可以使用less中的函数来处理（函数在之后的js会详细说到，先简单了解下）</p></blockquote><p><strong>需求：</strong></p><blockquote><p>每一个选择器中的width和height代码都重复了，节省代码的方式</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.blue</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.green</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可以提取出一个公共类出来，然后给对应的标签上加公共类</li><li>也可以使用less中的函数，给选择器上使用函数也可以</li><li>语法：<strong><code>.函数名(){重复的样式}</code></strong> </li></ul><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在less中也一种处理重复样式的方法：函数。直接在选择器里面使用</span></span><br><span class="line"><span class="comment">// 函数的写法和定义公共类很像，后面需要加上括号</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义函数</span></span><br><span class="line"><span class="selector-class">.common</span>() &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">  <span class="comment">// 使用函数</span></span><br><span class="line">  <span class="selector-class">.common</span>();</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.blue</span> &#123;</span><br><span class="line">  <span class="selector-class">.common</span>();</span><br><span class="line">  <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.green</span> &#123;</span><br><span class="line">  <span class="selector-class">.common</span>();</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>拓展：</strong></p><p>函数里面可以传参，让函数中样式的取值变化（变化的量→变量）</p><blockquote><p>比如让红盒子<code>100*100</code>， 蓝盒子<code>200*200</code> ，绿盒子<code>300*300</code></p></blockquote><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.common</span>(<span class="variable">@value</span>) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="variable">@value</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="variable">@value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">  <span class="comment">// 使用函数</span></span><br><span class="line">  <span class="selector-class">.common</span>(<span class="number">100px</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.blue</span> &#123;</span><br><span class="line">  <span class="selector-class">.common</span>(<span class="number">200px</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.green</span> &#123;</span><br><span class="line">  <span class="selector-class">.common</span>(<span class="number">300px</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="ヾ-๑╹◡╹-ﾉ”-使用less实现京东头部"><a href="#ヾ-๑╹◡╹-ﾉ”-使用less实现京东头部" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 使用less实现京东头部"></a>ヾ(๑╹◡╹)ﾉ” 使用less实现京东头部</h5><blockquote><p>带同学们熟悉less写项目的操作</p></blockquote><ul><li><p>视口：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>全局容器</p></li></ul><h5 id="————————-1"><a href="#————————-1" class="headerlink" title="————————"></a>————————</h5><h1 id="rem布局"><a href="#rem布局" class="headerlink" title="rem布局"></a>rem布局</h1><h2 id="em和rem的认识"><a href="#em和rem的认识" class="headerlink" title="em和rem的认识"></a>em和rem的认识</h2><blockquote><p>在布局中，除了px之外，还有两个常见的单位，em和rem</p></blockquote><p><strong>em：</strong> 相对于当前元素的字体大小→ <code>1em = 当前标签的font-size</code></p><p><strong>rem：</strong> 相对于根元素（html）的字体大小→ <code>1rem = html标签的font-size</code></p><blockquote><p>浏览器默认的font-size的大小为16px</p></blockquote><p>之后会使用rem单位完成rem布局（等比例缩放）的效果</p><p><strong>rem布局的效果：</strong></p><ul><li>屏幕越大，标签就越大</li><li>屏幕越小，标签就越小</li></ul><p><strong>rem布局的原理：</strong></p><ul><li>当屏幕越大，让html标签的font-size变大即可</li><li>当屏幕越小，让html标签的font-size变小即可</li></ul><blockquote><p>怎么检测屏幕大小变化呢？通过媒体查询的方式动态改变html标签的font-size的大小</p></blockquote><h2 id="为什么要用rem布局"><a href="#为什么要用rem布局" class="headerlink" title="为什么要用rem布局"></a>为什么要用rem布局</h2><blockquote><p>之前的流式布局或者响应式布局并不能完美的显示设计图的效果，并不能解决所有屏幕适配的问题。而rem能做到：等比例的适配所有的屏幕。</p></blockquote><p><strong>现状：</strong></p><p>由于市面上手机种类繁多，导致移动端的屏幕种类非常的混乱，比如有常见的<code>320px 360px 375px 384px 480px 640px</code>等。在开发中，UI一般只会提供 <code>750px</code> 或者是 <code>640px</code> 的设计稿，这就要求我们通过一张设计稿能够适配所有的屏幕。常见的方案有以下：</p><ul><li><p><strong>流式布局：</strong> </p><blockquote><p>但是目前使用流式布局的网页还是较多的，比如 <a href="https://www.amazon.cn/" target="_blank" rel="noopener">亚马逊</a> </p></blockquote><ul><li>优点：各种屏幕都适配，都能看</li><li>缺点：只有当屏幕大小和设计图相同时才能完美还原设计图，其他屏幕下都会拉伸</li></ul></li><li><p><strong>响应式布局：</strong></p><blockquote><p>一般多用于简单的网页和从零开始的站点。</p></blockquote><ul><li>优点：一套页面可以适配多个客户端。</li><li>缺点：对于复杂的网页来说工作量太大，维护性太难。</li></ul></li><li><p><strong>rem布局：</strong></p><blockquote><p>与less配合使用更加方便，目前使用rem布局的有：<a href="https://m.taobao.com" target="_blank" rel="noopener">淘宝</a> 、 <a href="https://m.suning.com/" target="_blank" rel="noopener">苏宁</a></p></blockquote><ul><li>优点：rem布局盒子适配所有的屏幕，并且可以在多个屏幕大小中完美还原设计图（等比例缩放）</li></ul></li></ul><h5 id="————————-2"><a href="#————————-2" class="headerlink" title="————————"></a>————————</h5><h2 id="rem布局适配多个屏幕"><a href="#rem布局适配多个屏幕" class="headerlink" title="rem布局适配多个屏幕"></a>rem布局适配多个屏幕</h2><blockquote><p>rem布局适配的原理说白了，就是根据屏幕的大小，动态的改变html标签的font-size的大小，此时就可以配合媒体查询做到不同屏幕的适配</p></blockquote><p><strong>需求：</strong></p><p>当320设计图中div的宽高为200*200，此时要求使用rem适配 <code>375</code>、 <code>414</code>、<code>640</code>  的屏幕</p><ol><li><p>先把px的单位转换成rem单位——》需要除以html标签的font-size的大小</p><blockquote><p>针对于设计图的尺寸自定义一个好算的font-size的大小</p></blockquote></li><li><p>配合媒体查询适配不同的屏幕——》需要根据比例等比例缩放</p><blockquote><p>每一个屏幕的宽度与font-size的比例是相等的！！！</p><p>所以求出设计图尺寸的比例之后，之后的屏幕的font-size的值就是——》屏幕宽度/比例</p></blockquote></li></ol><p><strong>注意点：</strong></p><p>因为要求页面是<strong>等比例缩放</strong>的，所以：</p><p><code>屏幕1宽度/屏幕1html标签font-size</code> = <code>屏幕2宽度/屏幕2html标签font-size</code></p><blockquote><p>保证屏幕宽度与html标签font-size的比例相同，就可以轻松适配多个屏幕</p></blockquote><p><img src="\images\rem适配比例关系.png" alt="rem适配比例关系"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">适配320屏幕</span></span><br><span class="line"><span class="comment">屏幕宽度&gt;=320时生效</span></span><br><span class="line"><span class="comment">比例：3.2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">320px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">html</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">适配375屏幕</span></span><br><span class="line"><span class="comment">屏幕宽度&gt;=375时生效</span></span><br><span class="line"><span class="comment">fons-size=375/3.2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">375px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">html</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">117.1875px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">适配400屏幕</span></span><br><span class="line"><span class="comment">屏幕宽度&gt;=400时生效</span></span><br><span class="line"><span class="comment">font-size=400/3.2</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">400px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">html</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">125px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">414px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">html</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">129.375px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 把px单位换算成rem */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">2rem</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">2rem</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="苏宁易购"><a href="#苏宁易购" class="headerlink" title="苏宁易购"></a>苏宁易购</h1><blockquote><p><a href="https://m.suning.com/" target="_blank" rel="noopener">苏宁</a></p></blockquote><h2 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h2><ul><li><p>images文件夹</p></li><li><p>less文件夹（之后使用less写项目）</p><ul><li>有index.less</li><li>有base.less</li></ul></li><li><p>新建html页面</p><ul><li><p>引入css文件</p></li><li><p>移动端项目设置视口</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ul><ul><li>设置全局容器</li></ul><h2 id="rem布局首先进行适配工作"><a href="#rem布局首先进行适配工作" class="headerlink" title="rem布局首先进行适配工作"></a>rem布局首先进行适配工作</h2><p><strong>适配的步骤：</strong></p><ol><li>先适配设计图的屏幕大小（比如：750px），并且根据设计图屏幕大小定义一个html标签的font-size的大小（比如：50px），此时屏幕大小与font-size的比例为15</li><li>因为是等比例缩放的，所以每一个适配的屏幕大小与font-size的比例都是相同的，所以各个屏幕大小除以比例就能得出font-size的大小</li></ol><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 苏宁官网中适配了：750 720 540 480 424 414 400 384 375 360 320</span></span><br><span class="line"><span class="selector-class">.adapter</span>(<span class="variable">@width</span>) &#123;</span><br><span class="line">  <span class="keyword">@media</span> screen and (<span class="attribute">min-width</span>:<span class="variable">@width</span>) &#123;</span><br><span class="line">    <span class="selector-tag">html</span> &#123;</span><br><span class="line">      <span class="comment">// round(数值)：让这个数值四舍五入</span></span><br><span class="line">      <span class="comment">// round(数值，保留几位小数)</span></span><br><span class="line">      <span class="attribute">font-size</span>: round(<span class="variable">@width</span>/<span class="number">15</span>,<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.adapter</span>(<span class="number">320px</span>);</span><br><span class="line"><span class="selector-class">.adapter</span>(<span class="number">360px</span>);</span><br><span class="line"><span class="selector-class">.adapter</span>(<span class="number">375px</span>);</span><br><span class="line"><span class="selector-class">.adapter</span>(<span class="number">384px</span>);</span><br><span class="line"><span class="selector-class">.adapter</span>(<span class="number">400px</span>);</span><br><span class="line"><span class="selector-class">.adapter</span>(<span class="number">414px</span>);</span><br><span class="line"><span class="selector-class">.adapter</span>(<span class="number">424px</span>);</span><br><span class="line"><span class="selector-class">.adapter</span>(<span class="number">480px</span>);</span><br><span class="line"><span class="selector-class">.adapter</span>(<span class="number">540px</span>);</span><br><span class="line"><span class="selector-class">.adapter</span>(<span class="number">720px</span>);</span><br><span class="line"><span class="selector-class">.adapter</span>(<span class="number">750px</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 适配750的屏幕</span></span><br><span class="line"><span class="comment">// 定义设计图屏幕大小html的font-size值为50px，</span></span><br><span class="line"><span class="comment">// 比例为15</span></span><br><span class="line"><span class="comment">// @media screen and (min-width:750px) &#123;</span></span><br><span class="line"><span class="comment">//   html &#123;</span></span><br><span class="line"><span class="comment">//     font-size: 50px;</span></span><br><span class="line"><span class="comment">//   &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br></pre></td></tr></table></figure><h5 id="————————–"><a href="#————————–" class="headerlink" title="————————–"></a>————————–</h5><h2 id="px2rem插件的使用"><a href="#px2rem插件的使用" class="headerlink" title="px2rem插件的使用"></a>px2rem插件的使用</h2><blockquote><p>在写项目中，每一次都需要手动写式子把px转换成rem比较麻烦，此时可以使用vscode的插件，完成对应的效果</p></blockquote><ol><li><p>安装插件 <strong>px2rem</strong> </p><p><img src="\images\px2rem的安装.gif" alt="px2rem的安装"></p></li><li><p>每次写数字px之后，会有提示转换成rem，按下键回车即可</p></li><li><p>插件中默认html的font-size的大小为16px，所以默认是除以16的如果需要更改，需要进行配置（如：设计如是750，html标签的font-size的大小为50px，此时应该除以50）</p><blockquote><p>在设置中搜索px2rem，然后直接修改设置即可，<strong>注意设置完了之后需要重启才能生效！！</strong></p></blockquote><p><img src="\images\px2rem的设置.gif" alt="px2rem的设置"></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;《部分案例代码下载》&quot;&gt;&lt;a href=&quot;#《部分案例代码下载》&quot; class=&quot;headerlink&quot; title=&quot;《部分案例代码下载》&quot;&gt;&lt;/a&gt;&lt;a href=&quot;/download/移动webday06部分案例代码.zip&quot;&gt;《部分案例代码下载》&lt;/a&gt;&lt;
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
      <category term="移动web" scheme="http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8web/"/>
    
  </entry>
  
  <entry>
    <title>移动webday05笔记</title>
    <link href="http://yoursite.com/2020/02/06/1-%E7%A7%BB%E5%8A%A8webday05%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/02/06/1-移动webday05笔记/</id>
    <published>2020-02-06T02:00:05.000Z</published>
    <updated>2020-03-11T08:51:25.831Z</updated>
    
    <content type="html"><![CDATA[<h2 id="《部分案例代码下载》"><a href="#《部分案例代码下载》" class="headerlink" title="《部分案例代码下载》"></a><a href="/download/移动webday05部分案例代码.zip">《部分案例代码下载》</a></h2><h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><blockquote><ul><li style="list-style: none"><input type="checkbox"> 了解bootstrap的栅格系统的使用</li><li style="list-style: none"><input type="checkbox"> 能够完成微金所的头部</li><li style="list-style: none"><input type="checkbox"> 能够使用导航条组件完成微金所导航</li><li style="list-style: none"><input type="checkbox"> 能够完成微金所轮播图</li><li style="list-style: none"><input type="checkbox"> 能够完成微金所信息区块</li><li style="list-style: none"><input type="checkbox"> 能够完成微金所预约区块</li></ul><p>。。。。。。</p></blockquote><p><strong>理解上课的知识点……</strong></p><h1 id="bootstrap框架"><a href="#bootstrap框架" class="headerlink" title="bootstrap框架"></a>bootstrap框架</h1><blockquote><p>在之前使用媒体查询的方式能手动写出响应式的简单效果，但是非常的麻烦，代码非常的多。</p><p>在实际开发过程中，一般咱们会借助框架来完成响应式的开发，提高效率（但是底层仍然是媒体查询的原理）</p><p>Bootstrap，来自 Twitter，是目前很受欢迎的前端框架。Bootstrap 是基于 HTML、CSS、JAVASCRIPT 的，它简洁灵活，使得 Web 开发更加快捷。<a href="https://www.awesomes.cn/rank" target="_blank" rel="noopener">前端流行框架排名</a> </p></blockquote><h2 id="bootstrap的初体验"><a href="#bootstrap的初体验" class="headerlink" title="bootstrap的初体验"></a>bootstrap的初体验</h2><blockquote><p> bootstrap框架现阶段可以简单的当做别人写好的代码。想要用，先去下载下来</p><p> <a href="http://www.bootcss.com/" target="_blank" rel="noopener">bootstrap中文网</a> </p></blockquote><p><strong>版本：</strong></p><ul><li><p>2.x.x 停止维护</p><blockquote><p>做了很多兼容性处理，但是代码不够简洁，功能不够完善</p></blockquote></li><li><p>3.x.x <strong>目前使用较多</strong></p><blockquote><p>偏向于响应式开发布局，稳定。但是放弃了IE67的兼容，对IE8支持但是界面效果不友好</p></blockquote></li><li><p>4.x.x 阶段</p></li></ul><p><strong>注意点：</strong> Bootstrap中的  <strong>js功能效果依赖于 jQuery</strong> （ 第三方库, 后面有专门的课程讲解）</p><h3 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h3><blockquote><p>说白了，bootstrap框架就是别人写好的代码，类似于：需要使用别人写好的css文件，只需要直接引入即可</p></blockquote><ul><li><p><strong>引入文件</strong>：<code>&lt;link rel=&quot;stylesheet&quot; href=&quot;bootstrap/css/bootstrap.css&quot;&gt;</code></p></li><li><p>bootstrap样式文件中有一些简单的<strong>样式初始化</strong>，所以引入之后不用再引入 <code>base.css</code> 文件</p><blockquote><p>但是bootstrap并没有将所有样式都重置，所有之后还需要自己手动写代码重置</p></blockquote></li><li><p><strong>学习bootstrap框架说白了就是学习类（学习每一个类的含义）</strong></p><blockquote><p>比如：fl——》左浮动、fr——》右浮动、clearfix——》清除浮动</p></blockquote><p><strong>以部分按钮为例：</strong></p><p>|     类名     |             含义             |<br>| :———-: | :————————–: |<br>|     .btn     | 按钮的基础类（按钮必加的类） |<br>| .btn-success |           绿色按钮           |<br>| .btn-danger  |           红色按钮           |<br>| .btn-primary |           深蓝按钮           |<br>| .btn-default |           白色按钮           |</p></li></ul><h2 id="bootstrap的布局容器"><a href="#bootstrap的布局容器" class="headerlink" title="bootstrap的布局容器"></a>bootstrap的布局容器</h2><blockquote><p>之前给一个盒子设置响应式布局（不同屏幕下版心不同，移动端宽度100%），代码写了很多很麻烦</p><p>但是使用bootstrap框架之后就非常方便，框架中响应式的框架已经写好的，使用的之后直接给标签加类即可</p></blockquote><h3 id="响应式布局容器（-container）"><a href="#响应式布局容器（-container）" class="headerlink" title="响应式布局容器（.container）"></a>响应式布局容器（.container）</h3><blockquote><p><strong>比较常用</strong></p></blockquote><p><img src="\images\container容器.gif" alt="container容器"></p><ul><li><p>设置了该类的盒子，在不同屏幕下有不同的版心，到了移动端宽度为100%（之前写的效果一样）</p><blockquote><p>底层原理：就是之前写的媒体查询</p></blockquote></li><li><p>设置了该类的盒子，左右有默认15px的padding</p><blockquote><p>写框架的作者觉得内容直接贴两边不好看，就设置了左右15px的padding</p></blockquote></li></ul><h3 id="流式布局容器（-container-fluid）（了解）"><a href="#流式布局容器（-container-fluid）（了解）" class="headerlink" title="流式布局容器（.container-fluid）（了解）"></a>流式布局容器（.container-fluid）（了解）</h3><blockquote><p><strong>了解即可</strong></p></blockquote><p><img src="\images\container-fluid容器.gif" alt="container-fluid容器"></p><ul><li>设置了该类的盒子，宽度永远是100%</li><li>设置了该类的盒子，左右也有默认15px的padding</li></ul><h3 id="抵消父元素padding的类（-row）（了解）"><a href="#抵消父元素padding的类（-row）（了解）" class="headerlink" title="抵消父元素padding的类（.row）（了解）"></a>抵消父元素padding的类（.row）（了解）</h3><blockquote><p>bootstrap中的布局容器默认都设置了左右15px的padding。</p><p>如果不需要这个效果，除了<strong>可以通过选择器padding:0;直接覆盖</strong>，还<strong>可以通过.row类去掉</strong></p></blockquote><ul><li><p>设置了该类的子盒子，会抵消父元素左右15px的padding</p><blockquote><p>底层原理：通过margin为负值实现</p></blockquote></li></ul><h2 id="栅格系统（重点）"><a href="#栅格系统（重点）" class="headerlink" title="栅格系统（重点）"></a>栅格系统（重点）</h2><blockquote><p>在bootstrap中会把一行分成12列，通过对应的类名实现每个盒子宽度的动态变化</p><p>其实其中的原理大家一秒能懂</p></blockquote><h3 id="栅格系统的模拟"><a href="#栅格系统的模拟" class="headerlink" title="栅格系统的模拟"></a>栅格系统的模拟</h3><p><strong>需求：</strong> 响应式容器中有两个盒子，只在大屏设备中宽度各占一半一行中显示，其他屏幕占满一行</p><ul><li>使用之前的方法：浮动 + 宽度百分比 + 媒体查询 可以实现</li></ul><hr><ul><li><p>其实在bootstrap中，也可以通过类完成以上效果（如：给两个盒子设置<code>.col-lg-6</code>）</p><blockquote><p>底层原理也是通过：浮动 + 宽度百分比 + 媒体查询 做到的。</p></blockquote></li></ul><h3 id="栅格系统的介绍"><a href="#栅格系统的介绍" class="headerlink" title="栅格系统的介绍"></a>栅格系统的介绍</h3><blockquote><p>bootstrap中将一行分成了12份（12份更容易分配盒子的空间）</p></blockquote><p><strong>底层原理：</strong> <strong>浮动（一行中显示） + 百分比（宽度均分） + 媒体查询（不同屏幕时才生效）</strong></p><p><strong>比如： </strong><code>.col-lg-6</code> 表示在大屏及以上屏幕生效，盒子宽度为一行的6/12——》50%；浮动在一行中显示</p><p><strong>语法：</strong></p><h5 id="col-取值1-取值2"><a href="#col-取值1-取值2" class="headerlink" title=".col-取值1-取值2"></a><code>.col-取值1-取值2</code></h5><table><thead><tr><th style="text-align:center">取值1</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">lg</td><td style="text-align:center">大屏及以上屏幕时生效</td></tr><tr><td style="text-align:center">md</td><td style="text-align:center">中屏及以上屏幕时生效</td></tr><tr><td style="text-align:center">sm</td><td style="text-align:center">小屏及以上屏幕时生效</td></tr><tr><td style="text-align:center">xs</td><td style="text-align:center">超小屏及以上屏幕生效（所有屏幕生效）</td></tr></tbody></table><p><strong>取值2：</strong> 份数（0~12）</p><blockquote><p>表示在一行中的宽度占几份</p></blockquote><h3 id="栅格系统的练习"><a href="#栅格系统的练习" class="headerlink" title="栅格系统的练习"></a>栅格系统的练习</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    需求:  响应式布局容器中一共有 12 个div</span></span><br><span class="line"><span class="comment">      如果是大屏幕设备, 每行放 6 个 div,  共两行</span></span><br><span class="line"><span class="comment">      如果是中屏设备,   每行放 4 个 div,  共三行</span></span><br><span class="line"><span class="comment">      如果是小屏设备,   每行放 3 个 div,  共四行</span></span><br><span class="line"><span class="comment">      如果是超小屏设备, 每行放 2 个 div,  共六行</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    .col-取值1-取值2</span></span><br><span class="line"><span class="comment">      lg：大屏及以上生效</span></span><br><span class="line"><span class="comment">      md：中屏及以上生效</span></span><br><span class="line"><span class="comment">      sm：小屏及以上生效</span></span><br><span class="line"><span class="comment">      xs：所有屏幕都生效</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br></pre></td></tr></table></figure><h5 id="ヾ-๑╹◡╹-ﾉ”-写微金所新手体验模块的响应式效果"><a href="#ヾ-๑╹◡╹-ﾉ”-写微金所新手体验模块的响应式效果" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 写微金所新手体验模块的响应式效果"></a>ヾ(๑╹◡╹)ﾉ” 写微金所新手体验模块的响应式效果</h5><blockquote><p>栅格系统中一般先从小屏开始写！</p></blockquote><h5 id="————————–"><a href="#————————–" class="headerlink" title="————————–"></a>————————–</h5><h2 id="bootstrap全局样式阅读（了解）"><a href="#bootstrap全局样式阅读（了解）" class="headerlink" title="bootstrap全局样式阅读（了解）"></a>bootstrap全局样式阅读（了解）</h2><blockquote><p><a href="https://v3.bootcss.com/css/" target="_blank" rel="noopener">bootstrap全局样式</a></p></blockquote><p><strong>排版：对齐</strong></p><blockquote><p>底层原理：就是一个text-align：left/center/right</p></blockquote><table><thead><tr><th style="text-align:center">类名</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">.text-left</td><td style="text-align:center">文本左对齐</td></tr><tr><td style="text-align:center">.text-center</td><td style="text-align:center">文本居中对齐</td></tr><tr><td style="text-align:center">.text-right</td><td style="text-align:center">文本右对齐</td></tr></tbody></table><p><strong>表格：基本（了解）</strong></p><table><thead><tr><th style="text-align:center">类名</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">.table</td><td style="text-align:center">表格的基本样式（配合thead和tbody使用）</td></tr><tr><td style="text-align:center">.table-striped</td><td style="text-align:center">隔行变色</td></tr></tbody></table><p><strong>按钮：颜色</strong></p><blockquote><p>按钮需要加上基本类 <code>.btn</code></p></blockquote><table><thead><tr><th style="text-align:center">类名</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">.btn-danger</td><td style="text-align:center">红色按钮</td></tr><tr><td style="text-align:center">.btn-success</td><td style="text-align:center">绿色按钮</td></tr><tr><td style="text-align:center">.btn-primary</td><td style="text-align:center">深蓝按钮</td></tr><tr><td style="text-align:center">.btn-default</td><td style="text-align:center">白色按钮</td></tr><tr><td style="text-align:center">.btn-info（了解）</td><td style="text-align:center">浅蓝按钮</td></tr><tr><td style="text-align:center">.btn-warning（了解）</td><td style="text-align:center">黄色按钮</td></tr><tr><td style="text-align:center">.btn-link（了解）</td><td style="text-align:center">链接按钮</td></tr></tbody></table><p><strong>按钮：尺寸</strong></p><blockquote><p>按钮默认是中按钮</p></blockquote><table><thead><tr><th style="text-align:center">类名</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">.btn-lg</td><td style="text-align:center">大按钮</td></tr><tr><td style="text-align:center">.btn-sm</td><td style="text-align:center">小按钮</td></tr><tr><td style="text-align:center">.btn-xs</td><td style="text-align:center">超小按钮</td></tr></tbody></table><h2 id="响应式工具介绍"><a href="#响应式工具介绍" class="headerlink" title="响应式工具介绍"></a>响应式工具介绍</h2><blockquote><p>在响应式布局中，有时候会设置不同屏幕下元素的显示或者隐藏</p></blockquote><p><strong>需求：</strong> 一个盒子大屏、中屏显示，小屏、超小屏隐藏</p><ul><li>自己通过媒体查询实现</li></ul><hr><ul><li>使用bootstrap中预定的.hidden相关类实现</li></ul><p><strong>代码：</strong></p><blockquote><p>bootstrap中预定了一些类，可以控制盒子的显示或者隐藏</p></blockquote><table><thead><tr><th style="text-align:center">类名</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">.hidden</td><td style="text-align:center">所有屏幕都隐藏</td></tr><tr><td style="text-align:center">.hidden-xs</td><td style="text-align:center">只在超小屏隐藏</td></tr><tr><td style="text-align:center">.hidden-sm</td><td style="text-align:center">只在小屏隐藏</td></tr><tr><td style="text-align:center">.hidden-md</td><td style="text-align:center">只在中屏隐藏</td></tr><tr><td style="text-align:center">.hidden-lg</td><td style="text-align:center">只在大屏隐藏</td></tr></tbody></table><h2 id="组件介绍（了解）"><a href="#组件介绍（了解）" class="headerlink" title="组件介绍（了解）"></a>组件介绍（了解）</h2><blockquote><p>组件比全局样式会多出一些功能出来，但是注意这些功能需要配合js文件一起使用</p></blockquote><p><strong>组件：字体图标</strong></p><blockquote><p>在bootstrap内部，内置了字体图标，只需要直接复制粘贴类名即可</p></blockquote><p><strong>比如：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-heart"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>组件：导航条</strong></p><blockquote><p>bootstrap中已经写好导航条的代码，使用的时候直接复制粘贴即可</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-default"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container-fluid"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-toggle collapsed"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span> <span class="attr">data-target</span>=<span class="string">"#bs-example-navbar-collapse-1"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Brand<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapse navbar-collapse"</span> <span class="attr">id</span>=<span class="string">"bs-example-navbar-collapse-1"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"sr-only"</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span>&gt;</span>Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"separator"</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"separator"</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>One more separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"navbar-form navbar-left"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Search"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span>&gt;</span>Submit<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav navbar-right"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span> <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"false"</span>&gt;</span>Dropdown <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">"separator"</span> <span class="attr">class</span>=<span class="string">"divider"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意点：</strong></p><ul><li>如果需要实现组件中如导航条的功能，需要引入bootstrap中的js文件才行</li><li>bootstrap中的js需要依赖与jquery这个js文件的，所以需要一起引入jquery这个js文件才能生效！</li><li>js文件通过script的src属性引入</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./jquery/jquery-1.12.4.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./bootstrap/js/bootstrap.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="—————————"><a href="#—————————" class="headerlink" title="—————————"></a>—————————</h5><h1 id="微金所项目"><a href="#微金所项目" class="headerlink" title="微金所项目"></a>微金所项目</h1><h2 id="微金所项目搭建"><a href="#微金所项目搭建" class="headerlink" title="微金所项目搭建"></a>微金所项目搭建</h2><ul><li><p>新建项目文件夹</p><ul><li><p>images文件夹：放项目需要的图片</p></li><li><p>css文件夹：放自己写的css文件</p></li><li><p>fonts文件夹：放自己项目的字体图标文件</p><blockquote><p>虽然bootstrap框架中内置了字体图标，但是实际开发中设计师会针对每个网页单独设计字体图标，使用方法和基础班一样</p></blockquote></li><li><p><strong>lib文件夹</strong>：放项目中框架相关的代码</p><blockquote><p>lib文件夹中一般放框架（别人写好的代码）相关的代码</p></blockquote></li></ul></li><li><p>放入.ico图标</p></li><li><p>在 <code>index.html</code> 文件中引入相关文件</p><ul><li><p>引入.ico图标</p></li><li><p>引入字体图标文件</p></li><li><p>引入框架的css文件和js文件和jquery文件（因为bootstrap框架中的js依赖jquery）</p><blockquote><p>知道引入js之后能生效即可，js之后会详细去说</p></blockquote></li><li><p>引入自己写的css文件</p></li></ul></li></ul><h2 id="微金所模块划分"><a href="#微金所模块划分" class="headerlink" title="微金所模块划分"></a>微金所模块划分</h2><p><img src="\images\微金所模块划分.png" alt=""></p><h2 id="响应式项目的思路"><a href="#响应式项目的思路" class="headerlink" title="响应式项目的思路"></a>响应式项目的思路</h2><ol><li><p>先看有没有响应式版心（版心会不会跟随屏幕大小变化而变化）</p><blockquote><p>如果有响应式版心，设置 <code>.container</code> 即可</p></blockquote></li><li><p>在响应式版心中分配每一个盒子的空间</p><blockquote><p>利用栅格系统进行空间的分配</p></blockquote></li><li><p>设置整体大模块是否有显示与隐藏，直接给大模块设置hidden相关属性即可</p></li></ol><h2 id="bootstrap导航条的改写（不做要求）"><a href="#bootstrap导航条的改写（不做要求）" class="headerlink" title="bootstrap导航条的改写（不做要求）"></a>bootstrap导航条的改写（不做要求）</h2><blockquote><p>在bootstrap文档的组件中，有写好的导航条的代码，使用的时候直接复制改写即可。</p><p>因为现在还没学js等相关内容，所以对于以下改写的内容同学们可以直接复制改好的代码，现在学习的重点在于之后样式的覆盖（如果能理解是一种进阶）</p></blockquote><p><strong>改写前先把不需要的属性和标签删除：</strong></p><blockquote><p>以下属性和标签，在改写过程中可以直接删除，因为是给盲人设备使用的，删除之后便于理解结构（不删也可以）</p></blockquote><ul><li><code>aria-</code> 开头的属性，该属性可以直接删除</li><li><code>role</code> 属性，该属性可以直接删除</li><li>有 <code>sr-only</code> 类的标签，该标签可以直接删除 </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"navbar navbar-default"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 有版心的布局容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 小屏设备显示的左边大标题和右边切换按钮的组合 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"navbar-header"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 小屏下右边的按钮 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"navbar-toggle collapsed"</span> <span class="attr">data-toggle</span>=<span class="string">"collapse"</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">data-target</span>=<span class="string">"#bs-example-navbar-collapse-1"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"icon-bar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 左边的大标题 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"navbar-brand"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>左边的大标题<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!---------------------------------------------------------------------------------------&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 用于切换显示内容的结构 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"collapse navbar-collapse"</span> <span class="attr">id</span>=<span class="string">"bs-example-navbar-collapse-1"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 左侧的导航 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>我要投资<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>我要借贷<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>平台介绍<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>新手专区<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>最新动态<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>微平台<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 右侧的导航 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav navbar-right"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>个人中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="bootstrap标签页（tab栏）的改写"><a href="#bootstrap标签页（tab栏）的改写" class="headerlink" title="bootstrap标签页（tab栏）的改写"></a>bootstrap标签页（tab栏）的改写</h2><blockquote><p>在bootstrap文本的JavaScript插件中，有写好的标签页（tab栏）的代码，使用的时候直接复制改写即可。</p></blockquote><p><strong>改写前先把不需要的属性和标签删除：</strong></p><ul><li><code>aria-</code> 开头的属性，该属性可以直接删除</li><li><code>role</code> 属性，该属性可以直接删除</li><li>有 <code>sr-only</code> 类的标签，该标签可以直接删除 </li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">    1、先去除没用的标签和属性</span></span><br><span class="line"><span class="comment">        1、aria-开头的属性，属性都删除</span></span><br><span class="line"><span class="comment">        2、role属性，该属性删除</span></span><br><span class="line"><span class="comment">        3、有sr-only类的标签，该标签直接删除</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    2、bootstrap中，data-开头的属性，是用于添加js功能的，不要删除</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    3、通过id属性将导航的按钮和面板绑定起来，所以id属性需要一一对应才行</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    原理：点击某一个导航按钮时，让对应的导航面板显示，其他面板都隐藏即可！！！</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 用于点击切换的按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav nav-tabs"</span> <span class="attr">role</span>=<span class="string">"tablist"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"active"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#product01"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>特别推荐<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#product02"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>微平台1<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#product03"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>微平台2<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#product04"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>微平台3<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#product05"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>微平台4<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#product06"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>微平台5<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#product07"</span> <span class="attr">data-toggle</span>=<span class="string">"tab"</span>&gt;</span>微平台6<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 用于点击切换的面板 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane active"</span> <span class="attr">id</span>=<span class="string">"product01"</span>&gt;</span>111<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane"</span> <span class="attr">id</span>=<span class="string">"product02"</span>&gt;</span>222<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane"</span> <span class="attr">id</span>=<span class="string">"product03"</span>&gt;</span>333<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane"</span> <span class="attr">id</span>=<span class="string">"product04"</span>&gt;</span>444<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane"</span> <span class="attr">id</span>=<span class="string">"product05"</span>&gt;</span>555<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane"</span> <span class="attr">id</span>=<span class="string">"product06"</span>&gt;</span>666<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tab-pane"</span> <span class="attr">id</span>=<span class="string">"product07"</span>&gt;</span>777<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;《部分案例代码下载》&quot;&gt;&lt;a href=&quot;#《部分案例代码下载》&quot; class=&quot;headerlink&quot; title=&quot;《部分案例代码下载》&quot;&gt;&lt;/a&gt;&lt;a href=&quot;/download/移动webday05部分案例代码.zip&quot;&gt;《部分案例代码下载》&lt;/a&gt;&lt;
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
      <category term="移动web" scheme="http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8web/"/>
    
  </entry>
  
  <entry>
    <title>移动webday04笔记</title>
    <link href="http://yoursite.com/2020/02/06/1-%E7%A7%BB%E5%8A%A8webday04%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/02/06/1-移动webday04笔记/</id>
    <published>2020-02-06T02:00:04.000Z</published>
    <updated>2020-03-11T08:51:18.931Z</updated>
    
    <content type="html"><![CDATA[<h2 id="《部分案例代码下载》"><a href="#《部分案例代码下载》" class="headerlink" title="《部分案例代码下载》"></a><a href="/download/移动webday04部分案例代码.zip">《部分案例代码下载》</a></h2><h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><blockquote><ul><li style="list-style: none"><input type="checkbox"> 能够说出伸缩布局的主轴对齐方式和侧轴对齐方式</li><li style="list-style: none"><input type="checkbox"> 能够说出如何让伸缩布局换行</li><li style="list-style: none"><input type="checkbox"> 能够完成六面神骰</li><li style="list-style: none"><input type="checkbox"> 了解响应式开发的原理</li></ul><p>。。。。。。</p></blockquote><p><strong>理解上课的知识点……</strong></p><h1 id="flex布局（弹性布局）"><a href="#flex布局（弹性布局）" class="headerlink" title="flex布局（弹性布局）"></a>flex布局（弹性布局）</h1><blockquote><p>通过给父元素添加flex属性，调整子元素在水平和垂直方向上的位置</p></blockquote><p><img src="\images\传统布局和flex布局对比.png" alt="传统布局和flex布局对比"></p><p><strong>布局方法的选取：</strong></p><ul><li><p>如果是pc端页面布局，我们一般还是考虑传统布局方式</p></li><li><p>如果是移动端或者不考虑兼容性问题的pc端页面布局，我们一般就可以考虑flex弹性布局</p><blockquote><p>如果不用考虑兼容性问题，flex布局会更加方便</p></blockquote></li></ul><h2 id="flex布局的初体验"><a href="#flex布局的初体验" class="headerlink" title="flex布局的初体验"></a>flex布局的初体验</h2><h5 id="ヾ-๑╹◡╹-ﾉ”-让一个子盒子在父盒子中水平垂直居中"><a href="#ヾ-๑╹◡╹-ﾉ”-让一个子盒子在父盒子中水平垂直居中" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 让一个子盒子在父盒子中水平垂直居中"></a>ヾ(๑╹◡╹)ﾉ” 让一个子盒子在父盒子中水平垂直居中</h5><ul><li><p>之前使用子绝父相完成</p></li><li><p>通过flex布局，三行代码完成</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 设置当前盒子为弹性盒子*/</span></span><br><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">flex</span>;</span><br><span class="line"><span class="comment">/* 设置主轴方向的对齐方式：justify-content */</span></span><br><span class="line"><span class="selector-tag">justify-content</span>: <span class="selector-tag">center</span>;</span><br><span class="line"><span class="comment">/* 设置侧轴方向的对齐方式：align-items */</span></span><br><span class="line"><span class="selector-tag">align-items</span>: <span class="selector-tag">center</span>;</span><br></pre></td></tr></table></figure></li></ul><p>设置了 <code>display：flex;</code> 的盒子会变成一个<strong>弹性盒子</strong>。弹性盒子会多出了<strong>主轴</strong>和<strong>侧轴</strong>的概念。</p><p><strong>主轴：</strong> <strong>默认水平向右</strong> （类似于x轴）</p><p><strong>侧轴：</strong>与主轴垂直的就是侧轴，<strong>默认垂直向下</strong>（类似于y轴）</p><p>弹性盒子内部的<strong>子元素会默认沿着主轴方向</strong> 排布，默认水平向右布局。（类似于羊肉串）</p><hr><blockquote><p>接下来学习一些flex布局中相关的属性</p></blockquote><h2 id="主轴方向（flex-direction）（了解）"><a href="#主轴方向（flex-direction）（了解）" class="headerlink" title="主轴方向（flex-direction）（了解）"></a>主轴方向（flex-direction）（了解）</h2><blockquote><p>弹性盒子中主轴方向默认是水平向右的。</p><p>但是其实可以通过<code>flex-diretion</code> 属性修改主轴的方向（一般很少改变）</p></blockquote><p><strong>取值（主轴方向）：</strong></p><table><thead><tr><th style="text-align:center">取值</th><th style="text-align:center">效果（主轴方向）</th></tr></thead><tbody><tr><td style="text-align:center">row</td><td style="text-align:center">水平向右（默认）</td></tr><tr><td style="text-align:center">row-reverse</td><td style="text-align:center">水平向左</td></tr><tr><td style="text-align:center">column</td><td style="text-align:center">垂直向下</td></tr><tr><td style="text-align:center">column-reverse</td><td style="text-align:center">垂直向上</td></tr></tbody></table><h2 id="主轴对齐方式（justify-content）（重点）"><a href="#主轴对齐方式（justify-content）（重点）" class="headerlink" title="主轴对齐方式（justify-content）（重点）"></a>主轴对齐方式（justify-content）（重点）</h2><blockquote><p>元素在主轴上排布，可以通过 <code>justify-content</code> 属性设置元素的对齐方式</p></blockquote><p><strong>取值：</strong></p><ul><li><p><strong>flex-start：向主轴的开始位置对齐</strong></p><blockquote><p>默认相当于左对齐</p></blockquote><p><img src="\images\flex-start.png" alt="flex-start"></p></li><li><p><strong>flex-end：向主轴的结束位置对齐</strong></p><blockquote><p>默认相当于右对齐</p></blockquote><p><img src="\images\flex-end.png" alt="flex-end"></p></li><li><p><strong>center：居中对齐</strong></p><p><img src="\images\center.png" alt="center"></p></li><li><p><strong>space-around：让空白环绕盒子显示</strong></p><p><img src="\images\space-around.png" alt="space-around"></p></li><li><p><strong>space-between：让空白只在盒子之间显示</strong></p><p><img src="\images\space-between.png" alt="space-between"></p></li></ul><h2 id="单行侧轴对齐方式（align-items）（重点）"><a href="#单行侧轴对齐方式（align-items）（重点）" class="headerlink" title="单行侧轴对齐方式（align-items）（重点）"></a>单行侧轴对齐方式（align-items）（重点）</h2><blockquote><p>可以通过 <code>align-items</code> 设置单行元素在侧轴的对齐方式。 </p></blockquote><p><strong>取值：</strong></p><ul><li><p><strong>flex-start：向侧轴的开始位置对齐</strong></p><p><img src="\images\aflex-start.png" alt="aflex-start"></p></li><li><p><strong>flex-end：向侧轴的结束位置对齐</strong></p><p><img src="\images\aflex-end.png" alt="aflex-end"></p></li><li><p><strong>center：居中对齐</strong></p><p><img src="\images\acenter.png" alt="acenter"></p></li><li><p><strong>stretch：让子盒子的高度拉伸显示（默认值）</strong></p><blockquote><p>只有当子元素没有高度时，才会有拉伸效果（否则以设置的高度为准）</p></blockquote><p><img src="\images\astretch.png" alt="astretch"></p></li></ul><hr><h2 id="是否换行（flex-wrap）"><a href="#是否换行（flex-wrap）" class="headerlink" title="是否换行（flex-wrap）"></a>是否换行（flex-wrap）</h2><blockquote><p>flex布局中，默认是单行显示的，如果子元素的宽度之和超出了父元素的宽度，此时子盒子会默认压缩显示。</p><p>此时，如果需要设置子元素换行显示，可以使用属性 <code>flex-wrap</code></p></blockquote><p><strong>取值：</strong></p><table><thead><tr><th style="text-align:center">属性值</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">nowrap</td><td style="text-align:center">不换行（默认值）</td></tr><tr><td style="text-align:center">wrap</td><td style="text-align:center">换行</td></tr></tbody></table><h2 id="多行侧轴对齐方式（align-content）"><a href="#多行侧轴对齐方式（align-content）" class="headerlink" title="多行侧轴对齐方式（align-content）"></a>多行侧轴对齐方式（align-content）</h2><blockquote><p>之前学习的 <code>align-items</code> 只是针对于单行元素的侧轴对齐方式。</p><p>如果需要设置多行元素的侧轴对齐方式，此时需要使用 <code>align-content</code> 才行</p></blockquote><p><strong>取值（和align-items差不多）：</strong></p><table><thead><tr><th style="text-align:center">取值</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">flex-start</td><td style="text-align:center">向侧轴的开始位置对齐</td></tr><tr><td style="text-align:center">flex-end</td><td style="text-align:center">向侧轴的结束位置对齐</td></tr><tr><td style="text-align:center">center</td><td style="text-align:center">居中对齐</td></tr><tr><td style="text-align:center">stretch</td><td style="text-align:center">子元素高度拉伸显示（只有没设高才有效果）</td></tr><tr><td style="text-align:center">space-around</td><td style="text-align:center">空白环绕盒子显示</td></tr><tr><td style="text-align:center">space-between</td><td style="text-align:center">空白只在盒子之间显示</td></tr></tbody></table><p><strong>align-items与align-content的区别：</strong></p><ul><li>如果子元素没有换行，<strong>只有一行</strong>的时候使用 <code>align-items</code></li><li>如果子元素有<strong>多行</strong>，此时使用 <code>align-content</code></li></ul><hr><h5 id="—————"><a href="#—————" class="headerlink" title="—————-"></a>—————-</h5><p>学习到这里，给父元素设置的相关样式已经说完了，稍微小结一下！</p><hr><p>以下都是给子元素设置的相关属性~</p><h2 id="分配子元素空间（flex属性）"><a href="#分配子元素空间（flex属性）" class="headerlink" title="分配子元素空间（flex属性）"></a>分配子元素空间（flex属性）</h2><blockquote><p>可以通过flex属性设置子元素的分配的空间</p></blockquote><p><strong>需求：</strong> 让弹性盒子中的三个子元素等分！</p><p><strong>作用：</strong> 按照份数分配父元素主轴（宽度）的剩余空间</p><blockquote><p>优先分配具体的宽度，剩余的空间再按照分数分配。</p></blockquote><p><strong>代码：</strong> <code>flex:份数;</code></p><p><strong>通过flex属性可以很轻松的完成圣杯布局。</strong></p><h2 id="子元素排序（order属性）-了解"><a href="#子元素排序（order属性）-了解" class="headerlink" title="子元素排序（order属性）(了解)"></a>子元素排序（order属性）(了解)</h2><blockquote><p>在不能修改html结构的时候，要求改变子元素的属性，此时可以使用order属性设置</p></blockquote><p><strong>需求：</strong> 让弹性盒子中第二个子元素显示在左边第一个？？</p><p><strong>作用：</strong> 设置弹性盒子中子元素的排列顺序，<strong>数值越小，排列靠前，默认是0</strong></p><p><strong>代码：</strong> <code>order：数字;</code></p><h2 id="单个子元素侧轴对齐方式（align-self）"><a href="#单个子元素侧轴对齐方式（align-self）" class="headerlink" title="单个子元素侧轴对齐方式（align-self）"></a>单个子元素侧轴对齐方式（align-self）</h2><blockquote><p>可以通过 <code>align-self</code> 属性设置单个子元素侧轴的对齐方式</p></blockquote><p><strong>需求：</strong> 让父元素中的单行子元素居中，然后让第一个子元素跑到侧轴开始位置！</p><p><strong>作用：</strong> 设置单个子元素在侧轴的对齐方式</p><p><strong>取值（和align-items取值一样）：</strong></p><table><thead><tr><th style="text-align:center">取值</th><th style="text-align:center">效果</th></tr></thead><tbody><tr><td style="text-align:center">flex-start</td><td style="text-align:center">向侧轴的开始位置对齐（默认相当于顶部对齐）</td></tr><tr><td style="text-align:center">flex-end</td><td style="text-align:center">向侧轴的结束位置对齐（默认相当于底部对齐）</td></tr><tr><td style="text-align:center">center</td><td style="text-align:center">居中对齐</td></tr><tr><td style="text-align:center">stretch</td><td style="text-align:center">子元素高度拉伸显示（只有没设高才有效果）</td></tr></tbody></table><blockquote><p>对于其他内容有兴趣可以看看<a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noopener">阮一峰的博客</a></p></blockquote><h5 id="ヾ-๑╹◡╹-ﾉ”-六面神骰"><a href="#ヾ-๑╹◡╹-ﾉ”-六面神骰" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 六面神骰"></a>ヾ(๑╹◡╹)ﾉ” 六面神骰</h5><h5 id="———————–"><a href="#———————–" class="headerlink" title="———————–"></a>———————–</h5><h1 id="携程网移动端首页项目"><a href="#携程网移动端首页项目" class="headerlink" title="携程网移动端首页项目"></a>携程网移动端首页项目</h1><blockquote><p><a href="https://m.ctrip.com/html5/" target="_blank" rel="noopener">携程网移动端</a></p></blockquote><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><ul><li>方案：单独制作移动端页面</li><li>技术：采用flex布局</li></ul><h2 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h2><blockquote><p>和之前的操作一样</p></blockquote><ul><li><p>新建一个项目文件夹</p><ul><li><p>新建images文件夹：放入常用的图片资源</p></li><li><p>新建css文件夹：放入index.css</p></li></ul></li></ul><h2 id="代码的编写"><a href="#代码的编写" class="headerlink" title="代码的编写"></a>代码的编写</h2><ul><li><p><strong>视口</strong>需要设置完整：</p><blockquote><p>移动端开发第一个注意点</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在html中引入css文件</p></li><li><p>移动端网页整体需要有一个<strong>整体的大容器</strong></p><ul><li>可以直接把body当做整体大容器</li><li>或者设置一个全局容器：container</li></ul></li><li><p>先把整个网页的各个模块划分好</p><ul><li><strong>携程轮播：xc_banner</strong></li><li><strong>携程导航：xc_nav</strong></li><li><strong>携程产品：xc_product</strong></li><li><strong>携程底部：xc_footer</strong></li></ul></li><li><p>再每一个部分写</p></li></ul><h1 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h1><blockquote><p>响应式布局（respond layout）是Ethan Marcotte在2010年5月份提出的一个概念，简而言之，就是<strong>一个网站能够兼容多个终端（pc、手机、平板）</strong></p></blockquote><h2 id="什么是响应式布局"><a href="#什么是响应式布局" class="headerlink" title="什么是响应式布局"></a>什么是响应式布局</h2><p><strong>单独制作移动端页面方案（主流）：</strong> </p><blockquote><p>同一个页面需要开发两套不同设备的版本</p></blockquote><ul><li>pc端需要开发写一套页面，专门给pc端看</li><li>移动端再开发一套页面，专门给移动端看</li></ul><p><strong>响应式布局方案（较少）：</strong></p><blockquote><p>同一个页面只需要开发一套网页</p></blockquote><ul><li>只需要写一套代码，同时给pc端和移动端看</li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”-看看微金所项目"><a href="#ヾ-๑╹◡╹-ﾉ”-看看微金所项目" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”  看看微金所项目~"></a>ヾ(๑╹◡╹)ﾉ”  看看微金所项目~</h5><h2 id="响应式开发的原理（记忆）"><a href="#响应式开发的原理（记忆）" class="headerlink" title="响应式开发的原理（记忆）"></a>响应式开发的原理（记忆）</h2><p><strong><em>动态根据当前屏幕的宽度，自动改变页面中盒子的宽度、盒子的显示或隐藏</em></strong></p><h2 id="响应式开发的优缺点"><a href="#响应式开发的优缺点" class="headerlink" title="响应式开发的优缺点"></a>响应式开发的优缺点</h2><p><strong>优点：</strong> </p><ul><li>一套网页可以适配多个终端。只需要开发一套网页即可</li></ul><p><strong>缺点： </strong></p><ul><li>一个页面需要兼容多个终端，考虑的情况多种，开发效率较慢</li><li>代码会更多，网页的加载速度较慢</li></ul><h2 id="响应式开发的现状"><a href="#响应式开发的现状" class="headerlink" title="响应式开发的现状"></a>响应式开发的现状</h2><blockquote><p>在国内并不是很流行，国外较多</p></blockquote><ul><li><p>如果已经有了一套pc端网页，此时直接再写一套移动端网页即可，此时不需要使用响应式布局（比如：京东、淘宝）</p></li><li><p>如果开发一套网页都没有，是<strong>新建的项目</strong>，此时可以考虑使用响应式，写一套即可兼容多个设备。</p></li><li><p>比较<strong>简单的网页</strong>，可以考虑使用响应式，但是复杂的网页考虑的情况会很多，一般不用。</p></li></ul><h5 id="——————"><a href="#——————" class="headerlink" title="——————-"></a>——————-</h5><h1 id="响应式开发的屏幕分类"><a href="#响应式开发的屏幕分类" class="headerlink" title="响应式开发的屏幕分类"></a>响应式开发的屏幕分类</h1><blockquote><p>在响应式开发中需要动态根据屏幕的宽度改变样式，但是不可能每变化1px就改变样式。</p><p>在响应式开发中，把各种屏幕宽度分为四大类，开发中只需要考虑这四种屏幕的情况即可</p></blockquote><h2 id="设备屏幕的分类"><a href="#设备屏幕的分类" class="headerlink" title="设备屏幕的分类"></a>设备屏幕的分类</h2><table><thead><tr><th style="text-align:center">分类名称</th><th style="text-align:center">宽度范围</th></tr></thead><tbody><tr><td style="text-align:center">超小屏设备</td><td style="text-align:center">0 ~ 768px</td></tr><tr><td style="text-align:center">小屏设备</td><td style="text-align:center">768px ~ 992px</td></tr><tr><td style="text-align:center">中屏设备</td><td style="text-align:center">992px ~ 1200px</td></tr><tr><td style="text-align:center">大屏设备</td><td style="text-align:center">1200px ~ 正无穷</td></tr></tbody></table><p><img src="\images\123.png" alt="1"></p><h1 id="媒体查询"><a href="#媒体查询" class="headerlink" title="媒体查询"></a>媒体查询</h1><blockquote><p>刚刚说了响应式原理是：<strong><em>动态根据当前屏幕的宽度，自动改变页面中盒子的宽度、盒子的显示或隐藏</em></strong></p><p>所以需要根据不同屏幕的宽度改变样式。</p><p>可以通过css3中新增的媒体查询完成效果。</p></blockquote><p><strong>媒体查询（Media Query）：</strong>是CSS3新增的方法，媒体查询可以动态查询屏幕的宽度，根据不同的屏幕宽度设置样式是否生效！！</p><p><strong>语法：</strong> </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">media</span> screen and (条件) &#123;</span><br><span class="line">    选择器......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>作用：</strong> 只有当屏幕宽度满足条件时，媒体查询中的选择器才能生效！！！</p><p><strong>注意点：</strong> 媒体查询仅仅只是控制选择器是否生效，不会提升选择器的优先级！！</p><blockquote><p>具体谁说了算，还是需要看优先级</p></blockquote><p><strong>条件：</strong></p><ul><li><p><code>min-width</code>：样式生效的屏幕最小宽度</p><blockquote><p>只有当屏幕宽度大于等于该宽度时，样式才会生效</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 样式生效的最小宽为600px——》只有当屏幕宽度大于等于600px时，样式才会生效！！*/</span></span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">600px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: green;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>max-width</code> ：样式生效的屏幕最大宽度</p><blockquote><p>只有当屏幕宽度小于等于该宽度时，样式才会生效</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 样式生效的最大宽为800px——》只有当屏幕宽度小于等于800px时，样式才会生效*/</span></span><br><span class="line">@<span class="keyword">media</span> screen and (max-width:<span class="number">800px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: blue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p><code>width</code> ：样式生效的宽度</p><blockquote><p>只有当屏幕宽度正好等于该宽度时，样式才会生效</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 样式只在700px宽度的时候才会生效 */</span></span><br><span class="line">@<span class="keyword">media</span> screen and (width:<span class="number">700px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: purple;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”-如果需要在600-800之间样式生效，怎么写？？"><a href="#ヾ-๑╹◡╹-ﾉ”-如果需要在600-800之间样式生效，怎么写？？" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 如果需要在600~800之间样式生效，怎么写？？"></a>ヾ(๑╹◡╹)ﾉ” 如果需要在600~800之间样式生效，怎么写？？</h5><blockquote><p>一个媒体查询中可以同时写多个条件，中间通过and连接即可</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 样式在 600~800中间生效 */</span></span><br><span class="line">@<span class="keyword">media</span> screen and (min-width:<span class="number">600px</span>) and (max-width:<span class="number">800px</span>) &#123;</span><br><span class="line">    <span class="selector-tag">div</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: orange;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用媒体查询完成响应式适配"><a href="#使用媒体查询完成响应式适配" class="headerlink" title="使用媒体查询完成响应式适配"></a>使用媒体查询完成响应式适配</h2><blockquote><p>可以通过媒体查询实现不同终端的布局和样式的切换，完成响应式布局。</p></blockquote><p><strong>需求：</strong>手动设置全局容器.container的响应式适配四种屏幕。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 需求： */</span></span><br><span class="line"><span class="comment">/* 超小屏幕: 0 - 768px      版心：100% 背景颜色：绿色 */</span></span><br><span class="line"><span class="comment">/* 小屏设备: 768px - 992px  版心：750px 背景颜色：蓝色 */</span></span><br><span class="line"><span class="comment">/* 中屏设备: 992px - 1200px 版心：970px 背景颜色：黄色 */</span></span><br><span class="line"><span class="comment">/* 大屏设备: 1200 ~  正无穷     版心：1170px   背景颜色：粉色 */</span></span><br></pre></td></tr></table></figure><p><strong>弊端：现在只有一个div，要做一套响应式布局，就需要如此多的代码，非常的麻烦。真正开发中我们会借助一些响应式的框架，比如bootstrap。</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;《部分案例代码下载》&quot;&gt;&lt;a href=&quot;#《部分案例代码下载》&quot; class=&quot;headerlink&quot; title=&quot;《部分案例代码下载》&quot;&gt;&lt;/a&gt;&lt;a href=&quot;/download/移动webday04部分案例代码.zip&quot;&gt;《部分案例代码下载》&lt;/a&gt;&lt;
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
      <category term="移动web" scheme="http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8web/"/>
    
  </entry>
  
  <entry>
    <title>移动webday03笔记</title>
    <link href="http://yoursite.com/2020/02/06/1-%E7%A7%BB%E5%8A%A8webday03%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/02/06/1-移动webday03笔记/</id>
    <published>2020-02-06T02:00:03.000Z</published>
    <updated>2020-03-11T08:51:14.575Z</updated>
    
    <content type="html"><![CDATA[<h2 id="《部分案例代码下载》"><a href="#《部分案例代码下载》" class="headerlink" title="《部分案例代码下载》"></a><a href="/download/移动webday03部分案例代码.zip">《部分案例代码下载》</a></h2><h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><blockquote><ul><li style="list-style: none"><input type="checkbox"> 能够说出流式布局的基本特征</li><li style="list-style: none"><input type="checkbox"> 能够使用2倍图进行页面开发</li><li style="list-style: none"><input type="checkbox"> 能够实现京东首页的头部布局</li><li style="list-style: none"><input type="checkbox"> 能够完成京东首页的静态结构</li></ul><p>。。。。。。</p></blockquote><p><strong>理解上课的知识点……</strong></p><h1 id="移动端开发选择"><a href="#移动端开发选择" class="headerlink" title="移动端开发选择"></a>移动端开发选择</h1><h2 id="常见移动端开发方案"><a href="#常见移动端开发方案" class="headerlink" title="常见移动端开发方案"></a>常见移动端开发方案</h2><blockquote><p>在写移动web代码之前，先了解移动中主流的方案，明确方向</p></blockquote><ul><li><p><strong>单独制作移动端网页（目前主流）</strong></p><blockquote><p>此类网站会检测用户的设备，如果是pc端则显示pc端页面，如果是移动端则显示移动端页面（通常移动端是网址前加了m：mobile）</p><p>特点：一个网站有两套网页</p></blockquote><ul><li><a href="https://www.jd.com/" target="_blank" rel="noopener">京东商城</a>，<a href="https://m.jd.com/" target="_blank" rel="noopener">手机京东</a></li><li><a href="https://www.taobao.com/" target="_blank" rel="noopener">淘宝网</a>，<a href="https://main.m.taobao.com/" target="_blank" rel="noopener">淘宝网触屏版</a></li><li><a href="https://www.suning.com/" target="_blank" rel="noopener">苏宁易购</a>，<a href="https://m.suning.com/" target="_blank" rel="noopener">手机苏宁</a></li><li>等等……</li></ul></li><li><p><strong>响应式网页（很少）</strong></p><blockquote><p>此类网站只有一个网页，通过判断屏幕宽度的变化从而改变页面的样式，从而适配多个终端</p><p>特点：一个网站只需要一个网页</p><p><strong>但是有显而易见的缺点：</strong>网页制作麻烦，需要考虑很多兼容性问题</p></blockquote><ul><li><a href="https://www.samsung.com/cn/" target="_blank" rel="noopener">三星官网</a></li></ul></li></ul><h2 id="移动端常见布局"><a href="#移动端常见布局" class="headerlink" title="移动端常见布局"></a>移动端常见布局</h2><blockquote><p>之前pc端布局的时候通过版心进行屏幕布局适配的</p><p>但是现在移动端中屏幕本身较小，再设置版心不合适，所以此时需要使用特殊的布局套路才行</p></blockquote><p><img src="\images\移动端技术选型.png" alt="移动端技术选型"></p><h1 id="流式布局的介绍"><a href="#流式布局的介绍" class="headerlink" title="流式布局的介绍"></a>流式布局的介绍</h1><blockquote><p>在移动端中需要使用一些特殊的布局方式，流式布局就是其中的一种，也叫百分比布局。</p><p><strong>通过盒子的宽度设置成百分比</strong>来根据屏幕的宽度进行伸缩，不受具体像素的限制，可以自行填充。</p><p>流式布局是移动web开发中较为常见的布局方式</p></blockquote><p><strong>布局特征：</strong></p><ul><li><p>一般盒子高度写死，宽度百分比或者自适应</p></li><li><p>小图片、小图标、文字大小一般写死</p></li><li><p>大图片一般宽度自适应（100%），高度不设置让其等比例缩放</p></li></ul><p><strong>经典的流式布局：</strong></p><ul><li><p>左侧固定，右侧自适应</p><p><img src="\images\左固定右适应.gif" alt="左固定右适应"></p></li><li><p>右侧固定，左侧自适应</p><p><img src="\images\右固定左适应.gif" alt="右固定左适应"></p></li><li><p>两侧固定，中间自适应（圣杯布局、双飞翼布局）</p><p><img src="\images\左右固定中间自适应.gif" alt="左右固定中间自适应"></p></li><li><p>等分布局</p><blockquote><p>按照之前写的宽度百分比可以完成，但是当给每一个盒子<strong>设置border之后</strong>，会发现盒子掉下来了~</p><p>只要进行移动端布局，盒子约定俗成都需要加上自动内减。</p></blockquote></li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”演示场景的流式布局"><a href="#ヾ-๑╹◡╹-ﾉ”演示场景的流式布局" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”演示场景的流式布局"></a>ヾ(๑╹◡╹)ﾉ”演示场景的流式布局</h5><p><strong>拓展：</strong></p><blockquote><p><code>overflow:hidden</code> 会触发盒子的BFC</p></blockquote><p>触发BFC的盒子的特点：</p><ul><li>解决margin的塌陷</li><li>清除浮动</li><li>不会在浮动元素下面，会被挤到一边去</li></ul><h1 id="JDM京东移动端项目"><a href="#JDM京东移动端项目" class="headerlink" title="JDM京东移动端项目"></a>JDM京东移动端项目</h1><h2 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h2><ul><li><p>方案：单独制作移动端网页</p></li><li><p>技术：采用流式布局</p></li></ul><h5 id="————————"><a href="#————————" class="headerlink" title="————————"></a>————————</h5><h2 id="项目的搭建"><a href="#项目的搭建" class="headerlink" title="项目的搭建"></a>项目的搭建</h2><blockquote><p>和之前的操作一样</p></blockquote><ul><li><p>新建一个项目文件夹</p><ul><li><p>新建images文件夹：放入常用的图片资源</p></li><li><p>新建css文件夹：放入index.css和base.css</p></li></ul></li><li><p>引入favicon.ico图标</p></li><li><p>base.css的阅读</p><blockquote><p>大部分来说和之前基础班的base.css文件是一样的，但是有个别的几个区别</p></blockquote><ul><li><p><strong>取消a标签移动端点击高亮的效果</strong></p><p><code>-webkit-tap-highlight-color: rgba(0, 0, 0, 0);</code></p></li></ul></li></ul><h2 id="代码的编写"><a href="#代码的编写" class="headerlink" title="代码的编写"></a>代码的编写</h2><ul><li><p><strong>视口</strong>需要设置完整：</p><blockquote><p>移动端开发第一个注意点</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在html中引入css文件</p><ul><li>先引入base.css</li><li>再引入index.css</li></ul></li><li><p>移动端网页整体需要有一个<strong>整体的大容器</strong></p><ul><li>可以直接把body当做整体大容器</li><li>或者<strong>京东整体的大盒子：jd_container</strong><ul><li>宽度设置100%</li><li>高度由内容撑开：先写随便写一个</li><li>针对于大屏幕如pc端来说，占满一行就有问题了，此时需要设置最大宽度：max-length一般给设计图的大小。（因为比设计图还要大图片会放大失真）</li><li>针对于移动端有最小的宽度：min-width一般给需要适配的最小宽度（320px即可）</li><li>居中：margin：0 auto；</li></ul></li></ul></li><li><p>先把整个网页的各个模块划分好</p><p><img src="\images\京东模块划分.png" alt="京东模块划分"></p></li><li><p>再每一个部分写</p></li></ul><p><strong>注意点：</strong> 设计师给的设计图是是二倍图，所以量取的大小应该缩小2倍才行。（精灵图也是一样的）</p><h2 id="相关操作"><a href="#相关操作" class="headerlink" title="相关操作"></a>相关操作</h2><ul><li><p><strong>设置精灵图有背景颜色</strong></p><ol><li>ps右下角倒数第二个按钮点击一下（新建图层）</li><li>左侧选择一个颜色，然后鼠标点击新建的图层，使用快捷键 <code>alt + backspace(删除键)</code> （填充图层颜色）</li><li>将有颜色的图片拖到精灵图层的下面即可 </li></ol><p><img src="\images\设置精灵图背景颜色.gif" alt="设置精灵图背景颜色"></p></li></ul><hr><ul><li><p><strong>改变图片的大小</strong></p><blockquote><p>设计师给的图片是2倍图，此时量取之后还要缩小2倍比较麻烦，此时可以直接把图片大小整体缩小两倍。之后再直接量取即可。</p></blockquote><ol><li>选择上方的<strong>图像</strong>按钮</li><li>选择<strong>图像</strong>中的<strong>图像大小</strong>选项</li><li>在对话框中设置修改之后的图像大小，只需要把宽度设置为原来的一半即可。</li></ol><p><strong>注意点：</strong> 此操作<strong>仅仅只是为了量取</strong>更加便捷，但是项目中为了图片清晰还是需要引入2倍图（400px*400px的图片）<img src="\images\改变图片的大小.gif" alt="改变图片的大小"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;《部分案例代码下载》&quot;&gt;&lt;a href=&quot;#《部分案例代码下载》&quot; class=&quot;headerlink&quot; title=&quot;《部分案例代码下载》&quot;&gt;&lt;/a&gt;&lt;a href=&quot;/download/移动webday03部分案例代码.zip&quot;&gt;《部分案例代码下载》&lt;/a&gt;&lt;
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
      <category term="移动web" scheme="http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8web/"/>
    
  </entry>
  
  <entry>
    <title>移动webday02笔记</title>
    <link href="http://yoursite.com/2020/02/06/1-%E7%A7%BB%E5%8A%A8webday02%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/02/06/1-移动webday02笔记/</id>
    <published>2020-02-06T02:00:02.000Z</published>
    <updated>2020-03-11T09:02:43.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="《部分案例代码下载》"><a href="#《部分案例代码下载》" class="headerlink" title="《部分案例代码下载》"></a><a href="/download/移动webday02部分案例代码.zip">《部分案例代码下载》</a></h2><h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><blockquote><ul><li style="list-style: none"><input type="checkbox"> 能够理解过渡transition的使用方式</li><li style="list-style: none"><input type="checkbox"> 能够实现基本的动画</li><li style="list-style: none"><input type="checkbox"> 了解动画的八大参数</li><li style="list-style: none"><input type="checkbox"> 能够理解视口的概念并进行视口的设置（快捷键）</li></ul><p>。。。。。。</p></blockquote><p><strong>理解上课的知识点……</strong></p><h2 id="过渡（transition）"><a href="#过渡（transition）" class="headerlink" title="过渡（transition）"></a>过渡（transition）</h2><blockquote><p>昨天学习了过渡属性，直接设置的是 <code>transition:1s;</code> ，其实 <code>transition</code> 属性是一个复合属性</p></blockquote><p>让一个盒子hover之后慢慢的变宽~</p><h3 id="过渡相关属性"><a href="#过渡相关属性" class="headerlink" title="过渡相关属性"></a>过渡相关属性</h3><blockquote><p>其实过渡属性可以分为多个单独的属性进行设置</p></blockquote><h4 id="过渡的时间（transition-duration）"><a href="#过渡的时间（transition-duration）" class="headerlink" title="过渡的时间（transition-duration）"></a>过渡的时间（transition-duration）</h4><blockquote><p>设置完成过渡效果需要多少时间</p></blockquote><p><strong>代码：</strong><code>transition-duration：1s;</code></p><p><strong>取值：</strong></p><ul><li>具体的时间（1s）</li></ul><h4 id="过渡的属性（transition-property）"><a href="#过渡的属性（transition-property）" class="headerlink" title="过渡的属性（transition-property）"></a>过渡的属性（transition-property）</h4><blockquote><p>设置过渡效果的css属性的名称</p></blockquote><p><strong>代码：</strong><code>transition-property:all;</code></p><p><strong>取值：</strong></p><ul><li><p>可以是具体的属性（width、height、……）</p></li><li><p><strong>all</strong>（表示所有属性都有过渡的效果，默认值）</p><blockquote><p>但是从效果来说，不是每一个属性都有过渡效果，比如：display：none这种不可以过渡的属性，是没有过渡的效果的（因为不存在中间状态）</p></blockquote></li></ul><h4 id="过渡的变化效果（transition-timing-function）"><a href="#过渡的变化效果（transition-timing-function）" class="headerlink" title="过渡的变化效果（transition-timing-function）"></a>过渡的变化效果（transition-timing-function）</h4><blockquote><p>设置过渡变化速度效果的不同</p></blockquote><p><strong>代码：</strong> <code>transition-timing-function：linear;</code></p><p><strong>取值：</strong> </p><ul><li>ease：慢速→快速→慢速</li><li>linear：匀速变化</li><li>steps（n）：过渡分为几步完成（n个步骤完成）</li></ul><h4 id="过渡的延时（transition-delay）"><a href="#过渡的延时（transition-delay）" class="headerlink" title="过渡的延时（transition-delay）"></a>过渡的延时（transition-delay）</h4><blockquote><p>设置过渡在多少时间之后开始</p></blockquote><p><strong>代码：</strong> <code>transition-delay：2s;</code></p><p><strong>取值：</strong></p><ul><li>具体的时间</li></ul><h3 id="过渡的连写形式（transition）"><a href="#过渡的连写形式（transition）" class="headerlink" title="过渡的连写形式（transition）"></a>过渡的连写形式（transition）</h3><blockquote><p>过渡相关属性都是以transition开头，可以通过transition属性设置相关属性</p></blockquote><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/* 过渡的属性 */</span></span><br><span class="line">    <span class="attribute">transition-property</span>: all;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 过渡的时间 */</span></span><br><span class="line">    <span class="attribute">transition-duration</span>: <span class="number">1s</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 过渡的变化效果 */</span></span><br><span class="line">    <span class="attribute">transition-timing-function</span>: linear;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 过渡的延时 */</span></span><br><span class="line">    <span class="attribute">transition-delay</span>: <span class="number">2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*----------------------------------*/</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/* 连写形式 */</span></span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">1s</span> linear <span class="number">2s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>连写的注意点：</strong></p><ul><li><p><strong>省略问题</strong>：按照需求省略，省略相当于设置了默认值</p></li><li><p><strong>顺序问题</strong>：没有要求，但是注意第一个时间永远是过渡时间</p><blockquote><p>如果连写中只设置了一个时间，这个时间表示的是过渡的时间</p><p>如果连写中设置了两个时间，则第一个时间表示过渡的时间，第二个时间表示延时的时间</p></blockquote></li></ul><h3 id="过渡属性的小结"><a href="#过渡属性的小结" class="headerlink" title="过渡属性的小结"></a>过渡属性的小结</h3><ul><li>过渡的时间：<code>transition-duration</code></li><li>过渡的属性：<code>transition-property</code></li><li>过渡的效果：<code>transition-timing-function</code></li><li>过渡的延时：<code>transition-delay</code></li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”-3D相册案例"><a href="#ヾ-๑╹◡╹-ﾉ”-3D相册案例" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 3D相册案例"></a>ヾ(๑╹◡╹)ﾉ” 3D相册案例</h5><p>300*400</p><h5 id="————————"><a href="#————————" class="headerlink" title="————————"></a>————————</h5><h2 id="css3动画"><a href="#css3动画" class="headerlink" title="css3动画"></a>css3动画</h2><blockquote><p>动画可以通过设置多个节点来精确控制一个或者一组动画，常用来实现复杂的动画效果。</p></blockquote><h5 id="ヾ-๑╹◡╹-ﾉ”动画的初体验（让一个div一直旋转）"><a href="#ヾ-๑╹◡╹-ﾉ”动画的初体验（让一个div一直旋转）" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”动画的初体验（让一个div一直旋转）"></a>ヾ(๑╹◡╹)ﾉ”动画的初体验（让一个div一直旋转）</h5><blockquote><p>看写好的动画效果</p></blockquote><p><img src="\images\动画旋转-1582361435595.gif" alt="动画旋转"></p><p><strong>问题：</strong> 动画和过渡的区别？</p><ul><li><p>过渡必须要触发条件（如：hover），动画则可以不需要（浏览器一刷新就动起来）</p></li><li><p>过渡最后肯定会停下来，动画则可以一直运行下去</p></li><li><p>过渡需要两个状态的不同，动画则可以设置多个状态</p><blockquote><p> <strong>效果</strong>上来说相似，但是动画比过渡跟复杂点</p></blockquote></li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”-把刚刚的hover效果改写成一刷新就一直旋转动画"><a href="#ヾ-๑╹◡╹-ﾉ”-把刚刚的hover效果改写成一刷新就一直旋转动画" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 把刚刚的hover效果改写成一刷新就一直旋转动画"></a>ヾ(๑╹◡╹)ﾉ” 把刚刚的hover效果改写成一刷新就一直旋转动画</h5><blockquote><p>动画的实现两步：</p><ol><li>定义动画：@keyframes 动画名{}</li><li>使用/调用动画：给对应的元素设置animation属性</li></ol></blockquote><h3 id="定义动画（-keyframes）"><a href="#定义动画（-keyframes）" class="headerlink" title="定义动画（@keyframes）"></a>定义动画（@keyframes）</h3><blockquote><p>使用动画前首先要定义一个动画出来，需要通过<strong>动画序列</strong>设计动画→说白了就是控制动画的不同状态</p></blockquote><p><strong>需求：(动画需要考虑状态)</strong></p><ol><li>默认盒子宽度200，让盒子变宽为800的动画。</li><li>默认盒子宽高都是200，先让盒子变宽为800，再让盒子变高为800</li></ol><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 1. 定义一个动画 */</span></span><br><span class="line"><span class="comment">/* 定义动画方式一：from-to两个状态 */</span></span><br><span class="line">@<span class="keyword">keyframes</span> dong &#123;</span><br><span class="line">    <span class="comment">/* 动画的开始状态 */</span></span><br><span class="line">    <span class="selector-tag">from</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 动画的结束状态 */</span></span><br><span class="line">    <span class="selector-tag">to</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*--------------------------*/</span></span><br><span class="line"><span class="comment">/* 定义动画方式二：百分比设置多个状态 */</span></span><br><span class="line">@<span class="keyword">keyframes</span> bian &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    50% &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用-调用动画（animation）"><a href="#使用-调用动画（animation）" class="headerlink" title="使用/调用动画（animation）"></a>使用/调用动画（animation）</h3><blockquote><p>其实animation属性是一个复合属性，一共是8个属性的连写形式</p></blockquote><p><strong>设置元素宽度变长的动画</strong></p><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">使用动画相关的属性：</span></span><br><span class="line"><span class="comment">1、动画的名字：animation-name------------------------------------</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">animation-name</span>: <span class="selector-tag">big</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">2、动画的持续时间（一次动画持续的时间）：animation-duration------------------------------------</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">animation-duration</span>: 1<span class="selector-tag">s</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">3、动画的延时：animation-delay------------------------------------</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">animation-delay</span>: 1<span class="selector-tag">s</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">4、动画的效果：animation-timing-function------------------------------------</span></span><br><span class="line"><span class="comment">取值：</span></span><br><span class="line"><span class="comment">1、ease：先慢——》再快——》再慢</span></span><br><span class="line"><span class="comment">2、linear：匀速</span></span><br><span class="line"><span class="comment">3、steps()：分步进行</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">animation-timing-function</span>: <span class="selector-tag">linear</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">5、动画的执行次数：animation-iteration-count------------------------------------</span></span><br><span class="line"><span class="comment">取值：</span></span><br><span class="line"><span class="comment">1、次数（默认是1次）</span></span><br><span class="line"><span class="comment">2、infinite：无限次</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">animation-iteration-count</span>: <span class="selector-tag">infinite</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">6、指定动画的方向（按照什么顺序执行）：animation-direction------------------------------------</span></span><br><span class="line"><span class="comment">取值：</span></span><br><span class="line"><span class="comment">1、normal：正常（从from——》to）</span></span><br><span class="line"><span class="comment">2、reverse：反转（从to——》from）</span></span><br><span class="line"><span class="comment">3、alternate：交替（from——》to——》from——》to——》from....）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">animation-direction</span>: <span class="selector-tag">alternate</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">7、动画结束的状态：animation-fill-mode------------------------------------</span></span><br><span class="line"><span class="comment">取值：</span></span><br><span class="line"><span class="comment">1、backwards：（默认值）回到开始状态结束</span></span><br><span class="line"><span class="comment">2、forwards：动画在结束状态结束</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">animation-fill-mode</span>: <span class="selector-tag">forwards</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">8、动画执行的状态：animation-play-state------------------------------------</span></span><br><span class="line"><span class="comment">取值：</span></span><br><span class="line"><span class="comment">1、默认执行</span></span><br><span class="line"><span class="comment">2、paused：暂停动画（一般给hover状态加，让鼠标移入之后暂停动画）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="selector-tag">animation-play-state</span>: <span class="selector-tag">paused</span>;</span><br></pre></td></tr></table></figure><h5 id="————————-1"><a href="#————————-1" class="headerlink" title="————————"></a>————————</h5><p><strong>注意点：</strong></p><ul><li>一般使用动画用的都是animation的连写形式<ul><li>连写形式中只需要注意第一个时间是动画持续时间，第二个时间是延时时间即可。此外没任何顺序问题</li><li>一般只设置动画的名字、动画的持续时间、动画的次数即可</li></ul></li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”-大风车案例"><a href="#ヾ-๑╹◡╹-ﾉ”-大风车案例" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 大风车案例"></a>ヾ(๑╹◡╹)ﾉ” 大风车案例</h5><blockquote><p>本质上来说就是让一个盒子旋转，而盒子里面有四个扇叶</p></blockquote><p><img src="\images\大风车效果-1582361435598.gif" alt="大风车效果" style="zoom:80%;"></p><h5 id="ヾ-๑╹◡╹-ﾉ”-小鱼游动案例"><a href="#ヾ-๑╹◡╹-ﾉ”-小鱼游动案例" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 小鱼游动案例"></a>ヾ(๑╹◡╹)ﾉ” 小鱼游动案例</h5><p>一共有两个动画</p><blockquote><ol><li><p>小鱼原地抖动的动画（通过切换背景位置设置完成效果，类似于翻书动画）</p><p><img src="\images\dou-1582361435598.gif" alt="dou" style="zoom:80%;"></p></li><li><p>小鱼游动的动画</p><p><img src="\images\you-1582361435598.gif" alt="you" style="zoom:80%;"></p></li></ol></blockquote><h5 id="—————————–"><a href="#—————————–" class="headerlink" title="—————————–"></a>—————————–</h5><h2 id="背景图片大小（background-size）"><a href="#背景图片大小（background-size）" class="headerlink" title="背景图片大小（background-size）"></a>背景图片大小（background-size）</h2><blockquote><p>通过css可以设置背景图片的大小</p></blockquote><p><strong>语法：</strong> </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background-size</span>: 背景图片宽度  背景图片高度：</span><br></pre></td></tr></table></figure><p><strong>取值（分别设置的是宽度和高度）：</strong></p><ul><li><p>数字+px</p></li><li><p>百分比（相对于盒子的宽高百分比）</p></li><li><p>关键字</p><p><strong>默认尺寸：</strong></p><p><img src="\images\1.1.png" alt="1.1"></p><ul><li><p><strong>contain（包含）</strong>：将背景图片等比例缩放，直到<strong>不会超出盒子</strong>的最大</p><blockquote><p>直到宽度或者高度中<strong>有一个和盒子相等</strong>，并且背景图片<strong>没有溢出部分</strong>即止。</p></blockquote><p><img src="\images\1.3.png" alt="1.3"></p></li></ul></li></ul><ul><li><p><strong>cover（覆盖）</strong>：将背景图片等比例缩放，直到<strong>填满整个盒子刚好</strong>没有空白</p><blockquote><p>直到宽度或者高度中<strong>有一个和盒子相等</strong>，并且<strong>背景图片填充满盒子</strong>如果有溢出部分则被隐藏</p></blockquote><p><img src="\images\1.2-1550336266662.png" alt="1.2"></p></li></ul><hr><p><strong>注意点：</strong></p><ul><li><p>在设置<code>background-size</code> 和<code>background</code>连写的时候注意覆盖问题</p><ul><li><p>要么单独写的写在连写的下面</p></li><li><p>要么单独写的写在连写的里面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 连写完整版中，也有background-size属性，注意连写的覆盖问题 */</span></span><br><span class="line">background：color image repeat attachment position / size</span><br></pre></td></tr></table></figure></li></ul></li></ul><h5 id="————————-2"><a href="#————————-2" class="headerlink" title="————————"></a>————————</h5><h2 id="css3私有前缀（了解）"><a href="#css3私有前缀（了解）" class="headerlink" title="css3私有前缀（了解）"></a>css3私有前缀（了解）</h2><blockquote><p>私有前缀是为了兼容老版本浏览器的写法，</p><ul><li><p>对于新版本的浏览器无需添加。</p></li><li><p>如果需要兼容老版本浏览器，需要在css3属性前添加私有前缀。</p></li></ul></blockquote><p><strong>私有前缀的作用：</strong>兼容老版本浏览器</p><p><strong>常见不同浏览器的私有前缀代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">谷歌、苹果浏览器：<span class="selector-tag">-webkit-</span></span><br><span class="line">火狐浏览器：<span class="selector-tag">-moz-</span></span><br><span class="line"><span class="selector-tag">IE</span>浏览器：<span class="selector-tag">-ms-</span></span><br><span class="line">欧朋浏览器：<span class="selector-tag">-o-</span></span><br></pre></td></tr></table></figure><h5 id="ヾ-๑╹◡╹-ﾉ”-演示不同浏览器支持的情况"><a href="#ヾ-๑╹◡╹-ﾉ”-演示不同浏览器支持的情况" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 演示不同浏览器支持的情况"></a>ヾ(๑╹◡╹)ﾉ” 演示不同浏览器支持的情况</h5><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*谷歌浏览器和safari浏览器的前缀 -webkit-*/</span></span><br><span class="line">    <span class="attribute">-webkit-transform</span>: <span class="built_in">rotate</span>(45deg);</span><br><span class="line">    <span class="comment">/*火狐浏览器的前缀 -moz-*/</span></span><br><span class="line">    <span class="attribute">-moz-transform</span>: <span class="built_in">rotate</span>(45deg);</span><br><span class="line">    <span class="comment">/*ie浏览器的前缀 -ms-*/</span></span><br><span class="line">    <span class="attribute">-ms-transform</span>: <span class="built_in">rotate</span>(45deg);</span><br><span class="line">    <span class="comment">/*opera浏览器的前缀 -o-*/</span></span><br><span class="line">    <span class="attribute">-o-transform</span>: <span class="built_in">rotate</span>(45deg);</span><br><span class="line">    <span class="comment">/*规范阶段的标准写法*/</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotate</span>(45deg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 对于移动端来说，大多都是ios和Android的操作系统，浏览器内核都是webkit内核，所以前缀只需要写<code>-webkit-</code> 即可</p><blockquote><p>真正开发中，前缀会通过自动化打包工具自动添加，不用程序员一个个加。</p></blockquote><h5 id="————————————————"><a href="#————————————————" class="headerlink" title="————————————————"></a>————————————————</h5><h1 id="移动web的初识"><a href="#移动web的初识" class="headerlink" title="移动web的初识"></a>移动web的初识</h1><blockquote><p>移动web说白了就是移动设备中的web网页</p></blockquote><h2 id="移动web的开发现状"><a href="#移动web的开发现状" class="headerlink" title="移动web的开发现状"></a>移动web的开发现状</h2><blockquote><p>移动web开发与传统pc端开发的异同点</p></blockquote><h3 id="浏览器不同（兼容性不同）"><a href="#浏览器不同（兼容性不同）" class="headerlink" title="浏览器不同（兼容性不同）"></a>浏览器不同（兼容性不同）</h3><p><img src="\images\浏览器的现状.png" alt="浏览器的现状" style="zoom:50%;"></p><blockquote><p>其实：国内的UC、QQ、百度等手机浏览器大部分都是根据webkit修改过来的内核，国内暂无自主研发的内核。</p></blockquote><ul><li><p>pc端：浏览器种类很多，如果需要做兼容性处理，需要添加很多不同的私有前缀</p></li><li><p>移动端：兼容移动端主流浏览器，一般只需要兼容webkit内核即可，前缀只需要添加<code>-webkit-</code> 即可</p><blockquote><p>并且手机更新换代很快，所以浏览器版本都比较新，对于css3新属性的支持会更好</p></blockquote></li></ul><h3 id="屏幕尺寸不同（适配不同）"><a href="#屏幕尺寸不同（适配不同）" class="headerlink" title="屏幕尺寸不同（适配不同）"></a>屏幕尺寸不同（适配不同）</h3><ul><li><p>pc端：屏幕较大，一般通过版心进行不同屏幕的适配</p></li><li><p>移动端：移动端设备屏幕尺寸较小，并且碎片化严重（即有很多不同尺寸的屏幕）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Android</span>设备有多种分辨率：480<span class="selector-tag">x800</span>, 480<span class="selector-tag">x854</span>, 540<span class="selector-tag">x960</span>, 720<span class="selector-tag">x1280</span>，1080<span class="selector-tag">x1920</span>等，现在还有2<span class="selector-tag">K</span>，4<span class="selector-tag">k</span>屏等</span><br><span class="line"><span class="selector-tag">iPhone</span>主要分辨率有：640<span class="selector-tag">x960</span>, 640<span class="selector-tag">x1136</span>, 750<span class="selector-tag">x1334</span>, 1242<span class="selector-tag">x2208</span>等</span><br></pre></td></tr></table></figure></li></ul><p>  此时再使用版心适配就不合适了，需要使用一些特殊的布局方法→流式布局等</p><p><strong><em>其实移动web和之前学习的pc端开发也是有相同点的：使用的技术本质上一样，还是HTML/CSS/JavaScript的技术。所以同学们学习上并不难，只需要学习几种其他的布局方式即可</em></strong></p><h2 id="移动端调试方法"><a href="#移动端调试方法" class="headerlink" title="移动端调试方法"></a>移动端调试方法</h2><blockquote><p>针对于移动web开发，肯定需要在移动端上调试网页，那怎么操作呢？</p></blockquote><ul><li><p>真机调试：使用真正的手机进行访问</p><blockquote><p>等后期学到服务器内容，我们就能会：</p><ul><li><p>使用本地服务器，在局域网中通过手机访问服务器上网页</p></li><li><p>使用外网服务器，在互联网中通过手机访问</p></li></ul></blockquote></li><li><p>模拟器调试：Chrome DevTools（谷歌浏览器）的模拟手机调试</p><blockquote><p>手机设备五花八门，屏幕尺寸都大不一样，尤其是安卓端，给我们的页面预览带来了一些麻烦。在实际工作中，作为开发者一般不可能有足够的设备让我们去测试（<strong>除了测试部门</strong> ），即便有，效率也特别的低，因此开发者一般都是通过浏览器的手机模拟器来模拟不同的设备。</p></blockquote></li></ul><p>当然，虽然开发阶段一般使用模拟器调试，但是在实际工作中，最终还是需要通过真机调试的。</p><h2 id="视口（viewport）（了解）"><a href="#视口（viewport）（了解）" class="headerlink" title="视口（viewport）（了解）"></a>视口（viewport）（了解）</h2><blockquote><p>先把vscode默认设置的视口参数去掉。</p></blockquote><p>在浏览器中存在视口的概念。视口其实就是浏览器显示页面内容的屏幕区域。可以把视口当做是盛放网页的容器。</p><p><strong>问题：</strong> 写四个div宽度为320px，都左浮动，在pc端中是一行中显示的，那么在手机端比如：iPhone4打开猜猜看效果是怎样的？</p><blockquote><p>还是一行中显示，此时html标签的宽高是980px。</p><p>原因是因为手机端的页面打开的时候会在视口中打开，而视口宽度默认是980px正好可以放下</p></blockquote><h5 id="————————————–"><a href="#————————————–" class="headerlink" title="————————————–"></a>————————————–</h5><h3 id="布局视口（layout-viewport）"><a href="#布局视口（layout-viewport）" class="headerlink" title="布局视口（layout viewport）"></a>布局视口（layout viewport）</h3><blockquote><p>用于在手机上查看pc端网页的问题</p></blockquote><p><strong>历史原因</strong>：乔布斯提出了布局视口的概念</p><ul><li>早期，只有pc端网页，早期网页的版心为980px，手机端如果直接查看980px宽度的网页，布局可能会乱掉，效果不好，用户体验极差！！</li><li>后来乔布斯为了让移动端可以看到完整的网页，发明了布局视口这个概念！<strong>解决移动端查看pc端网页的问题</strong> </li></ul><p><strong>布局视口</strong>：相当于盛放网页的容器。并且一般宽度默认是980px。</p><blockquote><p>当使用布局视口980来打开网页时，此时早期的网页可以放下，布局不会乱掉。</p></blockquote><p><img src="\images\布局视口.png" alt="布局视口" style="zoom:70%;"></p><p><strong>布局视口作用的过程：</strong></p><p>移动端打开网页——》先把网页在980px的布局视口中打开（完美展示，不会乱掉）——》再把布局视口中的完美布局效果，缩放显示在移动端中（让用户可以在屏幕中看到全部的网页）</p><h3 id="理想视口（ideal-viewport）"><a href="#理想视口（ideal-viewport）" class="headerlink" title="理想视口（ideal viewport）"></a>理想视口（ideal viewport）</h3><blockquote><p>其实就是布局视口的一个理想尺寸，也是实际开发移动web的常见设置。</p></blockquote><p>刚刚我们发现了，如果布局视口是980px这种较大的情况</p><ul><li>此时为了看到网页的全貌会缩小网页的效果，此时文字看起来很小</li><li>此时如果为了看清实际的文字放大网页的效果，这时候网页又看不完全，需要左右滑动</li></ul><p>那么有没有一种情况：不缩放网页的同时，既可以文字正常阅读，又可以网页显示完全不用左右滑动呢？→理想视口</p><p><strong>理想视口：</strong>当布局视口的尺寸等于设备屏幕的尺寸，才是理想视口</p><blockquote><p>当然，为了保证在理想视口中网页效果不乱，我们之后布局的空间也会按照理想视口的空间进行布局，毕竟现在我们已经大量针对于移动端布局的网页了</p></blockquote><blockquote><p>那就剩一个问题了，我们如何设置布局视口的尺寸就等于当前设备屏幕的尺寸呢？→通过视口标签设置</p></blockquote><h3 id="meta标签的设置视口（记住）"><a href="#meta标签的设置视口（记住）" class="headerlink" title="meta标签的设置视口（记住）"></a>meta标签的设置视口（记住）</h3><blockquote><p>通过meta标签可以进行视口的设置</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">解释说明</th></tr></thead><tbody><tr><td style="text-align:center">width</td><td style="text-align:center">设置视口的宽度，device-width表示当前设备的宽度</td></tr><tr><td style="text-align:center">user-scalable</td><td style="text-align:center">设置用户是否可以缩放，yes/no</td></tr><tr><td style="text-align:center">initial-scale</td><td style="text-align:center">初识缩放比</td></tr><tr><td style="text-align:center">maximum-scale</td><td style="text-align:center">最大缩放比</td></tr><tr><td style="text-align:center">minimum-scale</td><td style="text-align:center">最小缩放比</td></tr></tbody></table><blockquote><p>之后开发专门针对于移动端网页时，一般都需要加上以上meta标签，这算是移动web的<strong>第一个注意点</strong>。</p></blockquote><h5 id="————————————–-1"><a href="#————————————–-1" class="headerlink" title="————————————–"></a>————————————–</h5><blockquote><p>接下来我们看下移动web中第二个指的注意点的点</p></blockquote><h2 id="二倍图"><a href="#二倍图" class="headerlink" title="二倍图"></a>二倍图</h2><blockquote><p>在移动端开发的时候会使用到二倍图，这也是移动web中需要同学们注意的第二个注意的。</p><p>但是如果想理解二倍图，首先我们先认识几个移动端中相关概念</p></blockquote><h3 id="物理像素"><a href="#物理像素" class="headerlink" title="物理像素"></a>物理像素</h3><blockquote><p>我们平时买手机的时候可以看到手机的各项参数，比如：iphone6/7/8手机的分辨率是750*1334</p><p>你所看到的这个<strong>分辨率其实指的就是物理像素</strong></p></blockquote><p><strong>物理像素：</strong>指的是屏幕中显示的最小颗粒，是真实在物理现实中存在的。</p><blockquote><p>说白了就是拿放大镜看到的屏幕中的一个一个<strong>发光点</strong></p></blockquote><p><img src="\images\显微镜放大屏幕物理像素.gif" alt="显微镜放大屏幕物理像素"></p><p><img src="\images\物理像素.jpeg" alt="物理像素" style="zoom:40%;"></p><blockquote><p>我们知道了物理像素就是屏幕中的小小发光点之后，其实肯定有同学会联想到：css中的px，这个px我们平时也叫做css中的像素，那么物理像素和css像素px之间存在什么关系呢？？</p></blockquote><p>css像素px是我们在css中常见的长度单位。但是现在需要<strong>注意</strong>：</p><ul><li><p>之前pc端：1个px确实等于1个物理像素——》1个px对应于1个屏幕发光点</p></li><li><p>现在移动端：1个px可能等于多个物理像素——》1个px对应于多个屏幕发光点</p><blockquote><p><strong>比如：</strong>iphone6/7/8分辨率（物理像素）：750*1334——》一行只能放375px的盒子——》1px==2个物理像素（发光点）</p></blockquote></li></ul><h3 id="移动端屏幕的特点"><a href="#移动端屏幕的特点" class="headerlink" title="移动端屏幕的特点"></a>移动端屏幕的特点</h3><blockquote><p>说到这里，有同学可能会觉得：为啥到移动端屏幕和pc端屏幕的设备像素比不能都是1:1的关系了呢？1:1不行嘛？</p></blockquote><ul><li>其实pc端和早期的手机屏幕确实设备像素比是1:1，即：1px==1个物理像素（发光点）</li><li>后面随着技术的发展，出现了比如：<strong>Retina（视网膜屏幕）</strong>显示技术，可以将把更多的物理像素点压缩至一块屏幕，即1px==多个物理像素（发光点），从而达到更高的分辨率，并提高屏幕显示的细腻程度。</li></ul><p><img src="\images\屏幕放大图.jpg" alt="屏幕放大图"></p><p><img src="\images\2x-1582543853038.png" alt="2x"></p><blockquote><p>当物理像素发光点越密集，所以效果更加清晰细腻，因此现在越来越多的移动端屏幕都会选择1px对应多个物理像素的情况了。现在常见的情况就是1px==2个物理像素</p></blockquote><blockquote><p>那么既然随着技术的发展，1px==多个物理像素点，那么对于开发者来说的影响到底是什么呢？？此时我们在移动端中使用图片就会受到影响。</p></blockquote><h3 id="二倍图的出现"><a href="#二倍图的出现" class="headerlink" title="二倍图的出现"></a>二倍图的出现</h3><blockquote><p>图片也存在分辨率的概念</p></blockquote><p><strong>图片分辨率：</strong>指的是图片在水平垂直方向需要显示多少个物理像素（小光点）</p><blockquote><p>比如：图片的分辨率是 <code>200*200</code>，其实表示图片显示在屏幕中需要用到 <code>200*200</code> 的<strong>物理像素（发光点）</strong> </p></blockquote><h5 id="———————"><a href="#———————" class="headerlink" title="———————-"></a>———————-</h5><p><strong>存在的问题：以 <code>200*200</code>分辨率 的图片显示为例</strong></p><ul><li>之前在pc端中：图片需要 <code>200*200</code> 的发光点——》pc端中：1px==1发光点——》所以此时css中我们需要 <code>200*200</code> px即可</li><li>但是现在移动端中：图片需要 <code>200*200</code> 的发光点——》iphone4中：1px==2发光点——》所以此时css中需要 <code>100*100</code> px即可</li></ul><hr><p><strong>问题：</strong> 如果我们需要在移动端iphone4中显示 <strong><code>100*100</code> px</strong>的图片，其实我们需要多大分辨率的图片才行？？？</p><p><img src="\images\移动端实际效果截图.jpg" alt="移动端实际效果截图"></p><p><img src="\images\二倍图对比.png" alt="移动端实际效果截图"></p><p><strong>结论：</strong> 在移动端如：iphone4中，需要显示多少px的图片，为了清晰不被强行放大，其实需要使用宽高为2倍分辨率的图片才是最好的效果。而这使用的宽高为2倍分辨率大小的图片，称之为<strong>2倍图</strong></p><blockquote><p>实际开发中现在还存在2倍图、3倍图、4倍图之类的，但是具体使用哪一种看公司的需要或者要求</p></blockquote><p><strong>命名特点：</strong></p><ul><li><a href="mailto:xxxxx@2x.png" target="_blank" rel="noopener">xxxxx@2x.png</a>：二倍图</li><li><a href="mailto:xxxxx@3x.png" target="_blank" rel="noopener">xxxxx@3x.png</a>：三倍图</li></ul><p><strong>注意点：</strong> 二倍图是我们移动web开发时的第二个代码注意点，总结来说：一般移动web开发图片常是二倍图，使用的时候记得把图片的分辨率除以二设置px即可。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;《部分案例代码下载》&quot;&gt;&lt;a href=&quot;#《部分案例代码下载》&quot; class=&quot;headerlink&quot; title=&quot;《部分案例代码下载》&quot;&gt;&lt;/a&gt;&lt;a href=&quot;/download/移动webday02部分案例代码.zip&quot;&gt;《部分案例代码下载》&lt;/a&gt;&lt;
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
      <category term="移动web" scheme="http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8web/"/>
    
  </entry>
  
  <entry>
    <title>移动webday01笔记</title>
    <link href="http://yoursite.com/2020/02/06/1-%E7%A7%BB%E5%8A%A8webday01%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/02/06/1-移动webday01笔记/</id>
    <published>2020-02-06T02:00:01.000Z</published>
    <updated>2020-03-11T08:51:05.747Z</updated>
    
    <content type="html"><![CDATA[<h2 id="《部分案例代码下载》"><a href="#《部分案例代码下载》" class="headerlink" title="《部分案例代码下载》"></a><a href="/download/移动webday01部分案例代码.zip">《部分案例代码下载》</a></h2><h1 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h1><blockquote><ul><li style="list-style: none"><input type="checkbox"> 能够使用2d转换属性</li><li style="list-style: none"><input type="checkbox"> 能够认识3d坐标系</li><li style="list-style: none"><input type="checkbox"> 能够使用3d转换属性</li><li style="list-style: none"><input type="checkbox"> 能够理解<code>perspective</code>和 <code>transform-style：preserve-3d</code>的区别</li></ul><p>。。。。。。</p></blockquote><p><strong>理解上课的知识点……</strong></p><h1 id="CSS3的补充知识点"><a href="#CSS3的补充知识点" class="headerlink" title="CSS3的补充知识点"></a>CSS3的补充知识点</h1><h2 id="过渡的基本认识（transition）"><a href="#过渡的基本认识（transition）" class="headerlink" title="过渡的基本认识（transition）"></a>过渡的基本认识（transition）</h2><blockquote><p>而在CSS3中，提供了一个过渡属性，可以让元素的样式慢慢的变化（过渡的效果）</p></blockquote><p><strong>需求：</strong> 一个div默认200*200，背景红色，要求鼠标移入之后宽度 <strong>变成800px</strong></p><blockquote><p>之前设置元素hover的样式，元素的样式是瞬间改变的，很突然。</p><p>如果需要让元素样式的变成慢慢的进行，可以怎么做呢？此时可以使用过渡来完成。</p></blockquote><ul><li>慢慢的变化是过渡的效果，除了宽度之外，其他属性都可以进行过渡，如颜色等</li></ul><p><strong>代码：</strong> <code>transition:1s;</code></p><p><strong>注意点：</strong></p><ul><li><p>过渡属性给需要过渡的元素本身加</p></li><li><p>过渡一般需要有两个状态不同的样式才能有效果</p><ul><li>默认状态</li><li>hover状态</li></ul><blockquote><p>默认一般只要两个状态的样式不同，都会有过渡效果（有特殊情况）</p></blockquote></li><li><p>transition属性设置在不同状态中，效果不同。</p><ul><li><p>如果写在默认状态中，那么鼠标移入移出时都有过渡效果</p></li><li><p>如果写在hover状态中，那么鼠标只有移入时有过渡效果，移出时没有。</p><blockquote><p>因为移出时hover选择器不能选中元素，此时元素上没有transition属性了，所以移出时就没有过渡效果了。</p></blockquote></li></ul></li></ul><h2 id="2D转换（transform）"><a href="#2D转换（transform）" class="headerlink" title="2D转换（transform）"></a>2D转换（transform）</h2><blockquote><p>transform: 转换，是CSS3最具颠覆性的几个特性之一，既可以用于2D转换，也可以用于3D转换。</p><p>transform：2D转换，元素在平面上实现缩放、旋转、平移等操作</p></blockquote><h3 id="缩放（scale）"><a href="#缩放（scale）" class="headerlink" title="缩放（scale）"></a>缩放（scale）</h3><p><img src="/images/2d转换缩放.gif" alt="2d转换缩放"></p><blockquote><p>缩放可以让元素进行放大或者缩小</p></blockquote><p><strong>需求：</strong>此时需要让一个<strong>有内容的div</strong>鼠标移入之后，让<strong>整体宽度放大</strong>为两倍，可以怎么实现呢？（如果包括内容也缩放呢？）</p><p><strong>方案：</strong></p><ul><li><p>可以hover之后设置width为原来的两倍</p><blockquote><p>但是div里面的内容并不会缩放</p></blockquote></li><li><p>可以使用<code>transform:scaleX(2);</code> 对div进行缩放，并且div的<strong>内容也会缩放</strong></p></li></ul><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 让宽度进行缩放 */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">scaleX</span>(2);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 让高度进行缩放 */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">scaleY</span>(2);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 如果需要同时设置宽度和高度进行缩放 */</span></span><br><span class="line"><span class="selector-tag">transform</span><span class="selector-pseudo">:scale(2</span>,2);</span><br><span class="line"><span class="comment">/* 特殊情况：或者只设置一个，表示宽高都是一个比例 */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(2);</span><br></pre></td></tr></table></figure><p><strong>取值：</strong></p><ul><li><p>没有单位的数字（倍数）</p><blockquote><p>如果scale中是一个值，这个值表示宽高都是这个比例进行缩放</p></blockquote></li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”-图片放大效果（类似于穷游网的效果）"><a href="#ヾ-๑╹◡╹-ﾉ”-图片放大效果（类似于穷游网的效果）" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 图片放大效果（类似于穷游网的效果）"></a>ヾ(๑╹◡╹)ﾉ” 图片放大效果（类似于穷游网的效果）</h5><blockquote><p>如：<a href="https://www.qyer.com/" target="_blank" rel="noopener">穷游网</a></p><p>hover时，让其中的img图片放大</p></blockquote><blockquote><p>缩放效果默认是以元素中心点放大的，如果需要让元素以特殊的位置放大，可以怎么做呢？</p></blockquote><h3 id="转换原点（transform-origin）"><a href="#转换原点（transform-origin）" class="headerlink" title="转换原点（transform-origin）"></a>转换原点（transform-origin）</h3><blockquote><p>通过transform-origin可以设置转换的中心原点</p></blockquote><p><strong>代码：</strong> <code>transform-origin:center center;</code></p><p><strong>取值：</strong></p><blockquote><p>原点的取值和之前学习的background-position是一样的</p></blockquote><ul><li>方位名词：<ul><li>水平：left、center、right</li><li>垂直：top、center、bottom</li></ul></li><li>坐标点：以元素左上角为原点，水平向右是x轴，垂直向下是y轴</li></ul><h5 id="————————"><a href="#————————" class="headerlink" title="————————"></a>————————</h5><h3 id="旋转（rotate）"><a href="#旋转（rotate）" class="headerlink" title="旋转（rotate）"></a>旋转（rotate）</h3><p><img src="/images//2d转换旋转.gif" alt="2d转换旋转"></p><blockquote><p>通过rotate可以让元素进行旋转</p></blockquote><p><strong>代码：</strong> <code>transform:rotate(90deg);</code></p><p><strong>取值：</strong></p><ul><li><p>角度（deg）</p><blockquote><p>顺时针进行转动</p></blockquote></li></ul><p><strong>注意点：</strong></p><ul><li>也可以通过 <code>transform-origin</code> 属性来设置旋转原点</li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”-扑克牌效果"><a href="#ヾ-๑╹◡╹-ﾉ”-扑克牌效果" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 扑克牌效果"></a>ヾ(๑╹◡╹)ﾉ” 扑克牌效果</h5><h3 id="平移（translate）"><a href="#平移（translate）" class="headerlink" title="平移（translate）"></a>平移（translate）</h3><p><img src="/images/2d转换平移.gif" alt="2d转换平移"></p><blockquote><p>可以通过translate让元素进行平移</p></blockquote><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 沿着x轴进行平移 */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translateX</span>(100<span class="selector-tag">px</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 沿着y轴进行平移 */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translateY</span>(100<span class="selector-tag">px</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 沿着x轴和y轴进行移动 */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translate</span>(100<span class="selector-tag">px</span>,100<span class="selector-tag">px</span>);</span><br></pre></td></tr></table></figure><p><strong>取值：</strong></p><ul><li><p>可以是具体的数值</p></li><li><p>可以是百分比</p><blockquote><p>百分比是相对于自身元素的百分比！</p></blockquote></li></ul><p><strong>注意点：</strong></p><ul><li>translate平移不会影响其他盒子的位置，是相对于自己原来的位置进行移动的，类似于相对定位的效果。</li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”-让一个盒子水平垂直都居中"><a href="#ヾ-๑╹◡╹-ﾉ”-让一个盒子水平垂直都居中" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 让一个盒子水平垂直都居中"></a>ヾ(๑╹◡╹)ﾉ” 让一个盒子水平垂直都居中</h5><blockquote><p>之前我们使用定位居中时，是具体通过margin完成效果的。但是当元素的宽高不确定，如由内容撑开时，使用translate会更好点。</p></blockquote><h5 id="ヾ-๑╹◡╹-ﾉ”-2d转换的小结"><a href="#ヾ-๑╹◡╹-ﾉ”-2d转换的小结" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 2d转换的小结"></a>ヾ(๑╹◡╹)ﾉ” 2d转换的小结</h5><h3 id="转换的合写问题"><a href="#转换的合写问题" class="headerlink" title="转换的合写问题"></a>转换的合写问题</h3><blockquote><p>之前每种转换都是分开实现的，如果需要让一个盒子同时实现三种转换，就需要使用到转换的合写形式</p></blockquote><p><strong>需求：</strong> 一个盒子在页面中居中，当hover到body时，让一个盒子往右平移400px，同时旋转360度，同时宽高都缩小为原来的0.5倍，可以怎么实现？</p><blockquote><p>transform属性只能写一个，所以需要设置一个transform的连写形式。</p></blockquote><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translateX</span>(1000<span class="selector-tag">px</span>) <span class="selector-tag">rotate</span>(360<span class="selector-tag">deg</span>) <span class="selector-tag">scale</span>(0<span class="selector-class">.5</span>);</span><br></pre></td></tr></table></figure><blockquote><p>如果先写rotate（360deg）可不可以呢？</p></blockquote><p><strong>注意点：</strong></p><ul><li><p>transform属性值之间需要以空格隔开</p></li><li><p>rotate属性如果写在第一个，rotate会让坐标轴也一起旋转，坐标轴改变之后会平移的方向！</p><blockquote><p>写在<strong>第一个的属性值会影响坐标轴</strong></p></blockquote></li></ul><h5 id="————————-1"><a href="#————————-1" class="headerlink" title="————————"></a>————————</h5><h2 id="3D转换（transform）"><a href="#3D转换（transform）" class="headerlink" title="3D转换（transform）"></a>3D转换（transform）</h2><blockquote><p>transform不仅仅可以进行2D转换（平面内转换），还可以进行3D转换（立体的空间）</p></blockquote><p><strong>问题：</strong> 2D和3D的区别是什么呢？</p><blockquote><p>2D是一个平面，一个平面坐标系（只有x轴和y轴）</p><p>3D是一个立体的空间，一个立体坐标系（有x轴和y轴还有z轴）</p><p>说白了，3D就比2D多出了一个<strong>z轴</strong></p></blockquote><h3 id="3D坐标系"><a href="#3D坐标系" class="headerlink" title="3D坐标系"></a>3D坐标系</h3><blockquote><p>实际在浏览器中有一个立体坐标系，用x、y、z分别表示空间的3个维度，三条轴互相垂直。</p></blockquote><p><strong>x轴：</strong> 水平向右是x轴正方向</p><p><strong>y轴：</strong> 垂直向下是y轴正方向</p><p><strong>z轴：</strong> 做浏览器平面垂直向脸方向是z轴正方向</p><p><img src="/images/zbz.png" alt=""></p><p><img src="/images/3d坐标系.png" alt="3d坐标系"></p><h3 id="透视-视距（perspective）"><a href="#透视-视距（perspective）" class="headerlink" title="透视/视距（perspective）"></a>透视/视距（perspective）</h3><p><strong>需求：</strong> 让图片沿着x轴进行旋转，此时会立体旋转，看一下此时图片是往里还是往外旋转的？</p><blockquote><p>因为电脑显示屏是一个2D的平面，所以直接沿着x轴立体旋转看不出效果。</p><p>此时可以通过perspective属性，可以定义眼睛距视图的距离，单位是px。</p></blockquote><p><strong><code>perspective</code> 属性给父元素设置，可以让其子元素有近大远小的效果。</strong></p><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">perspective</span>：1000<span class="selector-tag">px</span>;</span><br></pre></td></tr></table></figure><p><strong>其实和生活中的场景是一样的：</strong></p><p><img src="/images/per1.jpg" alt="per1"></p><blockquote><p>路实质都是一样的宽的，那怎么看出来那边更近呢？近的会大一点，远的会小一点。</p></blockquote><p><img src="/images/per2.jpg" alt="per2"></p><blockquote><p>房子实质都是一样大的，那怎么看出来右边的更近，左边的更远？近大远小</p></blockquote><p><code>perspective</code> 的取值：设置的是观察者眼睛离元素初始平面（z=0平面）的距离</p><ul><li>如果取值越大，表示距离越远，近大远小的效果就越不明显</li><li>如果取值越小，表示距离越近，近大远小的效果就越明显</li></ul><blockquote><p>一般不会给太小，适中即可。</p></blockquote><p>接下来我们主要学习最常用的两个3d转换~</p><h3 id="3d旋转（rotate）"><a href="#3d旋转（rotate）" class="headerlink" title="3d旋转（rotate）"></a>3d旋转（rotate）</h3><blockquote><p>rotate直接设置就是2D平面效果。</p><p>当rotate沿着x轴或者y轴进行旋转时，此时就是3D的效果</p></blockquote><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 让元素沿着x轴旋转 */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">rotateX</span>(45<span class="selector-tag">deg</span>);</span><br></pre></td></tr></table></figure><p><img src="/images/3d旋转rotateX.gif" alt="3d旋转rotateX" style="zoom:50%;"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 让元素沿着y轴旋转 */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">rotateY</span>(45<span class="selector-tag">deg</span>);</span><br></pre></td></tr></table></figure><p><img src="/images/3d旋转rotateY.gif" alt="3d旋转rotateY" style="zoom:50%;"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 让元素沿着z轴旋转，就是默认平面的效果，即rotate() */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">rotateZ</span>(45<span class="selector-tag">deg</span>);</span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">rotate</span>(45<span class="selector-tag">deg</span>);</span><br></pre></td></tr></table></figure><p><img src="/images/3d旋转rotateZ.gif" alt="3d旋转rotateZ" style="zoom:50%;"></p><h5 id="ヾ-๑╹◡╹-ﾉ”-演示3D旋转沿着不同轴旋转的效果"><a href="#ヾ-๑╹◡╹-ﾉ”-演示3D旋转沿着不同轴旋转的效果" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 演示3D旋转沿着不同轴旋转的效果"></a>ヾ(๑╹◡╹)ﾉ” 演示3D旋转沿着不同轴旋转的效果</h5><blockquote><p>具体旋转的方向可以使用左手法则来判断：</p><ol><li>掏出你的左手，左手握拳，伸出大拇指</li><li>让大拇指的指向轴的正方向</li><li>此时四指弯曲的方向就是图片旋转的方向</li></ol></blockquote><p>当然，其实具体效果不用纠结，写出代码看效果调试即可！</p><h3 id="3d平移（translate）"><a href="#3d平移（translate）" class="headerlink" title="3d平移（translate）"></a>3d平移（translate）</h3><blockquote><p>translate属性如果沿着z轴平移也会有3D的效果</p></blockquote><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 沿着z轴的正方向移动100px */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translateZ</span>(45<span class="selector-tag">px</span>);</span><br></pre></td></tr></table></figure><h4 id="3d移动的合写："><a href="#3d移动的合写：" class="headerlink" title="3d移动的合写："></a>3d移动的合写：</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 如果需要同时设置三个轴方向的平移，可以写成 */</span></span><br><span class="line"><span class="selector-tag">transform</span>: <span class="selector-tag">translateX</span>(100<span class="selector-tag">px</span>) <span class="selector-tag">translateY</span>(100<span class="selector-tag">px</span>) <span class="selector-tag">translateZ</span>(100<span class="selector-tag">px</span>);</span><br><span class="line"><span class="comment">/* 也可以使用3d移动的简写方法 */</span></span><br><span class="line"><span class="selector-tag">transform</span><span class="selector-pseudo">:translate3d(x</span>,<span class="selector-tag">y</span>,<span class="selector-tag">z</span>);</span><br></pre></td></tr></table></figure><h5 id="ヾ-๑╹◡╹-ﾉ”-3D立方体效果"><a href="#ヾ-๑╹◡╹-ﾉ”-3D立方体效果" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 3D立方体效果"></a>ヾ(๑╹◡╹)ﾉ” 3D立方体效果</h5><p><strong>先是立方体的铺垫：</strong></p><blockquote><p>当一个元素rotateY(45deg)是什么效果？z轴指向哪里？</p><p>当一个元素rotateY(90deg)是什么效果？z轴指向哪里？</p></blockquote><ul><li>面朝向的方向就是z轴，旋转时，面朝的方向永远是z轴</li></ul><p>实现六个面的思路：</p><ol><li>先让这个面旋转到对应的方向</li><li>往z轴（面朝向）平移到对应的距离即可</li></ol><h5 id="————————-2"><a href="#————————-2" class="headerlink" title="————————"></a>————————</h5><p><strong>整体思路：</strong></p><blockquote><p>整体是一个ul，每一个面是li标签，然后让每一个面沿着不同方向旋转之后移动，组合成立方体</p><p>按照下方思路图一步步完成</p></blockquote><p><img src="/images/立方体思路2.gif" alt="3d正方体思路"></p><h3 id="transform-style"><a href="#transform-style" class="headerlink" title="transform-style"></a>transform-style</h3><blockquote><p>其实perspective是一个伪3D：说白了只是多个一个近大远小的效果而已，但是本质上来说还是一个平面元素</p><p>如果需要真正实现3D空间的转换，需要通过transform-style来实现</p></blockquote><p><strong>演示：</strong> ul里面两个li100*400，让第二个li标签沿着x轴旋转45deg，此时旋转ul盒子看的效果</p><p><strong>默认效果：</strong></p><blockquote><p>默认效果来说发现li标签变短了，看不出3d效果</p></blockquote><p><img src="/images/默认.gif" alt="默认"></p><p><strong>设置perspective：1000px之后：</strong></p><blockquote><p>设置视距之后只是有了近大远小的视觉效果，但是实际旋转看发现还是一个纸片人，不是真的3d元素</p></blockquote><p><img src="/images/perspective.gif" alt="perspective"></p><p><strong>设置<code>transform-style: preserve-3d;</code> 之后：</strong></p><blockquote><p>设置了<code>transform-style: preserve-3d;</code> 元素变成3d元素，是真的3d元素</p></blockquote><p><img src="/images/preserve-3d.gif" alt="preserve-3d"></p><p><strong>代码：</strong> <code>transform-style:preserve-3d;</code></p><p><strong>取值：</strong></p><ul><li>flat：子元素在2d平面中显示（默认值）</li><li>preserve-3d：子元素在3D空间中显示</li></ul><p><strong>注意点：</strong></p><ul><li>transform-style属性同样也是给父元素添加的！！</li></ul><p><strong>transform-style与perspective的区别：</strong></p><ul><li>perspective仅仅只是在平面中模拟出近大远小的效果，并不是真正的3D元素。</li><li>transform-style可以让其子元素在一个3D空间中布局，是真正的3D元素</li><li>以后真正需要完成真正的3D元素需要使用transform-style属性。如果需要有近大远小的视觉效果，可以加上perspective属性。</li></ul><h5 id="————————-3"><a href="#————————-3" class="headerlink" title="————————"></a>————————</h5><h5 id="ヾ-๑╹◡╹-ﾉ”-作业：3D导航效果"><a href="#ヾ-๑╹◡╹-ﾉ”-作业：3D导航效果" class="headerlink" title="ヾ(๑╹◡╹)ﾉ” 作业：3D导航效果"></a>ヾ(๑╹◡╹)ﾉ” 作业：3D导航效果</h5><p><img src="/images/3d导航.gif" alt="3d导航"></p><p><strong>思路：</strong> </p><ul><li>整体是ul，每个导航是1（100*50），li有两个面，使用a标签表示</li><li>通过定位先让两个a重叠，然后通过转换改变a标签面的位置<ul><li><code>web前端</code>首先需要沿着x轴旋转90deg，然后沿着z轴直走高度的一半（25）</li><li><code>传智播客</code> 直接沿着z轴直走高度的一半（25）</li></ul></li></ul><p><img src="/images/3d导航思路.gif" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;《部分案例代码下载》&quot;&gt;&lt;a href=&quot;#《部分案例代码下载》&quot; class=&quot;headerlink&quot; title=&quot;《部分案例代码下载》&quot;&gt;&lt;/a&gt;&lt;a href=&quot;/download/移动webday01部分案例代码.zip&quot;&gt;《部分案例代码下载》&lt;/a&gt;&lt;
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
      <category term="移动web" scheme="http://yoursite.com/tags/%E7%A7%BB%E5%8A%A8web/"/>
    
  </entry>
  
  <entry>
    <title>二倍图对比</title>
    <link href="http://yoursite.com/2020/02/06/4-%E4%BA%8C%E5%80%8D%E5%9B%BE%E5%AF%B9%E6%AF%94/"/>
    <id>http://yoursite.com/2020/02/06/4-二倍图对比/</id>
    <published>2020-02-06T02:00:01.000Z</published>
    <updated>2020-03-11T09:09:05.187Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二倍图对比"><a href="#二倍图对比" class="headerlink" title="二倍图对比"></a>二倍图对比</h1><p>  </p><h1>一倍图</h1><br>  <img src="/images/100.jpg" width="100px" alt="" border="1"><br>  <h1>二倍图</h1><br>  <img src="/images/200.jpg" width="100px" alt="" border="1 "><p></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;二倍图对比&quot;&gt;&lt;a href=&quot;#二倍图对比&quot; class=&quot;headerlink&quot; title=&quot;二倍图对比&quot;&gt;&lt;/a&gt;二倍图对比&lt;/h1&gt;&lt;p&gt;  &lt;/p&gt;&lt;h1&gt;一倍图&lt;/h1&gt;&lt;br&gt;  &lt;img src=&quot;/images/100.jpg&quot; width=&quot;
      
    
    </summary>
    
    
      <category term="课堂测试demo" scheme="http://yoursite.com/tags/%E8%AF%BE%E5%A0%82%E6%B5%8B%E8%AF%95demo/"/>
    
  </entry>
  
  <entry>
    <title>基础班PS的基本操作</title>
    <link href="http://yoursite.com/2019/02/20/1-PS%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2019/02/20/1-PS的基本操作/</id>
    <published>2019-02-20T02:15:00.000Z</published>
    <updated>2020-03-11T06:42:36.446Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ps的基本操作"><a href="#ps的基本操作" class="headerlink" title="ps的基本操作"></a>ps的基本操作</h2><blockquote><p>作为前端工程师来说，对于PS的使用要求是：</p><ul><li>会量尺寸</li><li>会量颜色</li></ul><p>前端的重点在代码的编写，按照设计图完成一个页面。</p></blockquote><h3 id="首选项设置"><a href="#首选项设置" class="headerlink" title="首选项设置"></a>首选项设置</h3><blockquote><p>在使用PS之前，需要先把首选项设置好</p></blockquote><p><strong>步骤：</strong></p><ol><li><code>ctrl+k</code> 打开首选项</li><li>选择<code>单位与标尺</code></li><li>将单位都设置为<code>像素</code></li></ol><p><img src="\images\css2.png" alt="css2"></p><h3 id="打开文件"><a href="#打开文件" class="headerlink" title="打开文件"></a>打开文件</h3><blockquote><p>使用PS操作图片的第一步：打开图片</p></blockquote><ul><li>直接把图片拖拽进PS即可</li><li>或者点击左上角 <code>文件</code> → <code>打开</code> →选择对应文件即可</li></ul><h3 id="放大图片"><a href="#放大图片" class="headerlink" title="放大图片"></a>放大图片</h3><blockquote><p>有时候需要把图片放大方便量取</p></blockquote><ul><li>点击左侧工具栏中的<strong>缩放工具（Z）</strong><img src="\images\css3.png" alt="css3"></li><li><strong>使用快捷键</strong><ul><li>放大：<code>ctrl +</code></li><li>缩小：<code>ctrl -</code></li></ul></li></ul><h3 id="拖动图片"><a href="#拖动图片" class="headerlink" title="拖动图片"></a>拖动图片</h3><blockquote><p>有时候放大之后需要拖动图片查看其它部分</p></blockquote><ul><li>选择左侧工具栏中的<strong>抓手工具（H）</strong><img src="\images\css4-1550476689994.png" alt="css4"></li><li><strong>使用快捷键</strong><ul><li>按住空格不放手，然后鼠标左键按下拖动即可</li></ul></li></ul><h3 id="量颜色"><a href="#量颜色" class="headerlink" title="量颜色"></a>量颜色</h3><blockquote><p>前端必会的PS操作之一：量颜色</p></blockquote><ol><li>选择左侧工具栏的<strong>吸管工具（I）</strong></li></ol><p><img src="\images\xi.png" alt="xi"></p><ol start="2"><li><p>此时光标变成可以吸管，在需要量颜色的地方点击一下</p><p><img src="\images\css6.png" alt="css6"></p></li><li><p>点击之后，鼠标右击，选择 <code>拷贝颜色的十六进制代码</code> ，最后在代码中 <code>ctrl + v</code> 即可</p></li></ol><h3 id="量尺寸"><a href="#量尺寸" class="headerlink" title="量尺寸"></a>量尺寸</h3><blockquote><p>前端必会的PS操作之一：量尺寸</p></blockquote><ol><li><p>选择左侧工具栏的<strong>切片工具（C）</strong></p><blockquote><p>注意：默认显示的效果可能是剪裁工具，需要有以下操作</p></blockquote><p><img src="\images\tools.png" alt="tools"></p></li><li><p>把需要量取的部分切片出来</p><p><img src="\images\ps1.png" alt="ps1"></p></li><li><p>双击切好的切片，查看量取的尺寸即可</p><p><img src="\images\ps2.png" alt="ps2"></p></li></ol><h3 id="切图操作"><a href="#切图操作" class="headerlink" title="切图操作"></a>切图操作</h3><blockquote><p>一般工作中图片都是UI设计好的，但是如果公司不够大，UI妹子人手不够忙不过来，可能需要自己切图</p></blockquote><ol><li><p>选择切片：使用切片工具把图片切成切片</p><p><img src="\images\ps1.png" alt="ps1"></p></li><li><p>导出切片：按下 <code>ctrl + shift + alt + s</code>  （三键 + s）</p></li><li><p>在弹出窗口设置保存图片格式，点击储存</p><p><img src="\images\ps3.png" alt="ps3"></p></li><li><p>选择 <code>切片</code> → <code>选中的切片</code></p><p><img src="\images\切片保存1.png" alt=""></p></li><li><p>选择 <code>设置</code> → <code>其他</code> →<code>将图片放进文件夹</code> 前面的勾去掉</p><p><img src="\images\切片保存2.png" alt=""></p><p><img src="\images\切片保存3.png" alt=""></p></li><li><p>最后点击确定，点击保存即可</p></li></ol><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><h3 id="导出有透明的图片（了解）"><a href="#导出有透明的图片（了解）" class="headerlink" title="导出有透明的图片（了解）"></a>导出有透明的图片（了解）</h3><blockquote><p>导出有透明的图片，需要保证图片是PSD格式的图片，并且UI有设置对应的透明图片</p><p>PSD图片：是由多张透明的图片重叠出来的，一张完整的PSD图片是由很多只图层构成的</p></blockquote><p><strong>步骤：</strong></p><ol><li><p>把PSD格式图片拖入PS中 </p></li><li><p>选择<strong>移动工具（V）</strong> <img src="\images\PS4.png" alt="PS4"> 按住 <code>ctrl</code> 点击需要导出的透明图片（有颜色的部分）</p></li><li><p>在图层面板中找到<strong>高亮的部分</strong>，右击选择<code>转换智能对象</code></p><p><img src="\images\ps5.png" alt="ps5"></p></li><li><p><strong>双击</strong>转换后图层前方的小图标，点击确定</p><p><img src="\images\ps6.png" alt="ps6"></p></li><li><p>此时透明的图片已经选取好了，再按下 <code>ctrl + shift + alt + s</code>  （三键 + s）<strong>直接保存</strong>即可</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ps的基本操作&quot;&gt;&lt;a href=&quot;#ps的基本操作&quot; class=&quot;headerlink&quot; title=&quot;ps的基本操作&quot;&gt;&lt;/a&gt;ps的基本操作&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;作为前端工程师来说，对于PS的使用要求是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;会量
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基础班day14笔记</title>
    <link href="http://yoursite.com/2019/02/20/1-%E5%9F%BA%E7%A1%80%E7%8F%ADday14%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/20/1-基础班day14笔记/</id>
    <published>2019-02-20T02:14:00.000Z</published>
    <updated>2019-03-02T05:17:17.019Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CSS3相关属性拓展（了解）"><a href="#CSS3相关属性拓展（了解）" class="headerlink" title="CSS3相关属性拓展（了解）"></a>CSS3相关属性拓展（了解）</h2><blockquote><p>css这个语言是随着时间的推进，有不同的版本迭代更新的，而css3是对css2的一些效果的完善和拓充，新增了很多新功能。但是值得注意的是css3因为的新版本，一些老版本（低版本的浏览器是不支持的！！）这样就存在一些兼容性问题。</p></blockquote><p><strong>遇到问题可以查阅相关的CSS手册</strong> </p><h2 id="结构伪类选择器"><a href="#结构伪类选择器" class="headerlink" title="结构伪类选择器"></a>结构伪类选择器</h2><blockquote><p>通过标签的结构关系找到对应的元素</p><p>如果现在想找到ul标签下面的第几个li标签的时候，除了使用class大法之外，还可以使用结构伪类选择器完成效果</p></blockquote><p><strong>如果要找第一个li标签呢？</strong></p><ul><li><p><strong>E:first-child</strong> ：选择其父元素的第一个子元素</p><blockquote><p>还会判断是否是E元素，是才设置样式。（既是E标签，又是父元素的第一个子元素）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">比如：li：first-child &#123;css样式&#125;</span><br><span class="line">查找过程如下：</span><br><span class="line">1、首先找到li </span><br><span class="line">2、找li标签的父元素</span><br><span class="line">3、找父元素第一个子元素</span><br><span class="line">4、看这个子元素是不是li</span><br><span class="line">1、是-》加样式</span><br><span class="line">2、不是-》不加样式</span><br></pre></td></tr></table></figure></li></ul><hr><p><strong>如果要找最后一个li标签呢？</strong></p><ul><li><p><strong>E:last-child</strong> ：选择其父元素的最后一个子元素</p><blockquote><p>还会判断是否是E元素，是才设置样式。（既是E标签，又是父元素的最后一个子元素）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">比如：li：last-child &#123;css样式&#125;</span><br><span class="line">查找过程如下：</span><br><span class="line">1、首先找到li </span><br><span class="line">2、找li标签的父元素</span><br><span class="line">3、找父元素最后一个子元素</span><br><span class="line">4、看这个子元素是不是li</span><br><span class="line">1、是-》加样式</span><br><span class="line">2、不是-》不加样式</span><br></pre></td></tr></table></figure></li></ul><hr><p><strong>如果要找第12个li标签呢？</strong></p><ul><li><p><strong>E:nth-child(n)</strong> ： 选择其父元素的第n个子元素</p><blockquote><p>还会判断是否是E元素，是才设置样式（既是E元素，又是父元素的第n个子元素）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">比如：li：nth-child(n) &#123;css样式&#125;</span><br><span class="line">查找过程如下：</span><br><span class="line">1、首先找到li </span><br><span class="line">2、找li标签的父元素</span><br><span class="line">3、找父元素第n个子元素</span><br><span class="line">4、看这个子元素是不是li</span><br><span class="line">1、是-》加样式</span><br><span class="line">2、不是-》不加样式</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><p>针对于nth-child括号中可以写一个带n的式子，n的取值范围是<strong>0~正无穷的整数</strong></p><ul><li>找到所有的<strong>偶数</strong>：<code>2n/even</code></li><li>找到所有的<strong>奇数</strong>：<code>2n-1 / 2n+1 /odd</code></li><li>找到<strong>前12个</strong>：<code>-n+12</code></li><li>……(更多新奇的玩法等待你的发现)</li></ul></li></ul><hr><p><strong>如果要找倒数第12个li标签呢？</strong></p><ul><li><p><strong>E:nth-last-child(n)</strong>：选择其父元素的<strong>倒数</strong>第n个子元素</p><blockquote><p>判断是否是E元素。（既是E元素，又是父元素的<strong>倒数</strong>第n个子元素）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">比如：li：nth-last-child(n) &#123;css样式&#125;</span><br><span class="line">查找过程如下：</span><br><span class="line">1、首先找到li </span><br><span class="line">2、找li标签的父元素</span><br><span class="line">3、找父元素倒数第n个子元素</span><br><span class="line">4、看这个子元素是不是li</span><br><span class="line">1、是-》加样式</span><br><span class="line">2、不是-》不加样式</span><br></pre></td></tr></table></figure></li></ul><hr><p><strong>如果列表中混入了奸细，怎么才能找到第一个li标签呢？</strong></p><ul><li><p><strong>E:nth-of-type(n)</strong>：选择其父元素的第n个E元素</p><blockquote><p>选择的是子元素中的第n个E元素</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">比如：li：nth-of-type(n) &#123;css样式&#125;</span><br><span class="line">查找过程如下：</span><br><span class="line">1、首先找到li </span><br><span class="line">2、找li标签的父元素</span><br><span class="line">3、找父元素的第n个E元素</span><br></pre></td></tr></table></figure></li></ul><h2 id="盒子阴影-边框阴影（box-shadow）"><a href="#盒子阴影-边框阴影（box-shadow）" class="headerlink" title="盒子阴影/边框阴影（box-shadow）"></a>盒子阴影/边框阴影（box-shadow）</h2><blockquote><p>类似于京东网页上，有盒子阴影的效果，同样可以通过CSS3中的box-shadow完成</p></blockquote><p><strong>代码：</strong> <code>box-shadow: 10px 10px 10px #aaa;</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">box-shadow:水平阴影 垂直阴影 模糊距离 阴影尺寸 阴影颜色  内/外阴影；</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">h-shadow</td><td style="text-align:center">必需。水平阴影的位置。允许负值。</td></tr><tr><td style="text-align:center">v-shadow</td><td style="text-align:center">必需。垂直阴影的位置。允许负值。</td></tr><tr><td style="text-align:center">blur</td><td style="text-align:center">可选。模糊距离。</td></tr><tr><td style="text-align:center">spread</td><td style="text-align:center">可选。阴影的尺寸。</td></tr><tr><td style="text-align:center">color</td><td style="text-align:center">可选。阴影的颜色。</td></tr><tr><td style="text-align:center">inset</td><td style="text-align:center">可选。将外部阴影 (outset) 改为内部阴影。</td></tr></tbody></table><p><strong>注意点：</strong></p><ul><li>前两个属性是必须写的。其余的可以省略。</li><li>默认阴影是外部阴影，但是不能设置outset这个属性值。如果想要内部阴影，请设置inset </li></ul><h2 id="文字阴影（text-shadow）"><a href="#文字阴影（text-shadow）" class="headerlink" title="文字阴影（text-shadow）"></a>文字阴影（text-shadow）</h2><blockquote><p>在CSS3中除了可以给盒子设置阴影效果之外，还可以给文字设置阴影效果</p></blockquote><p><strong>代码：</strong> <code>text-shadow: 5px 5px 10px #000;</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">text-shadow</span>:水平位置 垂直位置 模糊距离 阴影颜色;</span><br></pre></td></tr></table></figure><p><strong>取值：</strong></p><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">h-shadow</td><td style="text-align:center">必需。水平阴影的位置。允许负值。</td></tr><tr><td style="text-align:center">v-shadow</td><td style="text-align:center">必需。垂直阴影的位置。允许负值。</td></tr><tr><td style="text-align:center">blur</td><td style="text-align:center">可选。模糊的距离。</td></tr><tr><td style="text-align:center">color</td><td style="text-align:center">可选。阴影的颜色。</td></tr></tbody></table><p><strong>有趣的案例：</strong></p><blockquote><p>可以给一个文字设置多个阴影效果，中间使用逗号 “,” 进行连接。</p></blockquote><p><img src="\images\aotu.png" alt="aotu"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*凸出来文字*/</span></span><br><span class="line"><span class="selector-tag">text-shadow</span>: 1<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> <span class="selector-id">#000</span>,<span class="selector-tag">-1px</span> <span class="selector-tag">-1px</span> 1<span class="selector-tag">px</span> <span class="selector-id">#fff</span>;</span><br><span class="line"><span class="comment">/*凹进去文字*/</span></span><br><span class="line"><span class="selector-tag">text-shadow</span>: <span class="selector-tag">-1px</span> <span class="selector-tag">-1px</span> 1<span class="selector-tag">px</span> <span class="selector-id">#000</span>,1<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> 1<span class="selector-tag">px</span> <span class="selector-id">#fff</span>;</span><br><span class="line"><span class="comment">/* 背景颜色和文字颜色为#666即可 */</span></span><br></pre></td></tr></table></figure><h2 id="背景图片大小（background-size）"><a href="#背景图片大小（background-size）" class="headerlink" title="背景图片大小（background-size）"></a>背景图片大小（background-size）</h2><blockquote><p>有时候可以设置背景图片的大小</p></blockquote><p><strong>取值（分别设置的是宽度和高度）：</strong></p><ul><li><p>数字+px</p></li><li><p>百分比（相对于盒子的宽高百分比）</p></li><li><p>关键字</p><p><strong>默认尺寸：</strong></p><p><img src="\images\1.1.png" alt="1.1"></p><ul><li><ul><li><p><strong>contain</strong>：将背景图片等比例缩放，直到<strong>不会超出盒子</strong>的最大</p><blockquote><p>直到宽度或者高度中<strong>有一个和盒子相等</strong>，并且背景图片<strong>没有溢出部分</strong>即止。</p></blockquote><p><img src="\images\1.3.png" alt="1.3"></p></li></ul></li></ul></li></ul><ul><li><p><strong>cover</strong>：将背景图片等比例缩放，直到<strong>填满整个盒子</strong>没有空白</p><blockquote><p>直到宽度或者高度中<strong>有一个和盒子相等</strong>，并且<strong>背景图片填充满盒子</strong>如果有溢出部分则被隐藏</p></blockquote><p><img src="\images\1.2-1550336266662.png" alt="1.2"></p></li></ul><p><strong>注意点：</strong></p><ul><li><p>在设置<code>background-size</code> 和<code>background</code>连写的时候注意覆盖问题</p><ul><li><p>要么单独写的写在连写的下面</p></li><li><p>要么单独写的写在连写的里面</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 连写完整版中，也有background-size属性，注意连写的覆盖问题 */</span></span><br><span class="line">background：color image repeat attachment position / size</span><br></pre></td></tr></table></figure></li></ul></li></ul><h2 id="背景渐变"><a href="#背景渐变" class="headerlink" title="背景渐变"></a>背景渐变</h2><blockquote><p>给一个元素设置 <strong>background-image</strong> 属性时，不仅可以通过url指定一张图片，还可以通过线性渐变(linear-gradient)或者径向渐变(radial-gradient)设置一张颜色渐变的背景图。</p></blockquote><h3 id="线性渐变"><a href="#线性渐变" class="headerlink" title="线性渐变"></a>线性渐变</h3><blockquote><p>沿着一个方向颜色进行线性渐变</p></blockquote><p><strong>代码：</strong><code>background-image: linear-gradient(green,yellow);</code> <strong>（默认从上往下渐变）</strong></p><p><img src="\images\2.9.png" alt="2.9"></p><p><strong>取值：</strong></p><ul><li><p><strong>第一个值</strong>：可以是<strong>方向</strong>或者<strong>角度</strong>（<strong>可以省略</strong>）</p><ul><li><p><strong>方向</strong></p><ul><li><p><strong>to top</strong>：  渐变从下到上。相当于: <strong>0deg</strong> </p><p><code>background-image: linear-gradient(to top,green,yellow);</code></p><p><img src="\images\2.1-1550376839085.png" alt="2.1"></p></li><li><p><strong>to right</strong>：  渐变从左到右。相当于: <strong>90deg</strong> </p><p><code>background-image: linear-gradient(to right,green,yellow);</code></p><p><img src="\images\2.2.png" alt="2.2"></p></li><li><p><strong>to bottom</strong>：  渐变从上到下。相当于: <strong>180deg</strong>（<strong>默认值</strong>）</p><p><code>background-image: linear-gradient(to bottom,green,yellow);</code></p><p><img src="\images\2.3.png" alt="2.3"></p></li><li><p><strong>to left</strong>：  渐变为从右到左。相当于: <strong>270deg</strong> </p><p><code>background-image: linear-gradient(to left,green,yellow);</code></p><p><img src="\images\2.4.png" alt="2.4"></p></li></ul></li><li><p><strong>角度（效果对比上图）</strong></p><ul><li><strong>0deg</strong>：渐变从下往上</li><li><strong>90deg</strong>：渐变从左往右</li><li><strong>180deg</strong>：渐变从上往下（默认值）</li><li><strong>270deg</strong>：渐变从右往左</li></ul></li></ul></li></ul><ul><li><p><strong>第二个值</strong>：渐变的<strong>起止颜色</strong>（<strong>可以写两个或者多个</strong>）</p><p><code>background-image: linear-gradient(to right,red,green,blue);</code></p><p>第一个是开始颜色，在最左端是纯红色</p><p>中间是绿色，所以最中间是纯绿色</p><p>最后一个是结束颜色，在最右端是纯蓝色</p><p>（之后每对颜色之间就是渐变）</p><p><img src="\images\2.5.png" alt="2.5"></p></li></ul><p>  纯颜色的点默认是<strong>等分线段</strong>的。</p><p>  <img src="\images\线性渐变.png" alt="线性渐变"></p><blockquote><p>如果不想默认等分线段，想手动设置纯颜色的位置怎么做呢？</p></blockquote><p>  可以在颜色的后面加上<strong>对应的长度</strong>（类似于线段的坐标）</p><ul><li><p>可以在颜色的后面写上对应的长度</p><ul><li><p>具体的数值</p><blockquote><p>开始是第一个颜色，结束时最后一个颜色</p><p>然后把纯色放到对应的坐标上，再渐变即可</p></blockquote><p><code>background-image: linear-gradient(to right,red 100px,green 200px,blue 300px);</code></p><p><img src="\images\2.6.png" alt="2.6"></p><p><img src="\images\线性渐变2.png" alt="线性渐变2"></p></li><li><p>百分比（原理同上）</p></li></ul></li></ul><p><strong>拓展（了解）</strong>：</p><blockquote><p>如果要求是几个纯色块呢？</p></blockquote><p><img src="\images\2.8.png" alt="2.8"></p><p>其实，可以分析：</p><ul><li>开始是红色</li><li>结束时蓝色</li><li>中间一半的地方红色和蓝色（50%，先红色，在蓝色）</li></ul><p><code>background-image: linear-gradient(to right,red 50%,blue 50%);</code></p><blockquote><p>那如果是多个色块会不会呢？</p></blockquote><p><img src="\images\2.7-1550380975824.png" alt="2.7"></p><p><code>background-image: linear-gradient(to right,red 25%,blue 25%,blue 50%,red 50%,red 75%,blue 75%);</code></p><h3 id="径向渐变"><a href="#径向渐变" class="headerlink" title="径向渐变"></a>径向渐变</h3><blockquote><p>由中心向四周渐变（圆或者椭圆的效果）</p></blockquote><p><strong>代码：</strong> <code>background-image: radial-gradient(green,yellow);</code> （<strong>默认从中点向四周渐变</strong>）</p><p><img src="\images\3.1.png" alt="3.1"></p><p><strong>取值：</strong></p><ul><li><p><strong>第一个值</strong>：可以是<strong>形状</strong>或者<strong>半径</strong>（<strong>可以省略</strong>）</p><ul><li><p><strong>形状</strong>：</p><ul><li><p><strong>circle</strong>：圆形</p><p><code>background-image: radial-gradient(circle,yellow,blue);</code></p><p><img src="\images\3.2.png" alt="3.2"></p></li><li><p><strong>ellipse</strong>：椭圆（默认值，要求盒子是一个矩形才会有效果，正方形时是圆形的效果）</p><p><code>background-image: radial-gradient(ellipse,yellow,blue);</code></p><p><img src="\images\3.3.png" alt="3.3"></p></li></ul></li><li><p><strong>半径</strong></p><blockquote><p>指的是渐变范围的半径</p></blockquote><ul><li><p>设置两个相同的半径是一个正圆</p><p><code>background-image: radial-gradient(100px 100px,yellow,blue);</code></p><p><img src="\images\3.4.png" alt="3.4"></p></li><li><p>设置两个不同半径是一个椭圆</p><p><code>background-image: radial-gradient(300px 100px,yellow,blue);</code></p><p><img src="\images\3.5.png" alt="3.5"></p></li></ul></li><li><p><strong>圆形的位置</strong></p><blockquote><p>默认渐变的圆心在盒子的中点上，如果想改变圆心的位置怎么做呢？</p></blockquote><p><strong>代码：</strong> <code>background-image: radial-gradient(100px 100px at 100px 100px,yellow,blue);</code> </p><p>设置圆心的位置：<code>at 100px 100px</code> 指的是盒子的坐标点</p><p><img src="\images\3.6.png" alt="3.6"></p></li></ul></li><li><p><strong>第二个值</strong>：渐变的<strong>起止颜色</strong>（<strong>可以写两个或者多个</strong>）</p><p>线性渐变一样的套路。</p></li><li><p><strong>拓展（了解）</strong>：</p><blockquote><p>可以完成一个立体小球的效果</p></blockquote><p><img src="\images\3.7.png" alt="3.7"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 立体球的效果 */</span></span><br><span class="line"><span class="comment">/*先变成一个圆*/</span></span><br><span class="line"><span class="selector-tag">border-radius</span>: 50%;</span><br><span class="line"><span class="comment">/*给球设置一个背景颜色*/</span></span><br><span class="line"><span class="selector-tag">background-color</span>: <span class="selector-tag">pink</span>;</span><br><span class="line"><span class="comment">/*设置渐变的圆心，然后使用半透明的渐变效果*/</span></span><br><span class="line"><span class="selector-tag">background-image</span>: <span class="selector-tag">radial-gradient</span>(<span class="selector-tag">at</span> 100<span class="selector-tag">px</span> 100<span class="selector-tag">px</span>,<span class="selector-tag">rgba</span>(0,0,0,0),<span class="selector-tag">rgba</span>(0,0,0,<span class="selector-class">.8</span>));</span><br></pre></td></tr></table></figure></li></ul><h2 id="多背景写法"><a href="#多背景写法" class="headerlink" title="多背景写法"></a>多背景写法</h2><blockquote><p>在CSS3中，可以做到给一个盒子设置多个背景图片</p></blockquote><p>使用背景的连写形式，通过逗号分隔不同的背景图片即可。</p><p><strong>注意点：</strong></p><ul><li>一个元素可以设置多个背景图片</li><li>每组背景属性之间需要通过逗号隔开</li><li>如果多组背景图片之间存在层叠关系，则前面的会覆盖在后面的背景图上</li><li>如果需要设置背景颜色，则背景颜色需要设置到最后一组中。</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">background</span>:  <span class="selector-tag">url</span>(1<span class="selector-class">.jpg</span>) <span class="selector-tag">no-repeat</span> <span class="selector-tag">left</span> <span class="selector-tag">top</span>,</span><br><span class="line"><span class="selector-tag">url</span>(2<span class="selector-class">.jpg</span>)  <span class="selector-tag">no-repeat</span> <span class="selector-tag">right</span> <span class="selector-tag">bottom</span>,</span><br><span class="line">url(3.gif) no-repeat center center/100px 100px;</span><br></pre></td></tr></table></figure><h2 id="元素本身透明（opacity）"><a href="#元素本身透明（opacity）" class="headerlink" title="元素本身透明（opacity）"></a>元素本身透明（opacity）</h2><blockquote><p>除了可以让背景颜色透明之外，还可以让元素整体（包括里面的内容）一起透明</p></blockquote><p><strong>代码：</strong> <code>opacity:0</code> </p><p><strong>取值：</strong> 0~1之间的一位小数</p><p><strong>注意点：</strong></p><ul><li>opacity会让元素整体透明，包括里面的内容（文字或者子元素）</li><li>背景透明仅仅只是让背景颜色变得透明，要根据需求选取方法。</li></ul><h2 id="通过phpstudy把静态页面部署到web服务器"><a href="#通过phpstudy把静态页面部署到web服务器" class="headerlink" title="通过phpstudy把静态页面部署到web服务器"></a>通过phpstudy把静态页面部署到web服务器</h2><ol><li><p>安装phpstudy，注意不能有中文路径</p><ul><li><p>双击软件</p></li><li><p>选择安装目录（注意，要求路径中不能有中文！！！默认的路径即可）</p><p><img src="\images\php1.png" alt="php1"></p></li><li><p>点击ok之后，会默认跳转到phpstudy官网上，然后提示<code>为了防止重复初始化，选择是</code> 点击是即可！</p><p><img src="\images\php2.png" alt="php2"></p></li><li><p>然后可以访问自己本地的服务器，在地址栏中输入<code>127.0.0.1</code> 访问</p></li></ul></li><li><p>把自己的网页放到www文件夹中，找到安装目录下面的www文件夹，把自己写好的页面放到这个文件夹中去</p></li><li><p>通过查看自己的ip，通过浏览器输入ip地址访问自己写的网页</p><p>win+r 输入cmd，往黑窗口中输入ipconfig，回车，以太网适配器查看192.168开头</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CSS3相关属性拓展（了解）&quot;&gt;&lt;a href=&quot;#CSS3相关属性拓展（了解）&quot; class=&quot;headerlink&quot; title=&quot;CSS3相关属性拓展（了解）&quot;&gt;&lt;/a&gt;CSS3相关属性拓展（了解）&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;css这个语言是随
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基础班day13笔记</title>
    <link href="http://yoursite.com/2019/02/20/1-%E5%9F%BA%E7%A1%80%E7%8F%ADday13%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/20/1-基础班day13笔记/</id>
    <published>2019-02-20T02:13:00.000Z</published>
    <updated>2019-03-02T05:13:34.278Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><blockquote><ul><li style="list-style: none"><input type="checkbox"> 能够完成品优购首页推荐模块</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够完成品优购首页焦点图模块</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够完成品优购首页楼层模块</li></ul></blockquote><p><strong>理解上课的知识点……</strong></p><h2 id="使用css写出一个三角形"><a href="#使用css写出一个三角形" class="headerlink" title="使用css写出一个三角形"></a>使用css写出一个三角形</h2><blockquote><p>有时候需要在页面中展示一个三角形，并且要求只使用css代码，不用图片或者字体图标，怎么实现？</p></blockquote><p><strong>例如：</strong></p><p><img src="\images\jd.png" alt="jd"></p><p><strong>可以通过边框来实现：</strong></p><ul><li>设置一个盒子</li><li>设置四周不同颜色的边框</li><li>盒子的宽高设置为0</li></ul><p><img src="\images\css三角形.png" alt=""></p><ul><li>此时每一个方向的边框就是一个三角形了，选择一个之后让其他边框的颜色为<strong>全透明</strong>即可</li></ul><h3 id="背景透明"><a href="#背景透明" class="headerlink" title="背景透明"></a>背景透明</h3><blockquote><p>设置透明的方法</p></blockquote><ul><li><strong>rgba（0,0,0,0）</strong></li><li><strong>transparent</strong>：表示全透明的颜色</li></ul><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ------------------------------------方法一------------------------------------ */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="number">100px</span> solid purple;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">100px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="number">100px</span> solid transparent;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="number">100px</span> solid transparent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* -----------------------------------方法二--------------------------------------- */</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-color</span>: transparent transparent transparent purple;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三种鼠标常见的样式"><a href="#三种鼠标常见的样式" class="headerlink" title="三种鼠标常见的样式"></a>三种鼠标常见的样式</h2><blockquote><p>通过cursor属性来设置鼠标移入盒子中的样式</p></blockquote><p>取值：</p><ul><li><strong>default</strong> ：光标为一个箭头（默认样式） </li><li><strong>pointer</strong> ：光标为一只小手（a标签的默认样式）</li><li><strong>text</strong> ：此光标指示文本 </li><li><strong>move</strong>：显示十字光标（表示可移动的效果）</li></ul><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><h3 id="相邻兄弟选择器（知道即可）"><a href="#相邻兄弟选择器（知道即可）" class="headerlink" title="相邻兄弟选择器（知道即可）"></a>相邻兄弟选择器（知道即可）</h3><blockquote><p>用的不多</p></blockquote><h3 id="相邻选择器（-）"><a href="#相邻选择器（-）" class="headerlink" title="相邻选择器（+）"></a>相邻选择器（+）</h3><blockquote><p>选择<strong>某个元素后面紧贴着的的第一个兄弟元素</strong>（ <strong>只找一个</strong>）</p></blockquote><p><strong>例子：</strong>如何通过.son1找到.son2呢？</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son1"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son2"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以通过相邻选择器找到：</p><p><code>.son+div {}</code></p><p>注意点：</p><ul><li>相邻兄弟选择只会选择相邻的那个元素，本身元素不会选中。</li></ul><h3 id="兄弟选择器（-）"><a href="#兄弟选择器（-）" class="headerlink" title="兄弟选择器（~）"></a>兄弟选择器（~）</h3><blockquote><p>选择<strong>某个元素后面的所有兄弟元素</strong>（<strong>会找一堆</strong>）</p></blockquote><p><strong>例子：</strong>找到h1标签后面所有兄弟中的p标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>2<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>3<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>4<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>5<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>6<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>7<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>8<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以通过兄弟选择器找到：</p><p><code>h1~p {}</code></p><h3 id="属性选择器的一些匹配规则（知道即可）"><a href="#属性选择器的一些匹配规则（知道即可）" class="headerlink" title="属性选择器的一些匹配规则（知道即可）"></a>属性选择器的一些匹配规则（知道即可）</h3><blockquote><p>可以通过标签的属性选择标签</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span> <span class="attr">class</span>=<span class="string">"baidu"</span>&gt;</span>百度一下<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>点击不跳转<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.itcast.cn"</span> <span class="attr">class</span>=<span class="string">"itcast"</span>&gt;</span>传智播客<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p><strong>E:[class]</strong></p><p>选择带有class属性的E元素。 </p><p>如：选中<strong>带有class属性</strong>的元素为红色</p></li><li><p><strong>E:[class=”attr”]</strong></p><p>选择带有class属性，并且属性值是attr的E元素</p><p>如：选中<strong>class属性值为baidu</strong>的元素为黄色</p></li><li><p><strong>E:[class^=”attr”]</strong></p><p>选择带有class属性，并且属性值是 <strong>以attr开头</strong> 的E元素</p><p>如：选中<strong>href属性值以http开头</strong>的元素为粉色</p></li><li><p><strong>E:[class$=”attr”]</strong></p><p>选择带有class属性，并且属性值是 <strong>以attr结尾</strong> 的E元素</p><p>如：选中<strong>href属性值以cn结尾</strong>的元素为橘色</p></li><li><p><strong>E:[class*=”attr”]</strong></p><p>选择带有class属性，并且属性值是 <strong>包含attr</strong> 的E元素</p><p>如：选中<strong>href属性值里包含www</strong>的元素为紫色</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;check
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基础班day12笔记</title>
    <link href="http://yoursite.com/2019/02/20/1-%E5%9F%BA%E7%A1%80%E7%8F%ADday12%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/20/1-基础班day12笔记/</id>
    <published>2019-02-20T02:12:00.000Z</published>
    <updated>2019-03-02T05:10:12.290Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><blockquote><ul><li style="list-style: none"><input type="checkbox"> 能够使用ps进行基本操作</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够完成项目基本目录搭建</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够完成品优购头部</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够完成品优购导航</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够设置盒子的边框圆角</li></ul><p>。。。。。。</p></blockquote><p><strong>理解上课的知识点……</strong></p><h2 id="CSS3边框圆角（border-radius）"><a href="#CSS3边框圆角（border-radius）" class="headerlink" title="CSS3边框圆角（border-radius）"></a>CSS3边框圆角（border-radius）</h2><blockquote><p>边框圆角： <code>border-radius</code> 可以让盒子的四角变得圆润，也可以画一个圆</p><p>border：边框</p><p>radius：半径</p></blockquote><p><img src="\images\css画一个圆.png" alt="css画一个圆"></p><p><strong>取值：</strong></p><ul><li>一个值：左上右上右下左下</li><li>两个值：左上右下、右上左下</li><li>三个值：左上、右上左下、右下</li><li>四个值：左上、右上、右下、左下</li></ul><p><strong>记忆方法：</strong> 先从左上开始赋值，顺时针赋值，如果没有赋值的，看对面的。</p><p><strong>常见的应用：</strong></p><ul><li><p><strong>画一个圆</strong></p><ul><li>盒子必须是一个正方形</li><li>border-radius：50%</li></ul></li><li><p><strong>胶囊按钮</strong></p><ul><li>盒子是一个矩形</li><li>border-radius：盒子高度的一半</li></ul></li></ul><p><img src="\images\jn.png" alt="jn"></p><h2 id="样式初始化的补充"><a href="#样式初始化的补充" class="headerlink" title="样式初始化的补充"></a>样式初始化的补充</h2><blockquote><p>有时候会需要去除input默认的边框和textarea的自由缩放</p></blockquote><p><strong>去除边框：</strong></p><ul><li>border：none</li></ul><p><strong>去除input点击之后的边框轮廓线：</strong></p><ul><li>outline-style: none</li></ul><p><strong>设置禁止textarea自由缩放：</strong></p><ul><li>resize：none</li></ul><h2 id="盒子宽高的百分比设置"><a href="#盒子宽高的百分比设置" class="headerlink" title="盒子宽高的百分比设置"></a>盒子宽高的百分比设置</h2><p><strong>需求：</strong></p><p>如果需要一个父盒子中的四个子盒子，宽度为父盒子的四分之一，高度为父盒子的高度，怎么去完成？</p><p><strong>方案：</strong></p><ul><li>可以直接设置数值（自己计算）</li><li>可以直接设置百分比（百分比相对于父盒子的宽高，让浏览器去计算）</li></ul><h2 id="品优购项目搭建"><a href="#品优购项目搭建" class="headerlink" title="品优购项目搭建"></a>品优购项目搭建</h2><blockquote><p>每一个项目开始之前都要有项目的搭建。</p><p>品优购作为一个<strong>有很多页面</strong>的<strong>大型的项目</strong>，每个页面都有自己对应的css文件，所以css文件需要单独放在一个<strong>css文件夹</strong>中</p></blockquote><p><strong>项目搭建步骤：</strong></p><ul><li><p>新建项目文件夹</p></li><li><p>新建images文件夹，把图片放在images文件夹中</p></li><li><p>新建css文件夹，把所有页面的css文件放入</p><blockquote><p>大型项目有多个页面，每个页面都有对应的css文件，为了项目的查阅方便，一般会把所有的css专门放在一个文件夹汇总</p></blockquote><ul><li>新建index.css放入文件夹</li></ul></li><li><p>新建页面index.html</p></li></ul><p><strong>样式的初始化：</strong></p><ul><li><p>index.css中进行样式的初始化（把项目中要用的样式先写好）</p><ul><li><p>因为样式的初始化每个项目都是一样的，所有公司开发的时候会把样式初始化代码写成一个单独的<strong>base.css</strong>文件，开发的时候直接引入即可</p><h5 id="ヾ-๑╹◡╹-ﾉ”查看公司写好的base-css的代码"><a href="#ヾ-๑╹◡╹-ﾉ”查看公司写好的base-css的代码" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”查看公司写好的base.css的代码"></a>ヾ(๑╹◡╹)ﾉ”查看公司写好的base.css的代码</h5><blockquote><p>问题：为什么要进行css初始化？请举例说明</p></blockquote><p><strong>为什么要进行css初始化？</strong></p><ol><li>因为不同浏览器对于不同标签有默认样式（比如默认padding和margin、a标签默认的下划线……）</li><li>开发的时候并不需要默认的样式。并且需要在不同浏览器中展示的效果是一样的</li><li>所以我们一般在项目开始的时候，会去除浏览器默认的样式即：css的初始化，需要的时候自己设置样式即可。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 举例说明 --&gt;</span></span><br><span class="line"></span><br><span class="line">1.清除标签的默认margin和padding：</span><br><span class="line">* &#123;</span><br><span class="line">    margin: 0; </span><br><span class="line">    padding: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">2.清除li标签之前的小点：</span><br><span class="line">ul&#123;</span><br><span class="line">    list-style: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">3.清除a的下划线：</span><br><span class="line">a &#123;</span><br><span class="line">    text-decoration:none；</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">......（base.css中有一堆）</span><br></pre></td></tr></table></figure></li></ul></li><li><p>在index.html中通过link标签引入index.css</p></li></ul><h2 id="页面ico图标的使用（了解）"><a href="#页面ico图标的使用（了解）" class="headerlink" title="页面ico图标的使用（了解）"></a>页面ico图标的使用（了解）</h2><blockquote><p>较大的网站的title前面会有一个小的图标，这个小图标一般使用的就是ico图标</p></blockquote><p><strong>使用步骤：</strong></p><ul><li><p>获取<code>ico图标</code></p><ul><li>一般是由UI设计师提供.ico图片</li><li>可以通过 <a href="http://www.bitbug.net/" target="_blank" rel="noopener">一些转换网站</a> 将图片上传，获取ico图标</li></ul></li><li><p>使用<code>ico图标</code></p><ul><li><code>&lt;link rel=&quot;icon&quot; href=&quot; favicon.ico的路径&quot;&gt;</code> </li></ul></li></ul><p><strong>一般将ico图标放到根目录下面</strong></p><h2 id="页面seo三大标签（了解）"><a href="#页面seo三大标签（了解）" class="headerlink" title="页面seo三大标签（了解）"></a>页面seo三大标签（了解）</h2><blockquote><p>页面中有三个标签对于seo非常重要！</p></blockquote><h3 id="title：标题标签"><a href="#title：标题标签" class="headerlink" title="title：标题标签"></a>title：标题标签</h3><blockquote><p>表示网页的标题，对于网页的seo权重很高！！</p></blockquote><p><img src="\images\title标签.png" alt=""></p><p><strong>一个大型的网页，也需要有对应的title标签的：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>38期品优购<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Description：描述标签"><a href="#Description：描述标签" class="headerlink" title="Description：描述标签"></a>Description：描述标签</h3><blockquote><p>是对于网页内容的描述，可以是对于标题的补充，一般文字不超过120个字。</p></blockquote><p><img src="\images\description标签.png" alt="description标签"></p><p><strong>一个大型的网页，也需要有对应的description标签的：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">"品优购-专业的综合网上购物商城,销售家电、数码通讯、电脑、家居百货、服装服饰、母婴、图书、食品等数万个品牌优质商品.便捷、诚信的服务，为您提供愉悦的网上购物体验!"</span> /&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Keywords：关键字标签"><a href="#Keywords：关键字标签" class="headerlink" title="Keywords：关键字标签"></a>Keywords：关键字标签</h3><blockquote><p>是页面内容的关键字，对于seo也较为重要。</p></blockquote><p><img src="\images\Keywords标签.png" alt="Keywords标签"></p><p><strong>一个大型的网页，也需要有对应的Keywords标签的：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"Keywords"</span> <span class="attr">content</span>=<span class="string">"网上购物,网上商城,手机,笔记本,电脑,MP3,CD,VCD,DV,相机,数码,配件,手表,存储卡,品优购"</span> /&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;check
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基础班day11笔记</title>
    <link href="http://yoursite.com/2019/02/20/1-%E5%9F%BA%E7%A1%80%E7%8F%ADday11%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/20/1-基础班day11笔记/</id>
    <published>2019-02-20T02:11:00.000Z</published>
    <updated>2019-03-02T05:06:23.298Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><blockquote><ul><li style="list-style: none"><input type="checkbox"> 能够理解什么是精灵图及优点（将很多小图片放到一张图片上，减少对服务器请求次数，减轻服务器压力）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用精灵图设置背景图片</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用字体图标</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够完成滑动门案例</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够写出常用的样式初始化</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够了解BFC的作用以及触发BFC的几种方式</li></ul></blockquote><p><strong>理解上课的知识点……</strong></p><h2 id="双伪元素清除浮动（了解）"><a href="#双伪元素清除浮动（了解）" class="headerlink" title="双伪元素清除浮动（了解）"></a>双伪元素清除浮动（了解）</h2><blockquote><p>伪元素清除浮动升级版（既解决了清除浮动、又解决了塌陷 ）</p><p>两个伪元素清除法的合并方法如下：</p></blockquote><p><strong>清除浮动：</strong></p><blockquote><p>可以使用单伪元素浮动法 <code>::after</code></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>margin的塌陷问题：</strong></p><blockquote><p>可以使用伪元素 <code>::before</code> 解决margin的塌陷问题</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="comment">/* 触发BFC + 并且转换成块级元素 */</span></span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>合并起来：</strong></p><blockquote><p>使用并集选择器合并代码</p><p>此时.clearfix这个类既可以清除浮动，又可以解决margin的塌陷现象</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span>,</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">""</span>;</span><br><span class="line">    <span class="comment">/* BFC + 转化为块级元素 */</span></span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 兼容 IE 67 */</span></span><br><span class="line"><span class="selector-class">.clearfix</span> &#123;</span><br><span class="line">    *zoom: 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="ヾ-๑╹◡╹-ﾉ”检查网页"><a href="#ヾ-๑╹◡╹-ﾉ”检查网页" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”检查网页"></a>ヾ(๑╹◡╹)ﾉ”检查网页</h5><blockquote><p>检查大网页的样式（<strong>小米、淘宝</strong>），一般用双伪元素</p></blockquote><p><strong>只需要把双伪元素清除法的代码在样式初始化的时候写好，使用的时候直接加类名即可</strong></p><h2 id="精灵图（会使用）"><a href="#精灵图（会使用）" class="headerlink" title="精灵图（会使用）"></a>精灵图（会使用）</h2><blockquote><p>实际开发中，会把很多小图片合并成一张大图片，这张大图片就是精灵图。</p></blockquote><p><strong>问题：</strong> 浏览器打开淘宝网，网页中的图片怎么显示到用户的电脑中的呢？</p><p> → 图片并不是用户电脑本地有的，而是通过服务器发送给用户，才在浏览器中显示的！！</p><h5 id="ヾ-๑╹◡╹-ﾉ”画图了解下前端与后端交互"><a href="#ヾ-๑╹◡╹-ﾉ”画图了解下前端与后端交互" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”画图了解下前端与后端交互"></a>ヾ(๑╹◡╹)ﾉ”画图了解下前端与后端交互</h5><p><strong>好处：</strong> </p><p>原本每张小图片要发送很多次，服务器亚历山大</p><p>但是如果使用精灵图，只需要发送一次即可。</p><p><strong>减少服务器的请求次数，减轻服务器的压力。</strong></p><h3 id="精灵图的使用（必会）"><a href="#精灵图的使用（必会）" class="headerlink" title="精灵图的使用（必会）"></a>精灵图的使用（必会）</h3><blockquote><p>如何在页面中显示出精灵图中的小图片呢？</p></blockquote><p><strong>步骤：</strong></p><ol><li>创建一个盒子</li><li>通过PS量取小图片的尺寸，将对应小图片的宽高直接设置给盒子</li><li>将精灵图设置为盒子的背景图片</li><li>将小图片的坐标取负值添加给<code>background-position：x y;</code><ul><li>让背景图片往上移动，y轴坐标是负数</li><li>让背景图片往左移动，x轴坐标是负数</li></ul></li></ol><p><strong>注意：</strong></p><ul><li>盒子和小图片大小一致</li><li>精灵图通过背景定位， 让所有的小图片都能显示</li><li>在ps中，通过切片，量取对应的坐标，直接取赋值（负数）即可</li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”拼出自己的名字"><a href="#ヾ-๑╹◡╹-ﾉ”拼出自己的名字" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”拼出自己的名字"></a>ヾ(๑╹◡╹)ﾉ”拼出自己的名字</h5><h2 id="字体图标（了解）"><a href="#字体图标（了解）" class="headerlink" title="字体图标（了解）"></a>字体图标（了解）</h2><blockquote><p>在网页的很多地方，比如下箭头、照相机图标、搜索图标… 使用的就是字体图标</p><p>字体图标本质上就是文字，所以可以通过css中文字相关的属性操作字体图标。</p></blockquote><p><strong>需求：</strong> </p><p>页面中有很多的图标（左右箭头、购物车、用户、等等），怎么完成页面的效果？？</p><p><strong>方案：</strong></p><ul><li><p>使用图片 → 可以。</p><p><strong>缺点：</strong>图片在放大的时候会失真（边缘模糊）</p></li><li><p>字体图标 → 可以。</p><p><strong>优点：</strong>放大不会失真，还可以设置css样式</p></li></ul><p><strong>总结：</strong></p><p>本质是文字，可以通过css文字相关样式设置字体图标的样式（颜色、大小、加粗），并且不会失真</p><h3 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h3><p><strong>下载字体图标（一般UI会给）：</strong></p><ol><li>登录<a href="http://www.iconfont.cn/" target="_blank" rel="noopener">阿里 iconfont 字库</a>，将自己想要的图标加入购物车</li><li>点击购物车图标，选择<strong>下载代码</strong></li></ol><p><strong>使用字体图标步骤：</strong></p><ol><li><p>在项目目录新建 fonts 文件夹，将字体图标文件内所有文件拷贝进 fonts 文件夹</p></li><li><p>在项目中通过link标签引入字体css文件（<strong>iconfont.css</strong>）</p><blockquote><p>字体文件包中的 <strong>demo_fontclass.html</strong> 为说明书</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"fonts/iconfont.css"</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>通过i标签上面设置对应类名来使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;i class=&quot;iconfont icon-refresh&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure></li></ol><p><strong>注意：</strong></p><ul><li>设置字体图标样式时，注意层叠性问题！！（通过iconfont类名找到i标签）</li><li>不能改变字体图标的font-family，否则样式不生效</li></ul><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><h3 id="滑动门（了解）"><a href="#滑动门（了解）" class="headerlink" title="滑动门（了解）"></a>滑动门（了解）</h3><blockquote><p>利用已学技术，根据文本内容，让背景自适应。可以实现一些特殊的效果（QQ聊天气泡）</p><p><a href="https://weixin.qq.com/" target="_blank" rel="noopener">微信滑动门</a></p></blockquote><p><img src="\images\%E6%BB%91%E5%8A%A8%E9%97%A8.jpg" alt=""></p><p><strong>滑动门步骤：</strong></p><ul><li>三个盒子要在一行中显示，都需要<strong>浮动起来</strong>。<ul><li>left：宽高和背景图片的大小一致</li><li>center：高度为背景图片的高度，宽度由内容撑开（浮动之后的元素宽度默认由内容撑开），<strong>背景平铺</strong></li><li>right：宽高和背景图片的大小一致</li></ul></li></ul><h3 id="浮动元素的覆盖问题（了解）"><a href="#浮动元素的覆盖问题（了解）" class="headerlink" title="浮动元素的覆盖问题（了解）"></a>浮动元素的覆盖问题（了解）</h3><blockquote><p>浮动：不能覆盖文字、图片和行内块，会把这些元素挤到一边去。</p><p>说白了，<strong>浮动元素一般只能覆盖标准流中的块级元素</strong></p></blockquote><h5 id="ヾ-๑╹◡╹-ﾉ”行内元素与浮动的特殊情况"><a href="#ヾ-๑╹◡╹-ﾉ”行内元素与浮动的特殊情况" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”行内元素与浮动的特殊情况"></a>ヾ(๑╹◡╹)ﾉ”行内元素与浮动的特殊情况</h5><ul><li>浮动的元素可以覆盖标准流中的块级元素</li><li>浮动的元素不能覆盖行内块元素</li><li>浮动元素不能覆盖行内元素</li><li>浮动的元素不能覆盖文字（图文环绕）</li></ul><h3 id="触发BFC的方法（了解）"><a href="#触发BFC的方法（了解）" class="headerlink" title="触发BFC的方法（了解）"></a>触发BFC的方法（了解）</h3><blockquote><p>BFC → <code>Block Formatting Context</code>：块级格式化上下文</p></blockquote><p><strong>知道BFC的作用：</strong></p><ul><li>触发父盒子的BFC → 可以<strong>解决margin的塌陷</strong></li><li>触发父盒子的BFC → 可以<strong>清除浮动</strong></li></ul><p><strong>方法：</strong></p><blockquote><p>可以通过测试是否能清除浮动</p></blockquote><p><strong>给父盒子设置：</strong></p><ul><li>float的值不为none</li><li>overflow的值不为visible。</li><li>display的值为table，table-cell，inline-block</li><li>position的值不为relative和static</li><li>等等……</li></ul><h3 id="小米练习"><a href="#小米练习" class="headerlink" title="小米练习"></a>小米练习</h3><blockquote><p>每个项目都是一个单独的文件夹，文件夹中放项目相关的资源（图片、inde.html、index.css等等）</p></blockquote><p><strong>步骤：</strong></p><ul><li>新建项目文件夹</li><li>新建images文件夹，把图片放在images文件夹中</li><li>新建页面index.html</li><li>新建css文件index.css</li><li>index.css中进行样式的初始化（可以把初始化CSS文件引入）</li><li>在index.html中通过link标签引入index.css</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;check
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基础班day10笔记</title>
    <link href="http://yoursite.com/2019/02/20/1-%E5%9F%BA%E7%A1%80%E7%8F%ADday10%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/20/1-基础班day10笔记/</id>
    <published>2019-02-20T02:10:00.000Z</published>
    <updated>2019-03-02T05:00:57.511Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><blockquote><ul><li style="list-style: none"><input type="checkbox"> 理解定位的使用场景（一般用于解决盒子之间的层叠问题）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出相对定位的特点<ul><li>相对于自己原来的位置进行移动</li><li>占位置-》没有脱标</li></ul></li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出绝对定位的特点<ul><li>默认相对于浏览器移动，如果有父元素，相对于有定位的父元素移动</li><li>不占位置-》脱标</li></ul></li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出固定定位的特点<ul><li>永远相对于浏览器移动</li><li>不占位置-》脱标</li></ul></li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够理解子绝父相（子盒子绝对定位，父盒子相对定位，布局中会经常使用到）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够实现z-index控制元素的层级（数值越大，层级越高）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出vertical-align属性的使用（一般用于设置文本与行内块元素（图片）的垂直对齐方式）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出三种隐藏元素的区别（<strong>内容</strong>超出隐藏、元素隐藏（<strong>看不见</strong>）、元素隐藏（<strong>不存在</strong>））</li></ul><p> 。。。。。。</p></blockquote><p><strong>理解上课的知识点……</strong></p><h2 id="定位"><a href="#定位" class="headerlink" title="定位"></a>定位</h2><blockquote><p>可以解决盒子与盒子之间的层叠问题</p></blockquote><p><strong>需求：</strong>现在在页面上有两个盒子，其中第二个盒子将第一个盒子压住了一半，怎么完成？？？</p><p><img src="\images\1.png" alt="1"></p><p><strong>解决方案：</strong></p><ul><li><p><strong>使用margin的单方向应用</strong></p><blockquote><p>但是实际开发中并不会使用marign完成层叠的效果</p></blockquote></li><li><p>使用 <strong>定位</strong> 来完成效果</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blue</span> &#123;</span><br><span class="line">  <span class="comment">/*定位：position*/</span></span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="comment">/*定位需要配合方位属性一起使用的！！*/</span></span><br><span class="line">  <span class="attribute">top</span>: <span class="number">150px</span>;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">150px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="定位初体验"><a href="#定位初体验" class="headerlink" title="定位初体验"></a>定位初体验</h3><p><code>position：absolute；</code> 设置定位</p><p><strong>方位属性：</strong></p><blockquote><p>水平和垂直方向各选一个使用即可，选取的原则是<strong>就近原则</strong> （离哪边近用哪个）</p></blockquote><ul><li>水平方向：<ul><li>left：相对于左边框的距离</li><li>right：相对于右边框的距离</li></ul></li><li>垂直方向：<ul><li>top：相对于上边框的距离</li><li>bottom：相对于下边框的距离</li></ul></li></ul><h3 id="静态定位（static）"><a href="#静态定位（static）" class="headerlink" title="静态定位（static）"></a>静态定位（static）</h3><blockquote><p>标准流中的元素默认都是静态定位</p></blockquote><p><strong>代码：</strong> <code>position: static;</code> （默认值）静态定位</p><blockquote><p>静态定位是有一定争议的（有些人认为静态定位不算定位）</p></blockquote><p><strong>面试时候回答：</strong>三种定位方式，优先回答其他三个（相对、绝对、固定），如果四种再写静态定位</p><p><strong>注意点： </strong>静态定位不能通过方位属性进行移动</p><h3 id="相对定位（relative）"><a href="#相对定位（relative）" class="headerlink" title="相对定位（relative）"></a>相对定位（relative）</h3><blockquote><p>盒子相对于自己之前的位置定位移动（红绿蓝）</p></blockquote><p><strong>代码：</strong><code>position: relative；</code> 相对定位</p><p><strong>特点：</strong></p><ul><li><p>要配合方位属性使用，不然无法移动</p></li><li><p>相对于自己原来的位置进行偏移</p></li><li><p>设置了相对定位的元素在页面上占据了位置-》<strong>没有脱标</strong></p></li></ul><p><strong>应用场景：</strong></p><ul><li>配合绝对定位组CP（子绝父相），用的最多</li><li>用于小范围的移动（比如让某个标签稍微往下移动几个像素）</li></ul><h3 id="绝对定位（absolute）"><a href="#绝对定位（absolute）" class="headerlink" title="绝对定位（absolute）"></a>绝对定位（absolute）</h3><blockquote><p>绝对定位相对于非静态定位的父元素进行定位移动</p></blockquote><p><strong>代码：</strong><code>position: absolute;</code> 绝对定位</p><p><strong>特点：</strong></p><ul><li>需要配合方位属性移动使用</li></ul><hr><ul><li><p>绝对定位相对谁移动？</p><blockquote><p>默认相对于浏览器进行移动，但是如果有父元素，则相对于有定位的父元素进行移动</p></blockquote><ul><li>没有父元素 → 默认相对于浏览器进行移动</li><li>有父元素（判断父元素有没有定位）<ul><li>没有定位  →  默认相对于浏览器进行移动</li><li>有定位  →  相对于有定位的父元素进行移动</li></ul></li></ul></li><li><p>绝对定位的元素在页面中 <strong>不占位置</strong> → 脱标</p></li></ul><p><strong>应用场景：</strong></p><ul><li>子绝父相</li></ul><h3 id="子绝父相"><a href="#子绝父相" class="headerlink" title="子绝父相"></a>子绝父相</h3><blockquote><p>让子元素相对于父元素进行移动 → 使用子绝父相，即子元素绝对定位，父元素相对定位</p></blockquote><p>子绝父相在定位中使用的最常见，并且子绝父相不会影响页面的布局</p><blockquote></blockquote><h5 id="ヾ-๑╹◡╹-ﾉ”比较子绝父相的好处"><a href="#ヾ-๑╹◡╹-ﾉ”比较子绝父相的好处" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”比较子绝父相的好处"></a>ヾ(๑╹◡╹)ﾉ”比较子绝父相的好处</h5><blockquote><p>不会影响之后的布局</p></blockquote><p><strong>特殊情况：</strong> 当使用子绝父相的时候，父元素已经有绝对定位了，此时忽略父元素，直接使用子绝即可</p><blockquote><p>子绝父绝的特殊情况</p></blockquote><hr><h5 id="ヾ-๑╹◡╹-ﾉ”子绝父相定位居中案例"><a href="#ヾ-๑╹◡╹-ﾉ”子绝父相定位居中案例" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”子绝父相定位居中案例"></a>ヾ(๑╹◡╹)ﾉ”子绝父相定位居中案例</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">父盒子：600*400  子盒子：200*100</span><br></pre></td></tr></table></figure><p><strong>需求1：</strong> 通过定位让子盒子在父盒子水平居中</p><p><strong>思路：</strong></p><ol><li><p>先让子盒子往右移动父盒子的一半</p><blockquote><p>子绝父相，<code>left：50%;</code></p></blockquote></li><li><p>再让子盒子往左移动自己的一半</p><ul><li><p>普通做法：<code>margin-left:负子盒子宽度的一半</code> → 属性值是<strong>负数</strong></p><blockquote><p>缺点：子盒子宽度变化之后，需要重新改代码</p></blockquote></li><li><p>优化做法：CSS3的新属性：<code>transform：translateX（-50%）</code></p><blockquote><p><code>transform：translateX（-50%）</code> → 表示沿着x轴的负方向移动自己的一半</p></blockquote></li></ul></li></ol><p><strong>需求2：</strong> 通过的定位让子盒子在父盒子中水平垂直都居中</p><p>同理嘛~</p><blockquote><p>但是需要注意，transform属性也会层叠。</p></blockquote><h5 id="ヾ-๑╹◡╹-ﾉ”课堂练习：网站头部hot图标"><a href="#ヾ-๑╹◡╹-ﾉ”课堂练习：网站头部hot图标" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”课堂练习：网站头部hot图标"></a>ヾ(๑╹◡╹)ﾉ”课堂练习：网站头部hot图标</h5><p><img src="\images\hot.png" alt="hot"></p><h5 id="ヾ-๑╹◡╹-ﾉ”课堂练习：小米商品页半透明效果"><a href="#ヾ-๑╹◡╹-ﾉ”课堂练习：小米商品页半透明效果" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”课堂练习：小米商品页半透明效果"></a>ヾ(๑╹◡╹)ﾉ”课堂练习：小米商品页半透明效果</h5><p><img src="\images\toumin.png" alt="toumin"></p><h3 id="固定定位-（fixed）"><a href="#固定定位-（fixed）" class="headerlink" title="固定定位 （fixed）"></a>固定定位 （fixed）</h3><blockquote><p>盒子相对于浏览器进行定位移动</p></blockquote><p><strong>代码：</strong><code>position: fixed;</code>  固定定位</p><p><strong>特点：</strong></p><ul><li><p>配合方位属性一起使用</p></li><li><p>永远相进行移动</p></li><li>固定定位的元素也不在页面中占据位置 → <strong>脱标</strong></li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”课堂练习：新浪网页"><a href="#ヾ-๑╹◡╹-ﾉ”课堂练习：新浪网页" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”课堂练习：新浪网页"></a>ヾ(๑╹◡╹)ﾉ”课堂练习：新浪网页</h5><blockquote><p>注意的是：脱标后的元素宽度默认由内容撑开</p><p>就算是div，脱标之后宽度也不再默认是父元素宽度</p></blockquote><h3 id="四种定位总结"><a href="#四种定位总结" class="headerlink" title="四种定位总结"></a>四种定位总结</h3><table><thead><tr><th style="text-align:center">定位方式</th><th style="text-align:center">属性值</th><th style="text-align:center">相对于谁移动</th><th style="text-align:center">占不占位置</th></tr></thead><tbody><tr><td style="text-align:center">静态定位</td><td style="text-align:center">static</td><td style="text-align:center">不能通过方位属性移动</td><td style="text-align:center">占位置</td></tr><tr><td style="text-align:center">相对定位</td><td style="text-align:center">relative</td><td style="text-align:center">相对于自己原来的位置</td><td style="text-align:center">占位置</td></tr><tr><td style="text-align:center">绝对地位</td><td style="text-align:center">absolute</td><td style="text-align:center">默认浏览器/相对于有定位的父元素移动</td><td style="text-align:center">不占位置（脱标）</td></tr><tr><td style="text-align:center">固定定位</td><td style="text-align:center">fixed</td><td style="text-align:center">永远相对于浏览器</td><td style="text-align:center">不占位置（脱标）</td></tr></tbody></table><h2 id="元素的层级关系"><a href="#元素的层级关系" class="headerlink" title="元素的层级关系"></a>元素的层级关系</h2><blockquote><p>开发者有时候需要设置元素的层级关系，层叠是谁在上面</p></blockquote><h3 id="标准流、浮动、定位的层级关系"><a href="#标准流、浮动、定位的层级关系" class="headerlink" title="标准流、浮动、定位的层级关系"></a>标准流、浮动、定位的层级关系</h3><blockquote><p>两个盒子之间的比较</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">三种层叠关系：</span><br><span class="line">标准流 &lt; 浮动 &lt; 定位（相对、绝对、固定）</span><br></pre></td></tr></table></figure><h3 id="定位的层级关系"><a href="#定位的层级关系" class="headerlink" title="定位的层级关系"></a>定位的层级关系</h3><p><strong>总结：</strong></p><ul><li><p>三者的层叠关系<strong>相同</strong>，HTML中写在下面元素的覆盖上面的</p></li><li><p>可以通过 <code>z-index</code> 属性手动设置定位元素的层级关系</p><p><strong>取值：</strong>没有单位的数字</p><p><strong>效果：</strong>数值越大，层级越高</p></li></ul><h2 id="垂直对齐方式（vertical-align）"><a href="#垂直对齐方式（vertical-align）" class="headerlink" title="垂直对齐方式（vertical-align）"></a>垂直对齐方式（vertical-align）</h2><blockquote><p>在开发中可能会遇到行内块元素垂直对齐的问题，此时可以使用 <code>vertical-align</code> 属性让图片</p></blockquote><p><strong>问题：</strong>  当图片和文字在一行中显示时，其实底部是不对齐的！</p><blockquote><p>图片和文字底部对齐怎么做？</p></blockquote><p><img src="\images\q1.png" alt="q1"></p><p><strong>解决方法：</strong></p><p>此时可以给图片设置 <code>vertical-align:bottom;</code> 即可</p><blockquote><p><code>vertical-align</code> 就是用来设置行内/行内块元素垂直对齐的问题的</p></blockquote><hr><p><strong>取值：</strong></p><ul><li>baseline：基线对齐</li><li>top：顶部对齐</li><li>middle：中线对齐</li><li>bottom：底部对齐</li></ul><p><strong>项目中可以使用 <code>vertical-align</code> 解决的bug：</strong></p><ul><li>场景1 :  文本框（text）和表单按钮（button）无法对齐问题；</li><li>场景2 :  input 和 img无法对齐的问题；</li><li>场景3 : div里放一个文本框 ，此时文本框无法靠顶；</li><li>场景4：div有img标签撑开，此时img标签下方有间隙（给img标签设置vertical-align即可）；</li><li>场景5 : 使用line-height让img标签垂直居中，需要给img标签单独设置vertical-align：middle</li></ul><p><strong>注意点：</strong></p><p>在学习完浮动之后，就不推荐优先使用行内块元素让div一行中显示，因为会出现垂直对齐的问题，以后<strong>优先使用浮动完成效果</strong></p><h2 id="溢出内容效果（overflow）"><a href="#溢出内容效果（overflow）" class="headerlink" title="溢出内容效果（overflow）"></a>溢出内容效果（overflow）</h2><blockquote><p>设置盒子内容超出部分的显示效果</p></blockquote><p><strong>取值：</strong></p><ul><li>visible：超出部分可见（默认值）</li><li>hidden：超出部分隐藏</li><li>scroll：显示滚动条</li><li>auto：根据内容的多少，自动显示或者隐藏滚动条</li></ul><h2 id="CSS三种隐藏方式"><a href="#CSS三种隐藏方式" class="headerlink" title="CSS三种隐藏方式"></a>CSS三种隐藏方式</h2><blockquote><p>CSS中有三种与隐藏相关的属性，需要知道他们之间的区别</p></blockquote><h3 id="内容超出隐藏-overflow-hidden；"><a href="#内容超出隐藏-overflow-hidden；" class="headerlink" title="内容超出隐藏 overflow:hidden；"></a>内容超出隐藏 <code>overflow:hidden；</code></h3><blockquote><p>盒子内容超出部分隐藏</p></blockquote><p><strong>注意：</strong> 隐藏的元素的超出内容，元素本身可见</p><h3 id="元素隐藏-visibility：hidden；"><a href="#元素隐藏-visibility：hidden；" class="headerlink" title="元素隐藏 visibility：hidden；"></a>元素隐藏 <code>visibility：hidden；</code></h3><blockquote><p>让元素隐藏，但在页面中仍然<strong>占位置</strong> → 相当于穿上了隐形斗篷</p></blockquote><p><strong>注意：</strong>让元素隐藏，并且占位置</p><h3 id="元素隐藏-display：none；"><a href="#元素隐藏-display：none；" class="headerlink" title="元素隐藏 display：none；"></a>元素隐藏 <code>display：none；</code></h3><blockquote><p>让元素隐藏，并且在页面中<strong>不占位置</strong> → 相当于把元素删除了</p></blockquote><p><strong>注意：</strong>让元素隐藏，并且不占位置</p><h2 id="CSS三种隐藏方式总结"><a href="#CSS三种隐藏方式总结" class="headerlink" title="CSS三种隐藏方式总结"></a>CSS三种隐藏方式总结</h2><table><thead><tr><th style="text-align:center">属性</th><th style="text-align:center">作用</th><th style="text-align:center">特点</th></tr></thead><tbody><tr><td style="text-align:center"><code>overflow：hidden;</code></td><td style="text-align:center">超出<strong>内容隐藏</strong></td><td style="text-align:center">超出盒子部分的<strong>内容隐藏</strong></td></tr><tr><td style="text-align:center"><code>visibility：hidden;</code></td><td style="text-align:center">元素<strong>本身隐藏</strong></td><td style="text-align:center">在页面中<strong>占位置</strong></td></tr><tr><td style="text-align:center"><code>display：none;</code></td><td style="text-align:center">元素<strong>本身隐藏</strong></td><td style="text-align:center">在页面中<strong>不占位置</strong></td></tr></tbody></table><h2 id="html-标签的嵌套规范（了解）"><a href="#html-标签的嵌套规范（了解）" class="headerlink" title="html 标签的嵌套规范（了解）"></a>html 标签的嵌套规范（了解）</h2><blockquote><p>块级元素一般用于布局：比如div在页面的布局用的最多；</p><p>行内元素一般用于放文字：比如span、a标签里面一般放文字</p><p>标签之间是不能随意嵌套的，书写的时候应该有对应的规范：</p></blockquote><p><strong>注意点：</strong></p><ul><li>行内元素一般放文字或者行内元素，但是<strong>a标签之间不能互相嵌套</strong>（会被浏览器解析成两个a标签）；</li><li><p>块级元素相当于一个容器，里面可以放文字、行内元素、块级元素，但是<strong>p标签不能嵌套块级元素</strong>（p标签会被拆分成两个p标签）</p><blockquote><p>p标签作为一个段落标签，只有文字才会组成段落，所以p标签里面一般只放文字，不要放块级元素！！！</p></blockquote></li></ul><h2 id="拓展（了解）"><a href="#拓展（了解）" class="headerlink" title="拓展（了解）"></a>拓展（了解）</h2><h3 id="字符间距（letter-spacing）"><a href="#字符间距（letter-spacing）" class="headerlink" title="字符间距（letter-spacing）"></a>字符间距（letter-spacing）</h3><blockquote><p>默认情况下，页面中的文字都是紧挨着的，但是有少数情况下，我们也可以让文字之间的距离变大一点</p><p>文字有英文和中文</p></blockquote><p><strong>效果演示：</strong> </p><p><img src="\images\letterspancing.png" alt="letterspancing"></p><p><strong>作用：</strong>设置文本中<strong>字符（中文汉字/英文字母）</strong>之间的距离</p><p><strong>代码：</strong> <code>letter-spacing: 20px;</code></p><p><strong>取值：</strong> 可以是不同单位的数值，允许使用负值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    div p &#123;</span></span><br><span class="line"><span class="undefined">      letter-spacing: 20px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world! 来啦老弟！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- letter spacing：设置的是字符间距，英文即字母之间的间距，中文即文字之间的间距 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="单词间距（word-spacing）"><a href="#单词间距（word-spacing）" class="headerlink" title="单词间距（word-spacing）"></a>单词间距（word-spacing）</h3><blockquote><p>对于英文来说，有的时候还需要设置单词之间的距离，这个怎么操作呢？</p></blockquote><p>其实，英文单词之间的距离，指的得就是空格的宽度</p><p><strong>效果：</strong></p><p><img src="\images\wordspacing.png" alt="wordspacing"></p><p><strong>代码：</strong> <code>word-spacing: 20px;</code></p><p><strong>取值：</strong> 可以是不同单位的数值，允许使用负值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    div p&#123;</span></span><br><span class="line"><span class="undefined">      word-spacing: 20px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>hello world! 来啦 老弟！<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- word spacing：设置的是单词间距，一般只会用在英文中，对于中文来说，可以看做是段落中空格的间距 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;check
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基础班day09笔记</title>
    <link href="http://yoursite.com/2019/02/20/1-%E5%9F%BA%E7%A1%80%E7%8F%ADday09%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/20/1-基础班day09笔记/</id>
    <published>2019-02-20T02:09:00.000Z</published>
    <updated>2019-03-02T04:51:31.301Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><blockquote><ul><li style="list-style: none"><input type="checkbox"> 能够完成尚合项目的头部部分</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够完成尚合的导航部分</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够完成尚合的产品详情部分</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够完成尚合的底部部分</li></ul><p>。。。。。。</p></blockquote><p><strong>理解上课的知识点……</strong></p><h2 id="版心"><a href="#版心" class="headerlink" title="版心"></a>版心</h2><blockquote><p>宽度固定且水平居中的盒子</p></blockquote><p><strong>为什么要有版心?</strong></p><blockquote><p>因为每台电脑的屏幕不一样大，为了让不同屏幕大小的电脑都能看到页面的主体内容，我们需要把网页的内容约束在版心里。</p></blockquote><p><strong>屏幕大能看到主体内容：</strong></p><p><img src="\images\big.png" alt="big"></p><p><strong>屏幕小也能看到主体内容：</strong></p><p><img src="\images\small.png" alt="small"></p><blockquote><p>因为主要内容都放在版心中，所以能让更多大小的屏幕完整的看到页面的主体内容。</p></blockquote><p><strong>版心代码：</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*通常版心命名为w*/</span></span><br><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">1200px</span>；</span><br><span class="line">    margin：<span class="number">0</span> auto；</span><br><span class="line">&#125;</span><br><span class="line">/----------------------------------------------------/</span><br><span class="line"><span class="comment">/*给主体内容的盒子设置版心，直接加上w这个类即可*/</span></span><br><span class="line">&lt;div class="w"&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="常见的布局方式（了解）"><a href="#常见的布局方式（了解）" class="headerlink" title="常见的布局方式（了解）"></a>常见的布局方式（了解）</h2><blockquote><p>注意点：实际项目中，写每个盒子的时候都要判断有没有版心，版心很重要！！</p></blockquote><p><strong>常见的三种布局方式：</strong></p><blockquote><p>了解即可，在之后的项目中会写到对应的布局</p></blockquote><h3 id="一列固定宽度且居中"><a href="#一列固定宽度且居中" class="headerlink" title="一列固定宽度且居中"></a>一列固定宽度且居中</h3><blockquote><p>常见的布局结构，一般每个盒子都设置了版心</p></blockquote><p><img src="\images\yl.jpg" alt="yl"></p><h3 id="两列左窄右宽型"><a href="#两列左窄右宽型" class="headerlink" title="两列左窄右宽型"></a>两列左窄右宽型</h3><blockquote><p>常见的就是banner部分左侧导航，右侧轮播图的效果</p><p>如：<a href="http://www.mi.com" target="_blank"> 小米官网 </a></p></blockquote><p><img src="\images\ll.jpg" alt="ll"></p><h3 id="通栏平均分布型"><a href="#通栏平均分布型" class="headerlink" title="通栏平均分布型"></a>通栏平均分布型</h3><blockquote><p>占满浏览器的一行叫做<strong>通栏</strong>，对于通栏的div，可以不用设置宽度，默认就是独占一行的</p><p> <a href="http://www.smartisan.com/" target="_blank"> 锤子官网 </a></p></blockquote><p><img src="\images\tl.jpg" alt="tl"></p><p><strong>一般布局方式会综合运用：</strong></p><p><img src="\images\常见的布局情况.png" alt="常见的布局情况"></p><h2 id="上课的记录"><a href="#上课的记录" class="headerlink" title="上课的记录"></a>上课的记录</h2><blockquote><p>上课敲的项目首要任务是听懂</p><p>学习的是写页面的步骤，每个知识点都会，不会的是接下来做什么</p><p>如果有记笔记习惯的同学，可以把老师的步骤记下来，然后忘记怎么做的时候根据自己写的步骤看看能不能一步一步做出来</p></blockquote><p><strong>比如：</strong></p><ol><li>页面的顶部区域<ol><li>大盒子需要一个版心</li><li>里面两张图片，分别左右浮动</li><li>图片离上面有距离，给大盒子设置 <code>padding-top</code></li><li>……</li></ol></li></ol><h2 id="尚合项目"><a href="#尚合项目" class="headerlink" title="尚合项目"></a>尚合项目</h2><h3 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h3><blockquote><p>整个项目应该就是一个文件夹，文件夹中放项目中的所有资源（图片、html、css）</p></blockquote><p><strong>步骤：</strong></p><ol><li>新建一个文件夹，作为<strong>项目文件夹</strong> → 一个项目就应该有一个文件夹</li><li>在项目文件夹中新建<strong>images文件夹</strong> → 存放项目相关图片</li><li>在项目文件夹中新建 <strong><code>index.html</code>文件</strong> → 页面文件</li><li>在项目文件夹中新建 <strong><code>index.css</code>文件</strong> → 样式文件</li></ol><h3 id="样式初始化"><a href="#样式初始化" class="headerlink" title="样式初始化"></a>样式初始化</h3><blockquote><p>开始的时候先把项目中<strong>常见的css样式先写好</strong>→样式的初始化</p></blockquote><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*-----------------------------项目样式的初始化--------------------------------------------*/</span></span><br><span class="line"><span class="comment">/*清除默认的marign和padding*/</span></span><br><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*消除页面中li的小点*/</span></span><br><span class="line"><span class="selector-tag">ul</span> &#123;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*消除a标签默认的下划线*/</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*左浮动的类*/</span></span><br><span class="line"><span class="selector-class">.fl</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*右浮动的类*/</span></span><br><span class="line"><span class="selector-class">.fr</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*清除浮动的代码*/</span></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">clear</span>: both;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*版心的样式*/</span></span><br><span class="line"><span class="comment">/*版心就是宽度固定水平居中的盒子*/</span></span><br><span class="line"><span class="selector-class">.w</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">980px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*为了在上面看到下面的标签 最后删掉*/</span></span><br><span class="line"><span class="comment">/*body &#123;</span></span><br><span class="line"><span class="comment">  height: 2000px;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br></pre></td></tr></table></figure><h3 id="写代码-´-ω-･-▄︻┻┳══━一"><a href="#写代码-´-ω-･-▄︻┻┳══━一" class="headerlink" title="写代码(　 ´-ω ･)▄︻┻┳══━一"></a>写代码(　 ´-ω ･)▄︻┻┳══━一</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;check
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基础班day08笔记</title>
    <link href="http://yoursite.com/2019/02/20/1-%E5%9F%BA%E7%A1%80%E7%8F%ADday08%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/20/1-基础班day08笔记/</id>
    <published>2019-02-20T02:08:00.000Z</published>
    <updated>2019-03-02T04:48:44.598Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><blockquote><ul><li style="list-style: none"><input type="checkbox"> 了解margin合并与塌陷现象（相邻块元素垂直外边距的合并，嵌套块元素垂直外边距的塌陷）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出解决margin塌陷的几种方式<ul><li>给父盒子加一个边框</li><li>给父盒子加 padding-top </li><li>给父盒子设置属性 overflow: hidden =&gt; BFC;</li><li>给父盒子设置浮动</li><li>给父盒子设置为行内块</li></ul></li></ul><ul><li style="list-style: none"><input type="checkbox"> 理解浮动的作用及特点（解决上下盒子 可以水平布局的问题，脱标）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出几种清除浮动的方式（额外标签法、overflow、伪元素清除浮动）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用浮动完成导航案例</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说清除浮动的目的（消除浮动对之后元素的影响）</li></ul></blockquote><p><strong>理解上课的知识点</strong></p><h2 id="margin的特殊现象"><a href="#margin的特殊现象" class="headerlink" title="margin的特殊现象"></a>margin的特殊现象</h2><h3 id="marign的合并现象"><a href="#marign的合并现象" class="headerlink" title="marign的合并现象"></a>marign的合并现象</h3><blockquote><p>正常情况下：比如当两个盒子<strong>水平</strong>布局时，左右的margin会叠加；</p><p>但是当两个盒子<strong>垂直</strong>布局时，会出现合并现象（两者之间的距离取最大值）</p></blockquote><p><strong>正常现象：</strong></p><p>比如：当两个盒子水平布局时，左右的margin会叠加，盒子之间的距离为margin的和。</p><p><strong>合并现象：</strong></p><p>当两个盒子垂直布局时，上下的margin会合并，盒子之间的距离为margin的最大值</p><p><img src="\images\www.png" alt="相邻元素合并"></p><p><strong>合并现象解决方案：</strong>   避免就好了</p><blockquote><p>上下盒子的margin距离，只给其中一个设置即可</p></blockquote><h3 id="margin的塌陷现象（重要）"><a href="#margin的塌陷现象（重要）" class="headerlink" title="margin的塌陷现象（重要）"></a>margin的塌陷现象（重要）</h3><blockquote><p>互相<strong>嵌套</strong>的<strong>块级元素</strong>，垂直外边距会<strong>塌陷</strong></p></blockquote><p><strong>塌陷现象：</strong></p><p>互相嵌套的块级元素，如果给子元素设置margin-top，此时父元素会一起往下移动！！！</p><p><img src="\images\n.png" alt="垂直元素合并"></p><p><strong>塌陷现象解决方案：</strong></p><ul><li><p>给父盒子加一个边框</p><blockquote><p>相当于给老父亲添加一块钢板</p></blockquote></li><li><p>给父盒子加 padding-top </p><blockquote><p>相当于给老父亲添加一层泡沫</p></blockquote></li><li><p>给父盒子设置属性 <code>overflow: hidden</code> （该属性触发了父盒子的BFC：块级格式化上下文）</p><blockquote><p>触发父盒子的BFC可以解决塌陷问题</p></blockquote></li><li><p>给父盒子设置浮动</p></li><li><p>给父盒子设置为行内块</p></li></ul><h2 id="伪元素"><a href="#伪元素" class="headerlink" title="伪元素"></a>伪元素</h2><blockquote><p>顾名思义：假的元素</p></blockquote><p><strong>对比：</strong></p><ul><li><p>元素：指的是页面中<strong>HTML标签</strong></p></li><li><p>伪元素：假的HTML标签</p><blockquote><p>伪元素是由<strong>CSS代码模拟的一个HTML标签</strong> 不是真的HTML标签</p></blockquote></li></ul><p>学习伪元素的时候，可以就当做学习两个新标签来看。</p><p><strong>种类：</strong></p><blockquote><p>常见的有2种</p></blockquote><ul><li><code>::after(在...之后)</code> ：在标签里面的最后，添加一个伪元素</li><li><code>::before(在...之前)</code> ：在标签里面的最前，添加一个伪元素</li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”div里面放一个span标签，然后用伪元素模拟效果"><a href="#ヾ-๑╹◡╹-ﾉ”div里面放一个span标签，然后用伪元素模拟效果" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”div里面放一个span标签，然后用伪元素模拟效果"></a>ヾ(๑╹◡╹)ﾉ”div里面放一个span标签，然后用伪元素模拟效果</h5><p><img src="\images\after-1550639638458.png" alt="after"></p><p><strong>注意点：</strong></p><ul><li><p>使用伪元素有一个必加属性 <code>content:&#39;&#39;;</code></p><blockquote><p>content属性值里写标签里面的问题</p></blockquote></li><li><p>伪元素默认是行内元素</p></li></ul><h2 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h2><h3 id="浮动初体验"><a href="#浮动初体验" class="headerlink" title="浮动初体验"></a>浮动初体验</h3><blockquote><p>解决盒子水平布局的问题</p></blockquote><p><strong>需求：</strong>在页面上有两个div，在一行中显示，一个靠左，一个靠右</p><p><img src="\images\fu1.png" alt="fu1"></p><p><strong>解决方法：</strong></p><ul><li><p>先转换成行内块元素，再使用marign移动div的位置</p><blockquote><p>但是缺点是：当改变浏览器大小的时候，效果就崩了。</p></blockquote></li><li><p>其实有一个css属性就是为了完成这个效果的→<strong>浮动</strong></p></li></ul><p><strong>浮动的代码：</strong></p><ul><li><code>float:left;</code> →左浮动</li><li><code>float:right;</code> →右浮动</li></ul><blockquote><p>此时我们就可以使用浮动完成需求了</p></blockquote><h3 id="浮动的特点（了解）"><a href="#浮动的特点（了解）" class="headerlink" title="浮动的特点（了解）"></a>浮动的特点（了解）</h3><blockquote><p>重点在于浮动的使用</p></blockquote><p><strong>标准流：</strong>就是浏览器默认摆放盒子的顺序（从上往下、从左往右）</p><p><strong>浮动的特点：</strong></p><ul><li><p><strong>浮动的元素会脱离标准流（脱标）</strong></p><blockquote><p>可以把标准想象成地面</p></blockquote><ul><li><p>相当于飘起来了</p><blockquote><p>相当于飘到了空中</p></blockquote></li><li><p>在标准流中不占位置</p><blockquote><p>在地面中不占位置→地面中之后的元素会往上跑</p></blockquote></li></ul><p><img src="\images\hehe1.png" alt="hehe1"></p></li><li><p><strong>浮动的元素会覆盖在标准流的元素之上</strong></p><ul><li><p>比标准流高出半个级别</p><blockquote><p>之后学习的定位比标准流高出一个级别</p></blockquote><p><img src="\images\fu3.png" alt="fu3"></p></li></ul></li><li><p>浮动的规则：<strong>浮动找浮动</strong> </p><blockquote><p>浮动元素排列的时候，会找上一个浮动元素的后面</p></blockquote><p> <img src="\images\fufu1.png" alt="fufu1"></p></li><li><p>浮动的重点：<strong>浮动的元素只会影响下面的元素</strong>  </p><blockquote><p>浮动的元素受到上一个盒子边界的限制（块级元素独占一行）</p></blockquote><p> <img src="\images\hehe2 (1" alt="">.png)</p></li><li><p><strong>浮动的元素有特殊的显示效果</strong></p><ul><li>可以设置宽高</li><li><p>一行可以显示多个</p><blockquote><p>注意：浮动元素不能使用text-align或者margin：0 auto居中！</p></blockquote></li></ul></li></ul><p><strong>记忆 :</strong> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> 浮动元素会脱标 ==&gt; 飘起来了（不占位置） ==&gt; 比标准流高半个级别</span><br><span class="line"><span class="number">2.</span> 浮动元素会受到上一个盒子边界的影响</span><br><span class="line"><span class="number">3.</span> 浮动元素可以设置宽高，一行可以显示多个</span><br></pre></td></tr></table></figure><h3 id="浮动的案例"><a href="#浮动的案例" class="headerlink" title="浮动的案例"></a>浮动的案例</h3><h4 id="浮动完成页面的布局"><a href="#浮动完成页面的布局" class="headerlink" title="浮动完成页面的布局"></a>浮动完成页面的布局</h4><p><img src="\images\布局.png" alt="布局"></p><h4 id="SEO导航"><a href="#SEO导航" class="headerlink" title="SEO导航"></a>SEO导航</h4><blockquote><p>之前直接使用 a 标签 <code>display：inline-block</code>制作导航是有问题的</p></blockquote><p><strong>问题：</strong></p><ul><li>导航与导航之间应该是列表关系，按照标签语义化的要求，必须要用到 ul 标签</li><li>a 标签不用其他的标签包裹起来，搜索引擎在查看页面时，认为该页面在作弊，会把排名靠后</li></ul><blockquote><p>所以导航必须要用 ul 和 li 将 a 标签包裹起来 </p></blockquote><p><img src="\images\seo导航.png" alt="seo导航"></p><p><strong>书写导航的步骤：</strong></p><ol><li><p>清除默认的margin和padding→<code>初始化样式</code></p></li><li><p>找到ul，去除小圆点→ <code>list-style:none;</code> </p></li><li><p>给li标签设置 <code>float：left</code>  让li标签在一行中显示</p></li><li><p>给a标签设置宽高</p><blockquote><p>点击导航的四角应该也能跳转的，所以a标签应该有宽高</p><p>问题来了：a标签是行内元素，默认不能设置宽高的，怎么办呢？</p></blockquote><p><strong>方法：</strong></p><blockquote><p>三种方法都可以</p></blockquote><ul><li><p>给a标签设置 <code>display: inline-block;</code></p></li><li><p>给a标签设置 <code>display: block;</code></p><blockquote><p>li标签是由a标签撑开的，所以a标签在自己的父元素li中就是独占一行的</p></blockquote></li><li><p>给a标签设置 <code>float：left;</code></p><blockquote><p>因为浮动元素也是可以设置宽高的</p></blockquote></li></ul></li></ol><h2 id="清除浮动（清除浮动的影响）"><a href="#清除浮动（清除浮动的影响）" class="headerlink" title="清除浮动（清除浮动的影响）"></a>清除浮动（清除浮动的影响）</h2><blockquote><p>浮动带来的问题：浮动元素撑不开父级容器</p></blockquote><h3 id="seo导航的问题"><a href="#seo导航的问题" class="headerlink" title="seo导航的问题"></a>seo导航的问题</h3><p><strong>回顾之前写的SEO导航，存在一定的问题：</strong></p><blockquote><p> 如果此时想在SEO导航下面写上一个红色的div，会发现</p></blockquote><p><img src="\images\seoq.png" alt="seoq"></p><p><strong>原因：</strong></p><p>审查元素之后你会发现：因为li标签都是浮动了，在标准流中不占位置，所以不能把ul撑开，此时ul的高度为0。</p><blockquote><p>这就是浮动带来的问题：ul没高度，影响了之后盒子的布局</p></blockquote><p><strong>那么如果解决浮动的问题呢？</strong></p><blockquote><p>我们可以通过清除浮动的方法来让ul有高度</p></blockquote><h3 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h3><blockquote><p>清除浮动其实就是：清除浮动带来的影响（问题）</p><p>如：ul没有高度，我们需要清除这个影响→让ul有高度</p></blockquote><p><strong>浮动带来的影响（问题）：</strong></p><p>当父元素没有设置高度，此时由子元素撑开。但是如果 <strong>子元素浮动了</strong>（相当于飘起来了→在标准流中不占位置），此时不能把父元素撑开（父元素高度为0）</p><h3 id="清除浮动的方法（会用即可）"><a href="#清除浮动的方法（会用即可）" class="headerlink" title="清除浮动的方法（会用即可）"></a>清除浮动的方法（会用即可）</h3><h4 id="额外标签法"><a href="#额外标签法" class="headerlink" title="额外标签法"></a>额外标签法</h4><blockquote><p>不推荐，会产生一个多余的盒子</p></blockquote><p><strong>步骤：</strong></p><ol><li>在父元素<strong>里面的最后</strong>的添加一个<strong>块级元素</strong></li><li>给添加的块级元素设置清除浮动的核心代码 <code>clear:both;</code></li></ol><p><strong>缺点：</strong> 需要在页面中添加额外的标签，让页面的HTML结构变得更加复杂</p><hr><h4 id="使用-overflow-清除浮动"><a href="#使用-overflow-清除浮动" class="headerlink" title="使用 overflow 清除浮动"></a>使用 overflow 清除浮动</h4><blockquote><p>在某些特定场景下使用不了</p></blockquote><p><strong>步骤：</strong></p><ul><li>直接给父元素设置 <code>overflow:hidden;</code></li></ul><hr><h4 id="单伪元素清除法"><a href="#单伪元素清除法" class="headerlink" title="单伪元素清除法"></a>单伪元素清除法</h4><blockquote><p>其实原理和额外标签法一样，使用伪元素替代了HTML标签</p></blockquote><p><strong>代码：</strong></p><blockquote><p>一般伪元素清除法会使用 <code>.clearfix</code> 这个类名</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="comment">/*伪元素必加的属性*/</span></span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">    <span class="comment">/*转换为块级元素*/</span></span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="comment">/*清除浮动的核心代码*/</span></span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*其实有上面三个属性已经可以生效了，但是可能在开发的时候，会有额外的几个属性！！*/</span></span><br><span class="line">    <span class="comment">/*目的：在页面中看不到伪元素*/</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">visibility</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>伪元素由CSS渲染，不会增加额外的html标签（解决了额外标签法的缺点）</p></blockquote><hr><h4 id="设置高度"><a href="#设置高度" class="headerlink" title="设置高度"></a>设置高度</h4><blockquote><p>简单粗暴，但是不推荐，不利于后期维护</p></blockquote><p><strong>步骤：</strong></p><ul><li>直接给父元素设置高度</li></ul><h2 id="浮动最开始的作用"><a href="#浮动最开始的作用" class="headerlink" title="浮动最开始的作用"></a>浮动最开始的作用</h2><blockquote><p>浮动最开始的作用是为了将网页做成报纸那样的<strong>图文环绕效果</strong></p></blockquote><p><strong>图文环绕：</strong></p><p><img src="\images\tuwen.png" alt="tuwen"></p><h5 id="ヾ-๑╹◡╹-ﾉ”网页头部案例"><a href="#ヾ-๑╹◡╹-ﾉ”网页头部案例" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”网页头部案例~"></a>ヾ(๑╹◡╹)ﾉ”网页头部案例~</h5><h1 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h1><h2 id="行内元素margin和padding的失效"><a href="#行内元素margin和padding的失效" class="headerlink" title="行内元素margin和padding的失效"></a>行内元素margin和padding的失效</h2><blockquote><p>行内元素的上下margin和padding会失效</p></blockquote><p>ヾ(๑╹◡╹)ﾉ”上面两个span，下面有个p标签~</p><p><strong>现象：</strong></p><p><strong>margin</strong></p><ul><li><p>行内元素的margin</p><ul><li><p>左右的margin能生效</p></li><li><p><strong>上下的margin会失效！！</strong></p><blockquote><p>没有作用</p></blockquote></li></ul></li><li><p>行内元素的padding</p><ul><li>左右的padding能生效</li><li><strong>上下的padding会失效</strong></li></ul></li></ul><p><strong>注意：</strong></p><ul><li>块级元素和行内块元素的margin和padding随便使用！没问题</li><li>行内元素的上下margin和上下padding会失效！！开发中不要使用！！</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;check
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基础班day07笔记</title>
    <link href="http://yoursite.com/2019/02/20/1-%E5%9F%BA%E7%A1%80%E7%8F%ADday07%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/20/1-基础班day07笔记/</id>
    <published>2019-02-20T02:07:00.000Z</published>
    <updated>2019-03-02T04:38:26.312Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><blockquote><ul><li style="list-style: none"><input type="checkbox"> 能够说出盒子模型的组成（content、padding、border、margin）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用border的相关属性（width、color、style）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用border-collapse实现边框合并</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够计算盒子的实际大小（content+padding+border）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出*{margin:0;padding:0;}的作用</li></ul><p>。。。。。。</p></blockquote><p><strong>理解上课的知识点</strong>……</p><h2 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h2><blockquote><p>一种思维方式（万物皆盒子）</p></blockquote><p><img src="\images\t1.png" alt="t1"></p><h3 id="盒子模型的组成"><a href="#盒子模型的组成" class="headerlink" title="盒子模型的组成"></a>盒子模型的组成</h3><blockquote><p>盒子模型的四个组成部分</p></blockquote><p><img src="\images\20171105195348.jpg" alt=""></p><p><strong>生活中的盒子：</strong></p><p><img src="\images\box.jpg" alt="box"></p><hr><p><strong>回到代码的总结：</strong></p><ul><li>内容：<code>content</code> 即<strong>盒子里面的文字或者标签</strong></li><li>内边距：<code>padding</code> 即<strong>盒子边框到内容之间的距离</strong></li><li>边框：<code>border</code> 即<strong>盒子的边框</strong></li><li>外边距：<code>margin</code> 即<strong>盒子与盒子之间的距离</strong></li></ul><h2 id="边框（border）"><a href="#边框（border）" class="headerlink" title="边框（border）"></a>边框（border）</h2><h3 id="border相关属性"><a href="#border相关属性" class="headerlink" title="border相关属性"></a>border相关属性</h3><ul><li><strong>border-width</strong>：边框的宽度</li><li><strong>border-style</strong>：边框的样式<ul><li><strong>solid</strong>：实线 （用的最多）</li><li><strong>dashed</strong>：虚线</li><li><strong>dotted</strong>：点线</li></ul></li><li><strong>border-color</strong>：边框的颜色</li></ul><h3 id="border的连写"><a href="#border的连写" class="headerlink" title="border的连写"></a>border的连写</h3><p><strong>代码：</strong> <code>border:1px solid #000;</code></p><p><strong>书写顺序</strong> ：</p><p><code>border: 边框宽度  边框样式 边框颜色;</code></p><h3 id="单方向设置border"><a href="#单方向设置border" class="headerlink" title="单方向设置border"></a>单方向设置border</h3><blockquote><p>单独设置盒子的一条边框</p></blockquote><p><strong>代码：</strong> <code>border-left:1px solid #000;</code></p><p><code>border-方位名词：边框粗细  边框样式  边框颜色；</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">border-left 左边框</span><br><span class="line">border-right 右边框</span><br><span class="line">border-top 上边框</span><br><span class="line">border-bottom 下边框</span><br></pre></td></tr></table></figure><h3 id="边框合并（border-collapse）"><a href="#边框合并（border-collapse）" class="headerlink" title="边框合并（border-collapse）"></a>边框合并（border-collapse）</h3><blockquote><p>也叫做细线表格</p><p>之前使用表格属性设置表格的样式，其实不推荐使用样式属性，那我们使用css改写之前的效果</p></blockquote><h5 id="ヾ-๑╹◡╹-ﾉ”使用css改写之前的表格案例"><a href="#ヾ-๑╹◡╹-ﾉ”使用css改写之前的表格案例" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”使用css改写之前的表格案例"></a>ヾ(๑╹◡╹)ﾉ”使用css改写之前的表格案例</h5><p><strong>代码：</strong> <code>border-collapse:collapse；</code></p><p><strong>效果：</strong></p><blockquote><p>让表格的边框变成真正的一条边框</p></blockquote><p><img src="\images\细线表格.png" width="500px"></p><h2 id="盒子大小的初级计算公式"><a href="#盒子大小的初级计算公式" class="headerlink" title="盒子大小的初级计算公式"></a>盒子大小的初级计算公式</h2><blockquote><p>学完border之后，可以学习盒子大小的初级计算公式</p></blockquote><p><strong>需求：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 需求 : </span></span><br><span class="line"><span class="comment">盒子尺寸 400*400 , 背景绿色, 边框: 10px 实线 黑色 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>设置的width和height其实是内容的宽高</li><li>设置border会撑大盒子</li></ul><p><strong>使用开发者工具查看盒子模型</strong></p><blockquote><p>谷歌浏览器会帮构建出一个盒子模型</p><p>并且鼠标移入某部分的时候，页面中的对应的盒子的部分会高亮</p></blockquote><p><img src="\images\box1.png" alt="box1"></p><p><strong>盒子大小的初级计算公式：</strong></p><p><code>盒子的宽度 = 左边框 + 内容的宽度 + 右边框</code></p><p>高度同理</p><p><strong>问题：</strong>现在设置完border之后盒子会撑大，怎么样才能满足需求呢？</p><p><strong>解决：</strong> 手动内减</p><blockquote><p>手动计算多余的值，然后在内容中减去即可</p></blockquote><p>结果就是：</p><ul><li>盒子内容：380*380。即width和height都是380px</li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”写一个小盒子（由内容和边框组成）"><a href="#ヾ-๑╹◡╹-ﾉ”写一个小盒子（由内容和边框组成）" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”写一个小盒子（由内容和边框组成）"></a>ヾ(๑╹◡╹)ﾉ”写一个小盒子（由内容和边框组成）</h5><p><img src="\images\边框练习.png" alt="    边框练习"></p><h5 id="ヾ-๑╹◡╹-ﾉ”不low导航"><a href="#ヾ-๑╹◡╹-ﾉ”不low导航" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”不low导航~"></a>ヾ(๑╹◡╹)ﾉ”不low导航~</h5><p><img src="\images\效果-1537767437391.png" alt="效果"></p><h2 id="内边距（padding）"><a href="#内边距（padding）" class="headerlink" title="内边距（padding）"></a>内边距（padding）</h2><blockquote><p>盒子边框与内容之间的距离（可以控制内容与边框之间的距离）</p></blockquote><h3 id="padding的取值"><a href="#padding的取值" class="headerlink" title="padding的取值"></a>padding的取值</h3><ul><li><strong>一个值：</strong> <code>padding：10px;</code><ul><li><strong>上右下左</strong>都设置为10px</li></ul></li><li><strong>两个值：</strong> <code>padding：10px 20px;</code><ul><li><strong>上下</strong>设置为10px</li><li><strong>左右</strong>设置为20px</li></ul></li><li><strong>三个值：</strong> <code>padding：10px 20px 30px;</code> <ul><li><strong>上</strong>设置为10px</li><li><strong>左右</strong>设置为20px</li><li><strong>下</strong>设置为30px</li></ul></li><li><strong>四个值：</strong> <code>padding：10px 20px 30px 40px;</code><ul><li><strong>上</strong>设置为10px</li><li><strong>右</strong>设置为20px</li><li><strong>下</strong>设置为30px</li><li><strong>左</strong>设置为40px</li></ul></li></ul><p><strong>记忆规则：</strong> 从上开始顺时针赋值，如果没有赋值的，看对面的</p><h3 id="单方向设置padding"><a href="#单方向设置padding" class="headerlink" title="单方向设置padding"></a>单方向设置padding</h3><blockquote><p>单独设置盒子的一边padding</p></blockquote><p><strong>代码：</strong> <code>padding-left:10px;</code></p><p><code>padding-方位名词：边框粗细  边框样式  边框颜色；</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">padding-top 上内边距</span><br><span class="line">padding-right 右内边距</span><br><span class="line">padding-bottom 下内边距</span><br><span class="line">padding-left 左内边距</span><br></pre></td></tr></table></figure><h2 id="盒子大小的终极计算公式"><a href="#盒子大小的终极计算公式" class="headerlink" title="盒子大小的终极计算公式"></a>盒子大小的终极计算公式</h2><blockquote><p>学完padding之后，可以学习盒子大小的终极计算公式了</p></blockquote><p><strong>需求：</strong> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 需求 : </span></span><br><span class="line"><span class="comment">盒子尺寸 300*300 , 背景粉色, 上下左右20px的padding , 边框: 10px 实线 黑色 </span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><ul><li>width和height设置的是内容的宽高</li><li>border会撑大盒子</li><li>padding也会撑大盒子</li></ul><p><strong>盒子大小的终极计算公式：</strong></p><p><code>盒子的宽度 = 左border+ 左padding + 内容的宽度 + 右padding + 右border</code></p><p>高度同理</p><p><strong>问题：</strong> 现在设置完border和padding之后盒子会撑大，怎样才能满足需求呢？</p><blockquote><p>同样也是手动计算多余的值，然后在内容中减去即可</p></blockquote><p>结果就是：</p><ul><li>盒子内容：240*240。即width和height都是380px</li></ul><hr><h3 id="不会撑大盒子的特殊情况"><a href="#不会撑大盒子的特殊情况" class="headerlink" title="不会撑大盒子的特殊情况"></a>不会撑大盒子的特殊情况</h3><p>两个互相嵌套的块级元素，如果子盒子没有设置宽度，此时子盒子的宽度默认就是父盒子的宽度。当给子盒子设置以下属性时，子盒子的宽度不会被撑大。</p><ul><li>padding-left</li><li>padding-right</li><li>border-left</li><li>border-right</li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”新浪导航（不low导航升级版）"><a href="#ヾ-๑╹◡╹-ﾉ”新浪导航（不low导航升级版）" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”新浪导航（不low导航升级版）~"></a>ヾ(๑╹◡╹)ﾉ”新浪导航（不low导航升级版）~</h5><blockquote><p>用之前的方法，当a标签的文字数量不确定时，页面会有问题。</p><p>普遍的方法应该使用padding</p></blockquote><p><img src="\images\导航-1537767908758.png" alt="导航"></p><h2 id="CSS3盒模型（自动内减→box-sizing）"><a href="#CSS3盒模型（自动内减→box-sizing）" class="headerlink" title="CSS3盒模型（自动内减→box-sizing）"></a>CSS3盒模型（自动内减→box-sizing）</h2><blockquote><p>在实际项目中会大量的用到盒子模型，如果每个盒子都去手动内减，就和不方便，此时我们可以让浏览器帮咱们自动内减</p><p>CSS3的新属性：box-sizing可以完成自动内减的效果</p></blockquote><p><strong>需求：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 需求 : </span></span><br><span class="line"><span class="comment">盒子尺寸 400*400 , 背景绿色, 边框: 10px 实线 黑色  padding:20px</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>手动内减</p><blockquote><p>项目中计算量太大，很麻烦</p></blockquote></li><li><p>自动内减</p><blockquote><p>给盒子设置 <code>box-sizing:border-box</code> 属性。此时设置的<code>width</code>和<code>height</code>就是盒子的实际宽度</p></blockquote></li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”新闻列表案例"><a href="#ヾ-๑╹◡╹-ﾉ”新闻列表案例" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”新闻列表案例"></a>ヾ(๑╹◡╹)ﾉ”新闻列表案例</h5><blockquote><p>熟悉border和padding的使用</p></blockquote><p><img src="\images\04-练习-新闻列表.png" alt="04-练习-新闻列表"></p><h2 id="外边距（margin）"><a href="#外边距（margin）" class="headerlink" title="外边距（margin）"></a>外边距（margin）</h2><blockquote><p>盒子与盒子之间的距离（可以控制盒子的位置）</p></blockquote><h3 id="margin的取值"><a href="#margin的取值" class="headerlink" title="margin的取值"></a>margin的取值</h3><ul><li><strong>一个值：</strong> <code>margin：10px;</code><ul><li><strong>上右下左</strong>都设置为10px</li></ul></li><li><strong>两个值：</strong> <code>margin：10px 20px;</code><ul><li><strong>上下</strong>设置为10px</li><li><strong>左右</strong>设置为20px</li></ul></li><li><strong>三个值：</strong> <code>margin：10px 20px 30px;</code> <ul><li><strong>上</strong>设置为10px</li><li><strong>左右</strong>设置为20px</li><li><strong>下</strong>设置为30px</li></ul></li><li><strong>四个值：</strong> <code>margin：10px 20px 30px 40px;</code><ul><li><strong>上</strong>设置为10px</li><li><strong>右</strong>设置为20px</li><li><strong>下</strong>设置为30px</li><li><strong>左</strong>设置为40px</li></ul></li></ul><p><strong>记忆规则：</strong> 从上开始顺时针赋值，如果没有赋值的，看对面的</p><h3 id="单方向设置margin"><a href="#单方向设置margin" class="headerlink" title="单方向设置margin"></a>单方向设置margin</h3><blockquote><p>单独设置盒子的一边margin</p></blockquote><p><strong>代码：</strong> <code>margin-left:10px;</code></p><p><code>margin-方位名词：边框粗细  边框样式  边框颜色；</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">margin-top 上外边距</span><br><span class="line">margin-right 右外边距</span><br><span class="line">margin-bottom 下外边距</span><br><span class="line">margin-left 左外边距</span><br></pre></td></tr></table></figure><hr><h3 id="marign单方向的应用"><a href="#marign单方向的应用" class="headerlink" title="marign单方向的应用"></a>marign单方向的应用</h3><ul><li><p>上下应用</p><ul><li>margin-top：能让盒子下移</li><li>margin-bottom：能让下面的盒子往下移</li></ul></li><li><p>左右应用（先转换成行内块）</p><ul><li>margin-left：能让盒子右移</li><li>margin-right：能让右边的盒子往右移动</li></ul></li></ul><hr><h3 id="清除默认内外边距"><a href="#清除默认内外边距" class="headerlink" title="清除默认内外边距"></a>清除默认内外边距</h3><blockquote><p>浏览器会默认给一些标签设置margin和padding，在项目开始之前需要清除这些标签默认的margin和padding，留给自己设置。</p></blockquote><p>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">body 标签: 自带 margin: 8px; 的属性</span><br><span class="line">p 标签: 默认带有 margin: font-size 的值</span><br><span class="line">ul标签: ul 标签默认带有上下的 margin, 和 padding-left</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>因为要清除所有标签默认的内外边距，此时可以使用通配符完成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123; </span><br><span class="line">padding: 0;</span><br><span class="line">margin: 0; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="ヾ-๑╹◡╹-ﾉ”爱宠知识案例"><a href="#ヾ-๑╹◡╹-ﾉ”爱宠知识案例" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”爱宠知识案例~"></a>ヾ(๑╹◡╹)ﾉ”爱宠知识案例~</h5><p><img src="\images\05-练习-爱宠知识.png" alt="05-练习-爱宠知识"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;check
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基础班day06笔记</title>
    <link href="http://yoursite.com/2019/02/20/1-%E5%9F%BA%E7%A1%80%E7%8F%ADday06%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/20/1-基础班day06笔记/</id>
    <published>2019-02-20T02:06:00.000Z</published>
    <updated>2019-03-02T04:31:28.415Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><blockquote><ul><li style="list-style: none"><input type="checkbox"> 能够说出background相关的几个属性（color、image、repeat、position）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用background设置颜色和图片（color、image）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用background-position设置背景图片的位置（left、center、right）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出元素的三种显示方式（块级元素、行内元素、行内块元素）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用display转换元素的显示方式（display：block/inline/inline-block）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出行高的概念并且使用（基线的距离、让文字垂直居中）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出a链接的四种伪类（lvha：link、visited、hover、active）</li></ul><p>。。。。。。</p></blockquote><p><strong>理解上课的知识点</strong>……</p><h2 id="背景相关的属性"><a href="#背景相关的属性" class="headerlink" title="背景相关的属性"></a>背景相关的属性</h2><blockquote><p>开发中经常会给标签设置背景颜色、背景图片等效果。</p></blockquote><h3 id="背景颜色（background-color）"><a href="#背景颜色（background-color）" class="headerlink" title="背景颜色（background-color）"></a>背景颜色（background-color）</h3><blockquote><p>设置标签的背景颜色</p></blockquote><p><strong>代码：</strong><code>background-color: red;</code></p><p><strong>取值：</strong>之前介绍的颜色的取值就可以</p><h3 id="背景图片（background-image）"><a href="#背景图片（background-image）" class="headerlink" title="背景图片（background-image）"></a>背景图片（background-image）</h3><blockquote><p>设置标签的背景为图片</p></blockquote><p><strong>代码：</strong><code>background-image: url(图片路径);</code></p><p><strong>注意：</strong> 背景图片默认有<strong>平铺效果</strong></p><h3 id="背景平铺（background-repeat）"><a href="#背景平铺（background-repeat）" class="headerlink" title="背景平铺（background-repeat）"></a>背景平铺（background-repeat）</h3><blockquote><p>设置标签的背景图片是否平铺</p></blockquote><p><strong>代码：</strong><code>background-repeat: no-repeat；</code></p><p><strong>取值：</strong></p><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">repeat</td><td style="text-align:center">背景平铺（默认值）</td></tr><tr><td style="text-align:center">no-repeat</td><td style="text-align:center">不平铺</td></tr><tr><td style="text-align:center">repeat-x</td><td style="text-align:center">水平方向（沿x轴）平铺</td></tr><tr><td style="text-align:center">repeat-y</td><td style="text-align:center">垂直方向（沿y轴）平铺</td></tr></tbody></table><h3 id="背景附着（background-attachment）（了解）"><a href="#背景附着（background-attachment）（了解）" class="headerlink" title="背景附着（background-attachment）（了解）"></a>背景附着（background-attachment）（了解）</h3><blockquote><p>设置标签的背景图片是否随着页面的滚动而移动（用的不多）</p></blockquote><p><strong>代码：</strong> <code>background-attachment: scroll;</code></p><p><strong>取值：</strong></p><table><thead><tr><th style="text-align:center">值</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">scroll</td><td style="text-align:center">背景图像会随着页面其余部分的滚动而移动（默认值）</td></tr><tr><td style="text-align:center">fixed</td><td style="text-align:center">当页面的其余部分滚动时，背景图像不会移动。</td></tr></tbody></table><h3 id="背景位置（background-position）"><a href="#背景位置（background-position）" class="headerlink" title="背景位置（background-position）"></a>背景位置（background-position）</h3><blockquote><p>设置背景图片的位置</p></blockquote><p><strong>代码：</strong><code>background-position: 水平方向的位置（x） 垂直方向的位置（y）；</code></p><p><strong>取值：</strong></p><ul><li><p>关键字</p><ul><li>水平方向<ul><li>left：左边</li><li>center：中间</li><li>right：右边</li></ul></li><li>垂直方向：<ul><li>top：上边</li><li>center：中间</li><li>bottom：下边</li></ul></li></ul></li><li><p>像素</p><blockquote><p>以盒子的左上角为原点（0,0），水平向右为x轴，垂直向下为y轴，构建一个坐标系。</p></blockquote><ul><li>第一个值：是X轴的坐标</li><li>第二个值：是Y轴的坐标</li></ul><p>然后找到对应的坐标点，将图片的左上角与坐标点重合即可。</p></li></ul><h3 id="连写形式（background）"><a href="#连写形式（background）" class="headerlink" title="连写形式（background）"></a>连写形式（background）</h3><blockquote><p>背景属性相关的连写形式</p></blockquote><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/*背景颜色*/</span></span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="comment">/*背景图片*/</span></span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(200.jpg);</span><br><span class="line">    <span class="comment">/*背景平铺*/</span></span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="comment">/*背景附着*/</span></span><br><span class="line">    <span class="attribute">background-attachment</span>: scroll;</span><br><span class="line">    <span class="comment">/*背景位置*/</span></span><br><span class="line">    <span class="attribute">background-position</span>: center center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*--------------------------------------*/</span></span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/*连写形式*/</span></span><br><span class="line">    <span class="attribute">background</span>: pink <span class="built_in">url</span>(200.jpg) no-repeat scroll center center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>书写顺序：</strong></p><p><code>background：背景颜色  背景图片  背景平铺  背景附着  背景位置</code></p><p><code>background:color image repeat attachment position;</code></p><p><code>background: red url(1.jpg) no-repeat scroll center center;</code></p><p><strong>省略的特殊情况：</strong></p><blockquote><p>当div（盒子）的大小和背景图片的大小一样时（常见的写法）</p></blockquote><p>可以只写<code>background:url(200.jpg)</code> 即可</p><p><strong>省略的覆盖问题：</strong></p><blockquote><p>连写都要注意这个问题</p></blockquote><p>如果需要同时设置单独的样式和连写的样式，可以</p><ul><li>把单独的样式写在连写的下面</li><li>把单独的样式写在连写的里面</li></ul><p><strong>实际用的最多的情况：</strong></p><p>把盒子的大小设置为背景图片的大小，此时只需要设置url（）即可，其他的样式就可以省略掉！！</p><h5 id="ヾ-๑╹◡╹-ﾉ”英雄联盟案例（熟悉背景操作即可）"><a href="#ヾ-๑╹◡╹-ﾉ”英雄联盟案例（熟悉背景操作即可）" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”英雄联盟案例（熟悉背景操作即可）"></a>ヾ(๑╹◡╹)ﾉ”英雄联盟案例（熟悉背景操作即可）</h5><h2 id="标签的三种显示方式（重要）"><a href="#标签的三种显示方式（重要）" class="headerlink" title="标签的三种显示方式（重要）"></a>标签的三种显示方式（重要）</h2><blockquote><p>标签有很多，但是其显示的方式（特点），一般我们把它分为三种</p><p><strong>回忆一下：</strong>div、p、span、a的效果~</p><p>div和p标签独占一行、宽度默认继承父盒子、高度由内容撑开</p><p>span和a标签一行显示一个、宽度和高度都是由内容撑开</p></blockquote><h3 id="块级元素"><a href="#块级元素" class="headerlink" title="块级元素"></a>块级元素</h3><blockquote><p>div就是一个块级元素</p></blockquote><p><strong>属性：</strong> <code>display : block；</code></p><p><strong>显示特点：</strong></p><ul><li><p>独占一行（一行只能显示一个）</p></li><li><p>宽度默认是父元素的宽度</p></li><li><p>可不可以设置宽高？</p><p>可以设置宽高！！</p></li></ul><p><strong>代表：</strong></p><ul><li>div、p、h（记忆）</li></ul><blockquote><p>除此之外还有很多</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div,p,ol,li,ul,dt,dd,dl,header,footer,aside,nav,article,section......</span><br></pre></td></tr></table></figure><h3 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h3><blockquote><p>span就是一个行内元素</p></blockquote><p><strong>属性：</strong> <code>display : inline；</code></p><p><strong>显示特点：</strong></p><ul><li><p>一行可以显示多个</p></li><li><p>宽度和告诉默认都是由内容撑开的</p></li><li><p>可不可以设置宽高？</p><p>不可以设置宽高的</p></li></ul><p><strong>代表：</strong>  </p><ul><li>span、a</li></ul><blockquote><p>除此之外还有很多</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a,span,b,u,s,i,strong,ins,del,em......</span><br></pre></td></tr></table></figure><h3 id="行内块元素"><a href="#行内块元素" class="headerlink" title="行内块元素"></a>行内块元素</h3><blockquote><p>行内元素演变成现在的行内块元素的</p><p>input、img就是行内块元素的显示特点</p></blockquote><p><strong>属性：</strong> <code>display: inline-block ;</code> </p><p><strong>特点：</strong></p><ul><li>一行可以显示多个 (像是行内)</li><li>可以设置宽高  (像是块级)</li></ul><p><strong>代表：</strong>  input、img、textarea、select、button</p><blockquote><p>历史问题：在很久以前只有两种显示方式（行内元素和块级元素）。因为<code>行内块元素</code>是从<code>行内元素</code>演变过来的，还在演变的过程中，所以有些属性并没有改过来，所以此时查看img标签的 <code>display</code> 属性值为 <code>inline</code> </p></blockquote><h3 id="三种显示方式的转换"><a href="#三种显示方式的转换" class="headerlink" title="三种显示方式的转换"></a>三种显示方式的转换</h3><ul><li><code>display: block;</code> 转成块级</li><li><code>display: inline;</code> 转成行内</li><li><code>display: inline-block;</code> 转成行内块</li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”low导航（都是a标签-60-40）字体大小12px"><a href="#ヾ-๑╹◡╹-ﾉ”low导航（都是a标签-60-40）字体大小12px" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”low导航（都是a标签 60*40）字体大小12px"></a>ヾ(๑╹◡╹)ﾉ”low导航（都是a标签 60*40）字体大小12px</h5><p><img src="\images\nav.png" alt="nav"></p><p><strong>注意：p这种段落标签不要嵌套块级元素</strong>（<strong>惊天BUG</strong>）</p><blockquote><p>用p标签里嵌套一个div，此时给p标签设置宽高100px，背景红色，给div设置宽高100px，背景颜色蓝色，请问此时页面中是什么效果？？</p></blockquote><h2 id="行高（line-height）"><a href="#行高（line-height）" class="headerlink" title="行高（line-height）"></a>行高（line-height）</h2><blockquote><p>行高：两行文本之间基线的距离</p></blockquote><h5 id="ヾ-๑╹◡╹-ﾉ”画图演示基线"><a href="#ヾ-๑╹◡╹-ﾉ”画图演示基线" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”画图演示基线"></a>ヾ(๑╹◡╹)ﾉ”画图演示基线</h5><p><strong>作用：</strong>控制两行文本之间的上下距离</p><p><strong>常见的使用：</strong> 让单行文本在标签中垂直居中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">line-height</span>: 标签的高度;</span><br></pre></td></tr></table></figure><h3 id="行高能让哪些元素垂直居中？"><a href="#行高能让哪些元素垂直居中？" class="headerlink" title="行高能让哪些元素垂直居中？"></a>行高能让哪些元素垂直居中？</h3><blockquote><p>行高除了可以让单行文本垂直居中之外，还可以让其他元素垂直居中</p></blockquote><ul><li>文本</li><li>span、a标签（行内元素）</li><li>input、img标签（行内块元素）</li></ul><blockquote><p><strong>特殊情况：</strong>要让 <code>img标签</code>  通过 <code>line-height垂直居中</code> ，需要单独给 <code>img标签</code> 设置 <code>vertical-align: middle;</code> 属性</p></blockquote><p>如果想让以上元素垂直居中，需要配合以上元素的<strong>所在标签</strong>（父元素）设置 <code>line-height:标签的高度</code> </p><blockquote><p>其实你会发现，这几类和 <code>text-align：center；</code> 的三类是一样的</p></blockquote><h3 id="行高与font的连写注意点"><a href="#行高与font的连写注意点" class="headerlink" title="行高与font的连写注意点"></a>行高与font的连写注意点</h3><blockquote><p>字体连写里面还有行高属性。</p></blockquote><p><strong>完整版的font连写形式：</strong></p><p><code>font: style weight size/line-height family</code></p><p><strong>注意点：</strong></p><p><strong>line-height 如果写在 font 连写前面，会被层叠掉</strong> </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*line-height书写位置：*/</span></span><br><span class="line"><span class="comment">/*1. 写在font里 OK */</span></span><br><span class="line">font: italic bold 20px/200px '楷体';</span><br><span class="line"></span><br><span class="line"><span class="comment">/*2. 写在font后面 OK*/</span></span><br><span class="line">font: italic bold 20px '楷体';</span><br><span class="line"><span class="selector-tag">line-height</span>: 200<span class="selector-tag">px</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 3. 写在font前面 会覆盖  */</span></span><br><span class="line"><span class="selector-tag">line-height</span>: 200<span class="selector-tag">px</span>;</span><br><span class="line">font: italic bold 20px '楷体';</span><br><span class="line"><span class="comment">/* 因为font的连写中有行高属性，连写中省略相当于设置了默认值 */</span></span><br></pre></td></tr></table></figure><p><strong>如果用到了line-height和font的连写</strong></p><ul><li>要么把 <code>line-height</code> 写在 <code>font连写</code>的<strong>下面</strong></li><li>要么把 <code>line-height</code> 写进 <code>font连写</code> 的<strong>里面</strong> </li></ul><h2 id="链接伪类选择器（了解）"><a href="#链接伪类选择器（了解）" class="headerlink" title="链接伪类选择器（了解）"></a>链接伪类选择器（了解）</h2><blockquote><p>不仅仅是选中某个标签，而是选择的元素的某种状态</p></blockquote><h3 id="链接伪类选择器介绍"><a href="#链接伪类选择器介绍" class="headerlink" title="链接伪类选择器介绍"></a>链接伪类选择器介绍</h3><blockquote><p>回顾a链接的特性</p><p>点击之前是蓝色，点击之后是紫色</p><p>我们可以手动设置a标签不同状态的颜色（或者其他样式）</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*选中a标签没有点击过时状态*/</span></span><br><span class="line">a:link &#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中a标签点击之后的状态*/</span></span><br><span class="line">a:visited &#123;</span><br><span class="line">    color: pink;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中鼠标移入时的状态*/</span></span><br><span class="line">a:hover &#123;</span><br><span class="line">    color: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*选中鼠标按下的状态*/</span></span><br><span class="line">a:active &#123;</span><br><span class="line">    color: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意点：</strong></p><ul><li><p>四种链接伪类选择器的<strong>顺序固定</strong></p><p><code>link visited hover active</code></p><p>可以联想记忆：</p><p><code>lvha → 看见lv包包就ha哈笑</code></p></li><li><p>hover用的较多，并且可以给其他标签使用。其他的几乎不用</p></li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”五彩导航"><a href="#ヾ-๑╹◡╹-ﾉ”五彩导航" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”五彩导航"></a>ヾ(๑╹◡╹)ﾉ”五彩导航</h5><h2 id="居中方法小总结"><a href="#居中方法小总结" class="headerlink" title="居中方法小总结"></a>居中方法小总结</h2><h3 id="水平居中的方法"><a href="#水平居中的方法" class="headerlink" title="水平居中的方法"></a>水平居中的方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">text-align:center</span><br><span class="line">1.文本</span><br><span class="line">2.行内块元素（input/img）</span><br><span class="line">3.行内元素（span/a）</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">margin：0 auto：</span><br><span class="line">1.块级元素</span><br></pre></td></tr></table></figure><h3 id="垂直居中的方法"><a href="#垂直居中的方法" class="headerlink" title="垂直居中的方法"></a>垂直居中的方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">line-height：标签的高度；</span><br><span class="line">1.文本</span><br><span class="line">2.行内块元素（input/img）注意：img需要加 vertical-align : middle（垂直对齐方式居中）</span><br><span class="line">3.行内元素（span/a）</span><br></pre></td></tr></table></figure><blockquote><p>有同学会问：那块级元素垂直居中怎么实现呢？</p><p>→ 这个就需要使用到之后学习的定位知识来完成了</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;check
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基础班day05笔记</title>
    <link href="http://yoursite.com/2019/02/20/1-%E5%9F%BA%E7%A1%80%E7%8F%ADday05%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/20/1-基础班day05笔记/</id>
    <published>2019-02-20T02:05:00.000Z</published>
    <updated>2019-03-02T04:26:06.368Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><blockquote><ul><li style="list-style: none"><input type="checkbox"> 能够说出三种CSS的书写位置（内嵌、行内、外联）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用text开头的几个属性（text-align，text-indent、text-decoration）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用margin：0 auto（盒子（div、p、h）居中）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出CSS三大特性（继承性、层叠性、优先级）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出CSS能够继承的属性（color、text-、font- 、line-等）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够计算CSS选择器的权重（0,0,0,0）</li></ul><p>。。。。。。</p></blockquote><p><strong>理解上课的知识点</strong>……</p><h2 id="CSS的三种书写位置"><a href="#CSS的三种书写位置" class="headerlink" title="CSS的三种书写位置"></a>CSS的三种书写位置</h2><blockquote><p>css的书写位置有时候也叫做css的三种引入方式</p></blockquote><h3 id="内嵌样式（内部引入方式）"><a href="#内嵌样式（内部引入方式）" class="headerlink" title="内嵌样式（内部引入方式）"></a>内嵌样式（内部引入方式）</h3><blockquote><p>将css语句都写在style标签里面</p></blockquote><p><strong>书写位置：</strong></p><ul><li>css写在style标签里面</li><li>style标签写在head标签里面，title标签下面，</li></ul><p><strong>作用范围：</strong></p><ul><li>当前页面</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    div &#123;</span></span><br><span class="line"><span class="undefined">    color: red；</span></span><br><span class="line"><span class="undefined">        font-size：100px；</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>使用场景：</strong></p><ul><li>一般用在小demo或者小案例</li></ul><h3 id="行内样式（行内引入方式）"><a href="#行内样式（行内引入方式）" class="headerlink" title="行内样式（行内引入方式）"></a>行内样式（行内引入方式）</h3><blockquote><p>将CSS样式直接写在标签本身上，以属性的形式存在 </p></blockquote><p><strong>书写位置：</strong></p><ul><li>css写在标签的style属性中</li></ul><p><strong>作用范围：</strong></p><ul><li>当前标签</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"color: red; font-size: 100px;"</span>&gt;</span>小可爱<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>使用场景：</strong></p><ul><li>基础班不使用，js操作的样式一般都是行内样式</li></ul><h3 id="外联样式（外部引入方式）"><a href="#外联样式（外部引入方式）" class="headerlink" title="外联样式（外部引入方式）"></a>外联样式（外部引入方式）</h3><blockquote><p>css写在一个单独的.css的文件中，在html文件里面通过link标签引入css文件</p></blockquote><p><strong>书写位置：</strong></p><ul><li>css写在一个单独的.css文件中，需要通过link标签引入</li><li>link标签写在head标签里面，title标签下面</li></ul><p><strong>作用范围：</strong></p><ul><li>多个页面（谁引入，谁生效）</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"路径"</span> &gt;</span></span><br></pre></td></tr></table></figure><p><strong>使用场景：</strong></p><ul><li>项目中用的最多</li></ul><h3 id="三种样式表总结"><a href="#三种样式表总结" class="headerlink" title="三种样式表总结"></a>三种样式表总结</h3><table><thead><tr><th style="text-align:center">样式表</th><th style="text-align:center">书写位置</th><th style="text-align:center">作用范围</th><th style="text-align:center">使用场景</th></tr></thead><tbody><tr><td style="text-align:center">内嵌样式</td><td style="text-align:center">css写在style标签中</td><td style="text-align:center">当前页面</td><td style="text-align:center">小案例</td></tr><tr><td style="text-align:center">行内样式</td><td style="text-align:center">css写在标签的style属性中</td><td style="text-align:center">当前标签</td><td style="text-align:center">配合js使用</td></tr><tr><td style="text-align:center">外联样式</td><td style="text-align:center">css写在单独的css文件中，通过link引入</td><td style="text-align:center">多个页面</td><td style="text-align:center">项目中</td></tr></tbody></table><h2 id="文本相关属性"><a href="#文本相关属性" class="headerlink" title="文本相关属性"></a>文本相关属性</h2><h3 id="文本的缩进（text-indent）"><a href="#文本的缩进（text-indent）" class="headerlink" title="文本的缩进（text-indent）"></a>文本的缩进（text-indent）</h3><blockquote><p>设置文本的缩进</p></blockquote><p><strong>取值：</strong></p><ul><li>数字+px（像素）</li><li>数字+em（ <code>1em=font-size</code> ）</li></ul><p><strong>注意：</strong></p><ul><li>首行缩进两个字：一般使用2em。</li></ul><h3 id="文本的对齐方式（text-align）"><a href="#文本的对齐方式（text-align）" class="headerlink" title="文本的对齐方式（text-align）"></a>文本的对齐方式（text-align）</h3><blockquote><p>设置文字的<strong>水平对齐方式</strong></p></blockquote><p><strong>取值：</strong></p><ul><li>left：设置文字在盒子中 <strong>水平靠左</strong></li><li>center：设置文字在盒子中 <strong>水平居中</strong></li><li>right：设置文字在盒子中 <strong>水平靠右</strong></li></ul><h3 id="文本的修饰（text-decoration）"><a href="#文本的修饰（text-decoration）" class="headerlink" title="文本的修饰（text-decoration）"></a>文本的修饰（text-decoration）</h3><blockquote><p>给文字设置下划线、删除线等效果</p></blockquote><p><strong>取值：</strong></p><ul><li>none：没有任何修饰（多用于清除多余的样式）</li><li>underline：下划线</li><li>line-through：删除线</li></ul><p><strong>注意：</strong></p><ul><li>一般用的最多的是用text-decoration：none，取消a标签的默认下划线。</li></ul><p><strong>总结：</strong>strong、ins、em、del的效果已经全部可以通过css替换了</p><ul><li>strong：加粗→<code>font-weight: 700;</code></li><li>ins：下划线→<code>text-decoration: underline;</code></li><li>em：倾斜→<code>font-style: italic;</code></li><li>del：删除线→<code>text-decoration: line-through;</code></li></ul><h2 id="水平居中总结"><a href="#水平居中总结" class="headerlink" title="水平居中总结"></a>水平居中总结</h2><blockquote><p>项目中经常会遇到让元素水平居中的效果，要熟练使用。</p><p>学习的第一个水平居中属性就是 <code>text-align:center</code></p></blockquote><h3 id="text-align-center-能让哪些元素水平居中？"><a href="#text-align-center-能让哪些元素水平居中？" class="headerlink" title="text-align:center; 能让哪些元素水平居中？"></a><code>text-align:center;</code> 能让哪些元素水平居中？</h3><blockquote><p><code>text-align：center；</code> 除了能让文字水平居中之外，还可以让其他元素水平居中</p></blockquote><ul><li>文本</li><li>span、a标签（行内元素）</li><li>input、img（行内块元素）</li></ul><p>如果想让以上元素水平居中，需要给以上元素的<strong>所在标签</strong>（父元素）设置<code>text-align：center；</code></p><h3 id="让盒子居中的方法"><a href="#让盒子居中的方法" class="headerlink" title="让盒子居中的方法"></a>让盒子居中的方法</h3><blockquote><p><code>text-align:center</code> 不能让盒子（div、h、p）这类标签水平居中，如果需要让盒子居中怎么实现呢？</p></blockquote><p><strong>代码：</strong><code>margin: 0 auto;</code></p><p><strong>作用：</strong> 可以让 <code>盒子(div/h/p)</code> 水平居中</p><p><strong>条件：</strong>有宽度的盒子</p><blockquote><p>因为div不设置宽度，宽度默认就是父元素的宽度（独占一行的效果）</p></blockquote><p>如果想让div、h、p标签水平居中，需要给当前div设置<code>margin:0 auto;</code></p><h5 id="ヾ-๑╹◡╹-ﾉ”改写昨天的新闻案例"><a href="#ヾ-๑╹◡╹-ﾉ”改写昨天的新闻案例" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”改写昨天的新闻案例"></a>ヾ(๑╹◡╹)ﾉ”改写昨天的新闻案例</h5><h2 id="CSS的三大特性"><a href="#CSS的三大特性" class="headerlink" title="CSS的三大特性"></a>CSS的三大特性</h2><blockquote><p>解释css的一些特殊现象</p></blockquote><h3 id="继承性"><a href="#继承性" class="headerlink" title="继承性"></a>继承性</h3><blockquote><p>后代元素会继承祖先元素的一些样式（子承父业）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father"</span>&gt;</span>父亲</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"son"</span>&gt;</span>儿子<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>在开发者调试工具的查看继承的代码</strong> </p></blockquote><p><img src="\images\css1.png" alt="css1"></p><p><strong>有哪些样式属性可以继承：</strong></p><blockquote><p>可以通过开发者调试工具中查看是否有 <code>Inherited from</code> 判断样式是否继承</p><p>这里列举几个常见的记忆</p></blockquote><ul><li>color：颜色</li><li>font- 开头的：字体相关属性</li><li>text- 开头的：文本相关属性</li><li>line- 开头的：line-height</li></ul><p><strong>如何查看当前元素的属性值：</strong></p><blockquote><p>开发者调试工具中的<strong>computed</strong> 中可以搜索</p></blockquote><hr><p><strong>常见的应用：</strong></p><p>去除列表的样式（如：小圆点），可以给li标签设置使用 <code>list-style：none；</code> ，但一般给ul设置，此时也利用了继承性。</p><hr><p><strong>不能继承的特殊情况：</strong></p><ul><li>a链接颜色不能通过继承设置，需要单独设置（a标签有本身的样式）<ul><li>a标签有默认的样式，要给a标签设置样式，需要单独选中后设置！</li></ul></li><li>h系列标签字体大小不能通过继承设置，需要单独设置（有本身的样式）</li><li>div的高度不能继承，宽度默认有继承父元素的效果</li></ul><p><strong>总结：</strong> 如果标签自己有样式（可以是自己设置的或者浏览器默认设置的），就不会继承父元素的样式（标签很独立）</p><blockquote><p> 在同学们刚刚开始学习还不熟练的时候，先别想着用继承就少写代码，该设置的代码一个别省。</p></blockquote><h3 id="层叠性"><a href="#层叠性" class="headerlink" title="层叠性"></a>层叠性</h3><blockquote><p>浏览器解决样式冲突的特性</p></blockquote><p><strong>特点：</strong>后渲染的css样式会覆盖掉先渲染的css样式 （优先级相同的情况下） </p><p><strong>例子：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.red</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="comment">/* 最终绿色起效果 */</span></span></span><br><span class="line"><span class="undefined">    color: pink;</span></span><br><span class="line"><span class="undefined">    color: red;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.green</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="selector-tag">color</span><span class="selector-pseudo">:green</span>;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"green red"</span>&gt;</span>小姐姐<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>总结：</strong></p><ul><li>当层叠的样式相同时→样式会覆盖→写在下面的样式会生效</li><li>当层叠的样式不同时→样式会叠加→共同作用在标签上</li></ul><h3 id="优先级（重要）"><a href="#优先级（重要）" class="headerlink" title="优先级（重要）"></a>优先级（重要）</h3><blockquote><p>只有当优先级相同时，才比较层叠性</p><p>如果用的是不同选择器，就不能比较层叠性了，则需要考虑优先级</p></blockquote><h4 id="优先级比较"><a href="#优先级比较" class="headerlink" title="优先级比较"></a>优先级比较</h4><blockquote><p>给页面中的一个标签设置样式，可以通过多种方法~</p><p>比较不同方法的优先级大小分别是什么样</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"son"</span> <span class="attr">id</span>=<span class="string">"orange"</span>&gt;</span>我是一个p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>优先级比较公式：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">继承 &lt; 通配符 &lt; 标签选择器 &lt; 类选择器 &lt; ID选择器 &lt; 行内样式 &lt;　!important</span><br></pre></td></tr></table></figure><p><strong>注意点：</strong></p><ul><li>!important写在样式<strong>属性值的后面，分号的前面</strong></li><li><strong>!important不能提升继承的优先级</strong>，只要是继承的优先级是最低的</li></ul><h4 id="权重计算"><a href="#权重计算" class="headerlink" title="权重计算"></a>权重计算</h4><blockquote><p>也叫做<strong>css的特殊性（specificity）</strong></p><p>当面对复合选择器的时候，需要考虑权重的计算</p></blockquote><p><strong>计算公式：</strong></p><p>公式算法：（0,0,0,0）</p><p><img src="\images\权重计算-1536202625160.png" alt="权重计算"></p><ul><li>第一个数字：行内样式的个数</li><li>第二个数字：ID选择器的个数</li><li>第三个数字：类选择器的个数</li><li>第四个数字：标签选择器的个数</li></ul><p><strong>注意：<code>!important</code> 如果能选中对应标签，则权重最高！！天下第一！！！</strong></p><p><strong>比较规则：</strong></p><ol><li><p>先比较第一个数字，如果比较出来了，之后的统统不看</p></li><li><p>如果第一个数字相同，再去比较第二个数字</p><p>……</p><p>如果数字都相同，表示优先级相同，则比较层叠性（谁写在下面，谁说了算）</p></li></ol><p><strong>做权重计算题的步骤：</strong></p><ol><li>判断选择器<strong>是否直接选中标签</strong>，如果不能直接选中→继承优先级最低→直接pass</li><li>通过权重计算公式，判断谁权重最高！！</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;check
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基础班day04笔记</title>
    <link href="http://yoursite.com/2019/02/20/1-%E5%9F%BA%E7%A1%80%E7%8F%ADday04%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/20/1-基础班day04笔记/</id>
    <published>2019-02-20T02:04:00.000Z</published>
    <updated>2019-03-02T04:25:55.558Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><blockquote><ul><li style="list-style: none"><input type="checkbox"> 了解CSS的作用（给页面添加样式）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用font属性设置文字相关样式（font-style/font-weight/font-size/font-family）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用chrome调试HTML/CSS代码</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用ID/类/标签选择器的作用（选择页面的标签，给其添加样式）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用交集、并集选择器</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够使用后代/子代选择器的作用（选择页面的标签，给其添加样式）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 几种设置颜色的方式（关键字（英文单词）、rgb(0,0,0)、rgba(0,0,0,0)、#FEFEFE）</li></ul><p>。。。。。。</p></blockquote><p><strong>理解上课的知识点</strong>……</p><h2 id="CSS初体验"><a href="#CSS初体验" class="headerlink" title="CSS初体验"></a>CSS初体验</h2><blockquote><p>css的作用是给页面中的元素（标签）设置样式（颜色、大小、字体、位置等等）</p></blockquote><h5 id="ヾ-๑╹◡╹-ﾉ”咱们首先给P标签一点颜色看看"><a href="#ヾ-๑╹◡╹-ﾉ”咱们首先给P标签一点颜色看看" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”咱们首先给P标签一点颜色看看~"></a>ヾ(๑╹◡╹)ﾉ”咱们首先给P标签一点颜色看看~</h5><p><strong>特点：</strong>css的相关设置都放在 style 标签中，style是一个双标签，它放在head里面，title下面</p><p><strong>结构：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">选择器 &#123;</span></span><br><span class="line"><span class="undefined">属性名1: 属性值1;</span></span><br><span class="line"><span class="undefined">属性名2: 属性值2;</span></span><br><span class="line"><span class="undefined">...</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">p &#123;</span></span><br><span class="line"><span class="undefined">color: red;</span></span><br><span class="line"><span class="undefined">font-size: 30px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>总结：</strong>css 是用来给页面上的结构添加样式的 (尺寸、颜色、位置等等)</p><h3 id="CSS的相关属性"><a href="#CSS的相关属性" class="headerlink" title="CSS的相关属性"></a>CSS的相关属性</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">color：设置文字的颜色</span><br><span class="line">font-size：设置字体的大小</span><br><span class="line">background-color：设置背景颜色</span><br><span class="line">width：设置宽度</span><br><span class="line">height：设置高度</span><br></pre></td></tr></table></figure><h3 id="CSS概念"><a href="#CSS概念" class="headerlink" title="CSS概念"></a>CSS概念</h3><blockquote><p>层叠样式表（Cascading style sheets）</p></blockquote><p><strong>作用：</strong> 给html标签设置样式 ( 给人穿衣服、化妆)</p><p><strong>注意：</strong></p><ul><li>符号必须是英文状态下的</li><li>每一句样式键值对写完之后，必须记得加一个分号。</li></ul><h2 id="字体相关属性"><a href="#字体相关属性" class="headerlink" title="字体相关属性"></a>字体相关属性</h2><h3 id="字体大小（font-size）"><a href="#字体大小（font-size）" class="headerlink" title="字体大小（font-size）"></a>字体大小（font-size）</h3><p><strong>font-size：</strong> 设置字体大小</p><p><strong>取值：</strong></p><ul><li>数字+px（常用）</li></ul><h3 id="字体粗细（font-weight）"><a href="#字体粗细（font-weight）" class="headerlink" title="字体粗细（font-weight）"></a>字体粗细（font-weight）</h3><p><strong>font-weight：</strong>字体的<strong>粗细</strong></p><p><strong>取值：</strong></p><ul><li>纯数字（没有单位）:  <ul><li>400：正常粗细</li><li>700：加粗</li></ul></li><li>关键字 : <ul><li>normal：正常粗细</li><li>bold：加粗</li></ul></li></ul><h3 id="字体风格（font-style）"><a href="#字体风格（font-style）" class="headerlink" title="字体风格（font-style）"></a>字体风格（font-style）</h3><p><strong>font-style：</strong>字体的样式 （文字<strong>是否倾斜</strong>）</p><p><strong>取值：</strong></p><ul><li>normal：正常（不倾斜）</li><li>italic：字体倾斜</li></ul><p>###字体类型（font-family）</p><p><strong>font-family：</strong>字体类型</p><p><strong>取值：</strong> 宋体、楷体、微软雅黑（默认值）、……</p><p><strong>注意：</strong></p><ul><li>一些冷门字体很多电脑里面默认没有安装，因此会显示不出来。</li><li>字体可以设置多组多组，中间用<strong>逗号隔开</strong>（第一个不兼容会使用第二个，第二个不行会使用第三个……）</li><li>写字体类型的时候，推荐使用引号包裹起来</li></ul><h3 id="样式的层叠问题"><a href="#样式的层叠问题" class="headerlink" title="样式的层叠问题"></a>样式的层叠问题</h3><blockquote><p>给同一个标签设置相同的样式时，样式会层叠，只显示一个样式</p></blockquote><p><strong>案例：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*-------------------情况一-------------------------*/</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="comment">/*p标签是什么颜色？*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*-------------------情况二-------------------------*/</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">/*p标签是什么颜色？*/</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>层叠问题：给同一个标签设置相同的样式时，写在下面的样式会生效。</strong></p></blockquote><h3 id="连写形式（font）"><a href="#连写形式（font）" class="headerlink" title="连写形式（font）"></a>连写形式（font）</h3><blockquote><p>字体相关的属性都是以font-开头的，可以通过font属性连写字体相关属性</p></blockquote><p><strong>代码：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="comment">/*字体样式：倾斜*/</span></span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">    <span class="comment">/*字体粗细：加粗*/</span></span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="comment">/*字体大小：20px*/</span></span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="comment">/*字体类型：楷体*/</span></span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">"楷体"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*--------------------------------------*/</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="comment">/*连写形式*/</span></span><br><span class="line">    <span class="attribute">font</span>: italic <span class="number">700</span> <span class="number">20px</span> <span class="string">"楷体"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>连写的顺序：</strong></p><p><code>font：字体样式  字体粗细  字体大小  字体类型;</code></p><p><code>font: style  weight  size  family;</code></p><p><code>font: italic 700 20px &quot;楷体&quot;;</code></p><p><strong>连写顺序记忆方法 :</strong></p><ul><li>稍微舒服<code>swsf(首字母简写)</code></li><li>或者直接记 : <code>font: italic 700 40px &#39;宋体&#39;;</code></li></ul><hr><p><strong>省略：</strong></p><ul><li>可以省略前两个</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">font: <span class="number">20</span>px <span class="string">'楷体'</span>;</span><br></pre></td></tr></table></figure><blockquote><p><strong>省略的属性相当于设置了默认值</strong></p></blockquote><hr><p><strong>省略时注意层叠性问题：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*-------------------情况一-------------*/</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">    <span class="attribute">font</span>: normal <span class="number">700</span> <span class="number">20px</span> <span class="string">"楷体"</span>;</span><br><span class="line">    <span class="comment">/*请问文字是否倾斜*/</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*-------------------情况二-------------*/</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: italic;</span><br><span class="line">    <span class="attribute">font</span>: <span class="number">700</span> <span class="number">20px</span> <span class="string">"楷体"</span>;</span><br><span class="line">    <span class="comment">/*请问文字是否倾斜*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果需要同时设置单独的样式和连写的样式，可以</p><ul><li>把单独的样式写在连写的下面</li><li>把单独的样式写在连写的里面</li></ul><h2 id="开发人员调试（会操作即可）"><a href="#开发人员调试（会操作即可）" class="headerlink" title="开发人员调试（会操作即可）"></a>开发人员调试（会操作即可）</h2><blockquote><p>正常情况下，修改一个样式需要改代码，保存，再刷新，很麻烦……</p><p>开发人员调试工具可以很方便很直观的看到修改样式后的显示效果。</p></blockquote><p><strong>打开方式：</strong></p><ul><li>右键→检查</li></ul><p><strong>看哪里：</strong></p><ul><li>elements：显示页面的html结构</li><li>styles：显示的是当前标签的样式</li></ul><p><strong>调试的作用：</strong></p><ul><li>修改属性值（点击属性值）<ul><li>直接修改</li><li>鼠标滚轮</li><li>键盘的上下键</li></ul></li><li>添加属性<ul><li>在上一个属性值的分号之后点击一下，就可以添加样式</li></ul></li><li>控制样式生效<ul><li>点击每个属性前的小框，可以控制。</li><li>如果样式中有一个删除线，表示该样式不生效（失效）</li></ul></li><li>查看是否生效（是否有删除线）<ul><li>样式被注释掉了</li><li>样式被覆盖掉了</li></ul></li><li>查看报错（小三角形）<ul><li>属性值之后没有分号（没有分号会认为这一行没结束）</li><li>格式写的有问题（中文的标点，如；）</li><li>属性名或属性值有错误</li></ul></li></ul><p><strong>注意：</strong></p><ul><li>选中elements面板中的标签，右侧style面板就是当前标签对应的css样式</li><li>在调试工具中修改，仅仅是改变了当前页面的样式效果，刷新之后就没有了，<strong>需要添加到代码</strong>中才行</li></ul><h2 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h2><blockquote><p>选择器就是用来选中对应的标签的，然后给选中的标签加上对应的样式</p></blockquote><h3 id="标签选择器（标签名）"><a href="#标签选择器（标签名）" class="headerlink" title="标签选择器（标签名）"></a>标签选择器（标签名）</h3><blockquote><p>要求：四个标签都设置为红色</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 四个标签都设置为红色 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我也是p标签<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>我是div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>我也是div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>作用：</strong>根据指定的标签名，来设置指定的标签的样式 </p><p><strong>结构：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">标签名 &#123;</span></span><br><span class="line"><span class="undefined">属性名1: 属性值1;</span></span><br><span class="line"><span class="undefined">属性名2: 属性值2;</span></span><br><span class="line"><span class="undefined">....</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>特点：</strong></p><ul><li>标签选择器不能单独选中某一个标签，会选择这一类标签</li><li>标签选择器不管嵌套关系多深，都能选择到</li></ul><h3 id="类选择器（-）"><a href="#类选择器（-）" class="headerlink" title="类选择器（.）"></a>类选择器（.）</h3><blockquote><p>要求：满足下面的要求</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*原始的标签*/</span></span><br><span class="line">&lt;p&gt;小红&lt;/p&gt;</span><br><span class="line">&lt;p&gt;小黄&lt;/p&gt;</span><br><span class="line">&lt;p&gt;小粉&lt;/p&gt;</span><br><span class="line">&lt;div&gt;我是一个想红的div&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加好类之后的标签*/</span></span><br><span class="line">&lt;p class="red"&gt;小红&lt;/p&gt;</span><br><span class="line">&lt;p class="yellow"&gt;小黄&lt;/p&gt;</span><br><span class="line">&lt;p class="pink"&gt;小粉&lt;/p&gt;</span><br><span class="line">&lt;div class="red"&gt;我是一个想红的div&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p><strong>每一个标签都有class（类）属性，class属性的属性值就是类名</strong></p></blockquote><p><strong>作用：</strong>根据指定的类名，来设置指定的标签的样式</p><p><strong>结构：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">.类名 &#123;</span><br><span class="line">属性名1: 属性值1;</span><br><span class="line">属性名2: 属性值2;</span><br><span class="line">....</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>步骤（相当于穿衣服）：</strong></p><ol><li>声明自定义类名<code>.自定义类名 {属性1:值1;属性2: 值2;}</code>（先做一种衣服）</li><li>给对应的元素添加class类名属性 class=”自定义的类名”  （把这种衣服给标签穿上）</li></ol><p><strong>注意：</strong></p><ul><li>类名的命名规则：由数字、字母、下划线组成，<strong>不能以数字开头！！</strong></li><li>一个标签上可以有多个类名，每个类名之间必须以空格隔开（一个人同时可以穿多种衣服）</li><li>一个类选择器，可以选择多个标签（一种衣服可以有多个人穿→撞衫）</li></ul><p><strong>记忆：</strong>标签与类选择器的关系：<strong>多对多</strong></p><h3 id="ID选择器"><a href="#ID选择器" class="headerlink" title="ID选择器(#)"></a>ID选择器(#)</h3><blockquote><p>要求：都设置不同的颜色，不用类选择器</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*原始的标签*/</span></span><br><span class="line">&lt;p&gt;天选之人-红果果&lt;/p&gt;</span><br><span class="line">&lt;p&gt;天选之人-绿泡泡&lt;/p&gt;</span><br><span class="line">&lt;div&gt;我也想变红&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*添加好id之后的标签*/</span></span><br><span class="line">&lt;p id="red"&gt;天选之人-红果果&lt;/p&gt;</span><br><span class="line">&lt;p id="green"&gt;天选之人-绿泡泡&lt;/p&gt;</span><br><span class="line">&lt;div id="lowred"&gt;我也想变红&lt;/div&gt;</span><br></pre></td></tr></table></figure><blockquote><p><strong>每个标签都有id属性，id属性的属性值叫做id名</strong> </p></blockquote><p><strong>作用：</strong>根据指定的id，来设置指定的标签的样式</p><p><strong>结构：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">#id名 &#123;</span><br><span class="line">属性名1: 属性值1;</span><br><span class="line">属性名2: 属性值2;</span><br><span class="line">....</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>步骤（相当于结婚领证）：</strong></p><ol><li>声明id <code>#自定义id名字 {属性1:值1;属性2:值2;}</code> </li><li>给对应的元素添加属性 id=”自定义id”  </li></ol><p><strong>注意点：</strong></p><ul><li>id属性相当于标签的身份证号码，在一个页面中，id属性值是<strong>唯一的</strong>，<strong>不可重复的</strong>。</li><li>一个标签上只能有一个id属性值</li><li>一个id选择器只能选中一个标签</li><li>id的命名规则和类名一样</li></ul><p><strong>记忆：</strong>标签与id选择器的关系：<strong>一对一</strong></p><h3 id="特别注解"><a href="#特别注解" class="headerlink" title="特别注解"></a>特别注解</h3><h4 id="class类名和id值的区别"><a href="#class类名和id值的区别" class="headerlink" title="class类名和id值的区别"></a>class类名和id值的区别</h4><ul><li>class类名相当于姓名，可以重复，一个标签可以有多个class类名</li><li>id值相当于身份证号码，不可重复，一个标签只能有一个id值</li></ul><h4 id="class选择器和id选择器的区别"><a href="#class选择器和id选择器的区别" class="headerlink" title="class选择器和id选择器的区别"></a>class选择器和id选择器的区别</h4><ul><li><p>class选择器以<code>.</code>开头</p></li><li><p>id选择器以<code>#</code>开头</p></li></ul><h4 id="实际开发情况"><a href="#实际开发情况" class="headerlink" title="实际开发情况"></a>实际开发情况</h4><ul><li><p>使用最多的是class选择器</p></li><li><p>id一般情况是配合js使用的，所以除非特殊情况，否则不要用id去设置样式。</p></li><li><p>实际开发要注意的<strong>冗余代码的抽取</strong>，可以将一些公共的代码抽取到一个类选择器</p><p><strong>小demo：</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*---------------冗余代码（重复的代码）------------------*/</span></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*---------------抽取出公共类------------------*/</span></span><br><span class="line"><span class="selector-class">.common</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”课堂练习小练习"><a href="#ヾ-๑╹◡╹-ﾉ”课堂练习小练习" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”课堂练习小练习:"></a>ヾ(๑╹◡╹)ﾉ”课堂练习小练习:</h5><p><img src="\images\xuanzeqi1.png" alt=""></p><h5 id="ヾ-๑╹◡╹-ﾉ”课堂练习小练习-1"><a href="#ヾ-๑╹◡╹-ﾉ”课堂练习小练习-1" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”课堂练习小练习:"></a>ヾ(๑╹◡╹)ﾉ”课堂练习小练习:</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;我是p标签,我想变大，不想变红&lt;/p&gt;</span><br><span class="line">&lt;p&gt;我是p标签，我想变红，不想变大！！&lt;/p&gt;</span><br><span class="line">&lt;div&gt;我是div，我想变红，我想变大&lt;/div&gt;</span><br></pre></td></tr></table></figure><h3 id="通配符选择器（-）"><a href="#通配符选择器（-）" class="headerlink" title="通配符选择器（*）"></a>通配符选择器（*）</h3><blockquote><p>需求：把页面内所有的元素都设置一个颜色为red</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 把页面内所有的元素都设置一个颜色为red --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>小姐姐<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>小帅哥<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>我是h2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>小可爱<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>大可爱<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>作用：</strong> 会将页面上所有的标签都设置这个样式</p><p><strong>代码：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">* &#123;</span></span><br><span class="line"><span class="undefined">属性名: 属性值;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意:</strong> </p><ul><li>通配符会去页面上找到所以标签，并且一个个的标签设置样式，所以比较<strong>消耗性能</strong>，一般不会使用（只会在一些小页面中用于清除浏览器默认的margin和padding时才会使用到）</li></ul><h2 id="复合选择器"><a href="#复合选择器" class="headerlink" title="复合选择器"></a>复合选择器</h2><h3 id="并集选择器（-）"><a href="#并集选择器（-）" class="headerlink" title="并集选择器（,）"></a>并集选择器（,）</h3><blockquote><p>并集选择器也叫做<strong>分组选择器</strong></p><p>需求：把div和p的设置红色（节省代码的方式）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 把div和p的设置红色（节省代码的方式） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>小帅哥<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>小姐姐<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>小可爱<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>大可爱<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>并集选择器可以把多个选择器写在一起，节省代码</p></blockquote><p><strong>作用 :</strong> 找到选择器1和选择器2…选中的标签，给他们都设置样式</p><p><strong>代码 :</strong> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">选择器1,选择器2 &#123;</span></span><br><span class="line"><span class="undefined">属性名1: 属性值1;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意 :</strong></p><ul><li>并集选择器可以同时写多个的选择器 ，选择器之间需要以<strong>逗号隔开</strong> </li></ul><h3 id="交集选择器（紧挨着）"><a href="#交集选择器（紧挨着）" class="headerlink" title="交集选择器（紧挨着）"></a>交集选择器（紧挨着）</h3><blockquote><p>需求：只让小可爱变红（不能改变html的代码）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 只让小可爱变红（不能改变html结构） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"red"</span>&gt;</span>小姐姐<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>小帅哥<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span> =<span class="string">"red"</span>&gt;</span>小可爱<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>作用：</strong> （<strong>既又原则</strong>）选择页面中既能被选择器1选中，又能被选择器2选中的标签，设置样式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如：p.box &#123;&#125;  既是p标签 又有box类名</span><br></pre></td></tr></table></figure><p><strong>代码：</strong> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*既能被选择器1选中，又能被选择器2选中的标签*/</span></span><br><span class="line">选择器<span class="number">1</span>选择器<span class="number">2</span> &#123;</span><br><span class="line">属性名<span class="number">1</span>: 属性值<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>交集选择器可以同时写多个选择器，并且选择器与选择器之间紧挨着的！！</li><li>如果交集选择器中有标签选择器，标签选择器必须写在最前面</li></ul><h3 id="后代选择器（空格）"><a href="#后代选择器（空格）" class="headerlink" title="后代选择器（空格）"></a>后代选择器（空格）</h3><blockquote><p>需求：只让小姐姐变红（不能改变html的结构）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 只让小姐姐变红（不能改变html结构） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father"</span>&gt;</span> </span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>小姐姐<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>小可爱<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>作用 :</strong> </p><p>先通过选择器1找到一堆标签，在这一堆标签的后代（儿子、孙子、重孙子……）中，找到满足选择器2的标签设置样式。</p><p><strong>代码 :</strong> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">选择器1 选择器2 &#123;</span><br><span class="line">属性名1: 属性值1;</span><br><span class="line">....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤：</strong></p><ol><li>通过选择器1找到一堆标签</li><li>找到这一对标签的所有的后代标签</li><li>在这些后代标签中，找到满足选择器2的标签，给这些标签加上样式</li></ol><h3 id="子代选择器（-gt-）"><a href="#子代选择器（-gt-）" class="headerlink" title="子代选择器（&gt;）"></a>子代选择器（&gt;）</h3><blockquote><p>需求：只让小可爱变红（不能改变html结构）</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 只让小可爱变红（不能改变html结构） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"father"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>小可爱<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>小姐姐<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>大可爱<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>作用 ：</strong>通过选择器1找一堆标签，在这一堆标签的子代（儿子）中，找到满足选择器2的标签设置样式</p><p><strong>代码 :</strong> </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">选择器1 &gt; 选择器2 &#123;</span><br><span class="line">属性名1: 属性值1;</span><br><span class="line">....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>步骤：</strong><ol><li>通过选择器1找到一堆标签</li><li>找到这一对标签的所有的子代标签</li><li>在这些子代标签中，找到满足选择器2的标签，给这些标签加上样式</li></ol></li></ul><h5 id="ヾ-๑╹◡╹-ﾉ”项目中的情况（时间不够留给作业）"><a href="#ヾ-๑╹◡╹-ﾉ”项目中的情况（时间不够留给作业）" class="headerlink" title="ヾ(๑╹◡╹)ﾉ”项目中的情况（时间不够留给作业）"></a>ヾ(๑╹◡╹)ﾉ”项目中的情况（时间不够留给作业）</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 主导航栏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nav"</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>公司首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>公司简介<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>公司产品<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>联系我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>公司邮箱<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>公司电话<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 侧导航栏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"sitenav"</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>左侧侧导航栏<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在不修改以上代码的前提下，完成以下任务：</p><ol><li>链接登录的颜色为红色，同时主导航栏里面的所有的链接改为粉色（简单）</li><li>主导航栏和侧导航栏里面文字都是14像素并且是微软雅黑（中等）</li><li>主导航栏里面的一级菜单链接文字颜色为绿色（难）</li></ol><p><strong>答案：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">.right a &#123;</span><br><span class="line">color: red;</span><br><span class="line">&#125;</span><br><span class="line">.nav a &#123;</span><br><span class="line">color: pink;</span><br><span class="line">&#125;</span><br><span class="line">.nav,.sitenav &#123;</span><br><span class="line">font-size: 14px;</span><br><span class="line">font-family: '微软雅黑';</span><br><span class="line">&#125;</span><br><span class="line">.nav&gt;ul&gt;li&gt;a &#123;</span><br><span class="line">color: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="选择器的注意点"><a href="#选择器的注意点" class="headerlink" title="选择器的注意点"></a>选择器的注意点</h3><ul><li>标签选择器、类选择器、id选择器是必须熟练使用的！！！</li><li>复合选择器目前要求知道查找规则即可（看得懂）。需要配合项目多次使用才能熟练使用，第一次很难确定什么时候使用这是很正常的，之后的项目中跟着老师一起练即可</li></ul><h2 id="拓展的小细节"><a href="#拓展的小细节" class="headerlink" title="拓展的小细节"></a>拓展的小细节</h2><h3 id="颜色的取值（知道即可）"><a href="#颜色的取值（知道即可）" class="headerlink" title="颜色的取值（知道即可）"></a>颜色的取值（知道即可）</h3><h4 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h4><p><strong>取值：</strong></p><ul><li>red：红色</li><li>green：绿色</li><li>blue：蓝色</li><li>yellow：黄色</li><li>purple：紫色</li><li>pink：粉色</li><li>……</li></ul><p><strong>使用场景：</strong> 小案例中用的较多</p><hr><h4 id="rgb-表示法"><a href="#rgb-表示法" class="headerlink" title="rgb 表示法"></a>rgb 表示法</h4><blockquote><p>r：red     g：green   b：blue  （三基色）</p></blockquote><p><img src="\images\%E4%B8%89%E5%9F%BA%E8%89%B2.PNG" alt="三基色"></p><p><strong>取值：</strong> 每一项的取值范围为<code>0~255</code></p><p><strong>特殊的颜色值：</strong></p><ul><li><code>rgb(0,0,0)</code> ：黑色</li><li><code>rgb(255,255,255)</code> ：白色</li><li><code>rgb(255,0,0)</code> ：红色</li><li><code>rgb(0,255,0)</code> ：绿色</li><li><code>rgb(0,0,255)</code> ：蓝色</li></ul><hr><h4 id="rgba表示法"><a href="#rgba表示法" class="headerlink" title="rgba表示法"></a>rgba表示法</h4><blockquote><p>比rgb表示法多了一个a，a表示的是透明度</p></blockquote><p><strong>a的取值范围：</strong> 0~1（1：完全不透明，0：完全透明）</p><p><strong>省略写法：</strong> <code>rgba(0,0,0,0.5)</code> 可以写成 <code>rgba(0,0,0,.5)</code></p><hr><h4 id="十六进制表示法"><a href="#十六进制表示法" class="headerlink" title="十六进制表示法"></a>十六进制表示法</h4><blockquote><p>其实本质上来说和rgb表示法一样，只不过通过十六进制表示。比如：#ffaabb</p></blockquote><p><strong>效果：</strong></p><ul><li>前两位表示红色</li><li>中间两位表示绿色</li><li>后两位表示蓝色</li></ul><p><strong>省略的写法：</strong></p><blockquote><p>三组中每组都是相同的时候，每组可以省略写成一个即可</p></blockquote><p><code>#ffaabb</code> 可以省略写成 <code>#fab</code> 但是<strong>十六进制表示法要么是六位，要么是三位</strong>，只有两种情况！！</p><p><strong>特殊的取值：</strong></p><ul><li><code>#000</code>：黑色</li><li><code>#fff</code> ：白色</li><li><code>#f00</code> ：红色</li><li><code>#0f0</code> ：绿色</li><li><code>#00f</code> ：蓝色</li></ul><p><strong>特点：</strong></p><ul><li>十六进制以#开头</li><li>不区分大小写（大写小写都可以）</li></ul><p><strong>前端只需要通过PS量颜色即可，不需要自己设计颜色</strong></p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p><strong>作用：</strong>可以让页面上的一段代码让他们失去作用，浏览器不解析他们（和html的注释差不多，就是格式不一样）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- --&gt;</span>: html 中的注释, 不能嵌套</span><br><span class="line">/*    */: css 中的注释, 不能嵌套</span><br></pre></td></tr></table></figure><p><strong>注释快捷键：</strong>Ctrl + /</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;check
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>基础班day03笔记</title>
    <link href="http://yoursite.com/2019/02/20/1-%E5%9F%BA%E7%A1%80%E7%8F%ADday03%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/02/20/1-基础班day03笔记/</id>
    <published>2019-02-20T02:02:00.000Z</published>
    <updated>2019-03-02T04:25:47.654Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习目标"><a href="#学习目标" class="headerlink" title="学习目标"></a>学习目标</h2><blockquote><ul><li style="list-style: none"><input type="checkbox"> 能够写出4~5个常用的表单元素（input（多种形态）、select、textarea、form、label）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够说出表单name属性和value属性的作用（告诉后端发送的数据是什么含义；发送给后端的数据。数据形式：name属性值= value属性值）</li></ul><ul><li style="list-style: none"><input type="checkbox"> 能够掌握表单元素checked和selected的使用（checked：单选和多选默认选中；selected：下拉菜单默认选中）</li></ul><ul><li style="list-style: none"><input type="checkbox"> div和span的使用（用于css中的布局）</li></ul><ul><li style="list-style: none"><input type="checkbox"> H5新增的语义化标签（header、nav、footer、aside、section、article）</li></ul><ul><li style="list-style: none"><input type="checkbox"> H5新增的属性（placeholder、autofocus、autocomplete、required、multiple）</li></ul><ul><li style="list-style: none"><input type="checkbox"> H5视频音频标签（audio、video）</li></ul></blockquote><p><strong>理解上课的知识点</strong>……</p><h2 id="表单系列标签（重点）"><a href="#表单系列标签（重点）" class="headerlink" title="表单系列标签（重点）"></a>表单系列标签（重点）</h2><blockquote><p>表单的目的是收集用户信息，多用于注册或者登陆页面</p><p>比如：<a href="https://passport.baidu.com/v2/?reg&amp;tt=1545956869395&amp;overseas=undefined&amp;gid=7DCB50E-95C0-413A-9672-D86435760F4E&amp;tpl=mn&amp;u=https%3A%2F%2Fwww.baidu.com%2F" target="_blank" rel="noopener">百度注册页面</a></p><p>有一种生物叫做后端</p></blockquote><h3 id="input-输入框系列-基本表单控件"><a href="#input-输入框系列-基本表单控件" class="headerlink" title="input (输入框系列) 基本表单控件"></a>input (输入框系列) 基本表单控件</h3><blockquote><p>先简单的过一遍~</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">单标签、type：用于指定不同的控件类型</span><br></pre></td></tr></table></figure><p><img src="\images\表单元素.PNG" alt="表单元素"></p><h3 id="文本框-text-、-密码框-password"><a href="#文本框-text-、-密码框-password" class="headerlink" title="文本框 text 、 密码框 password"></a>文本框 text 、 密码框 password</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">昵称：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">value</span>=<span class="string">"小姐姐"</span> <span class="attr">name</span>=<span class="string">"nicheng"</span> <span class="attr">maxlength</span>=<span class="string">"6"</span>&gt;</span> </span><br><span class="line">密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">maxlength</span>=<span class="string">"6"</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li><p>value (<strong>基础班知道有这个属性就行~</strong>)：<strong>表单标签的值 </strong> → 用户输入的数据</p><blockquote><p>提前在标签设置好就是默认值</p></blockquote></li><li><p>name (<strong>基础班知道有这个属性就行~</strong>)：<strong>表单标签的名称</strong> → 作用是告诉后端对应的值的含义</p><blockquote><p>后端接收到的格式：<code>name的属性值=value的属性值</code></p></blockquote><p><strong>拓展：</strong></p><p>页面中的信息需要传给后台服务器，但是直接发一个值（value）过去，后端不知道是什么，所以需要加上一个属性name  代表数据的含义。</p><p>后端接收的数据结构为： name属性值=value属性值  这样后端就知道传过去的是什么（前后端交互在就业班会重点说明，基础班不会使用）</p></li><li><p>maxlength：设置表单的最大输入值</p></li></ul><p><strong>小bug</strong> ：如果是密码输入框，<code>type=&quot;password&quot;</code>  的password不能拼错且后面不能有空格，否则浏览器会认为type属性设置无效，会以默认的text方式显示，此时不会密文，相当于是文本框。</p><h3 id="单选框-radio-、多选框-checkbox"><a href="#单选框-radio-、多选框-checkbox" class="headerlink" title="单选框 radio 、多选框 checkbox"></a>单选框 radio 、多选框 checkbox</h3><h4 id="单选框-radio"><a href="#单选框-radio" class="headerlink" title="单选框 radio"></a>单选框 radio</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">性别 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"nan"</span>&gt;</span> 男 </span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">value</span>=<span class="string">"nv"</span> <span class="attr">checked</span>&gt;</span> 女</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>通过name进行分组（有相同name属性值的单选框是一组的，一组中同时只能有一个选中），并且告诉后台传的是什么含义</li><li>在实际工作中，需要写value值</li><li>checked 属性设置默认选中，属性值省略。</li></ul><h4 id="多选框-checkbox"><a href="#多选框-checkbox" class="headerlink" title="多选框 checkbox"></a>多选框 checkbox</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">爱好：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"code"</span> <span class="attr">checked</span>&gt;</span>敲代码</span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>  <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"nosleep"</span> <span class="attr">checked</span>&gt;</span>熬夜</span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span>  <span class="attr">name</span>=<span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"game"</span>&gt;</span>玩游戏</span><br></pre></td></tr></table></figure><ul><li>name属性告诉后台传的是什么含义</li><li>需要写value值</li><li>checked属性设置默认选中，属性值省略</li></ul><h3 id="文件选择框-file"><a href="#文件选择框-file" class="headerlink" title="文件选择框 file"></a>文件选择框 file</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span>&gt;</span>   单文件上传</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">multiple</span>&gt;</span>   多文件上传</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li><strong>（css3）multiple</strong>设置一次同时可以选中多个文件（ctrl+选中/鼠标框选）属性值可以省略</li><li>现在html只负责结构，之后真正的上传相关功能通过js来实现</li></ul><h3 id="表单按钮"><a href="#表单按钮" class="headerlink" title="表单按钮"></a>表单按钮</h3><blockquote><p>需要配合form表单一起使用</p><p>说白了就是用form标签把表单标签都包起来~</p></blockquote><h4 id="提交按钮submit"><a href="#提交按钮submit" class="headerlink" title="提交按钮submit"></a>提交按钮submit</h4><blockquote><p>将表单的内容提交给后端</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="重置按钮reset"><a href="#重置按钮reset" class="headerlink" title="重置按钮reset"></a>重置按钮reset</h4><blockquote><p>将表单的内容重置为默认值</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="普通按钮button"><a href="#普通按钮button" class="headerlink" title="普通按钮button"></a>普通按钮button</h4><blockquote><p>之后配合js使用</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span>    // 配合后面的js使用</span><br></pre></td></tr></table></figure><h4 id="图片按钮image"><a href="#图片按钮image" class="headerlink" title="图片按钮image"></a>图片按钮image</h4><blockquote><p>功能相当于提交按钮，样式为一张图片</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"image"</span> <span class="attr">src</span>=<span class="string">"a.jpg"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Form-表单域"><a href="#Form-表单域" class="headerlink" title="Form 表单域"></a>Form 表单域</h3><blockquote><p>form标签用于定义表单域，将各种表单包裹起来，用于表单提交</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"url地址"</span>&gt;</span></span><br><span class="line">  各种表单控件</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>属性：</strong>action 用于指定处理请求的服务器URL地址（<strong>就业班的内容</strong>）</p><h3 id="button标签"><a href="#button标签" class="headerlink" title="button标签"></a>button标签</h3><blockquote><p>除了input标签可以完成按钮功能之外，button标签也可以完成按钮的功能</p></blockquote><p><strong>代码：</strong><code>&lt;button&gt;一个按钮&lt;/button&gt;</code></p><p><strong>功能：</strong> button标签里面可以嵌入其他标签，甚至 <code>&lt;img&gt;</code>标签也可以，并且在谷歌浏览器中，button标签默认的功能就是提交按钮。</p><p>其实也可以通过设置button标签type的属性值不同来实现不同功能，常见的如下：</p><table><thead><tr><th style="text-align:center">type的属性值</th><th style="text-align:center">功能</th></tr></thead><tbody><tr><td style="text-align:center">submit</td><td style="text-align:center">提交按钮</td></tr><tr><td style="text-align:center">reset</td><td style="text-align:center">重置按钮</td></tr><tr><td style="text-align:center">button</td><td style="text-align:center">可以点击的按钮（没作用）</td></tr></tbody></table><h3 id="select-下拉菜单"><a href="#select-下拉菜单" class="headerlink" title="select 下拉菜单"></a>select 下拉菜单</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">出生年月：<span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"year"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1996"</span>&gt;</span>1996<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1997"</span>&gt;</span>1997<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1998"</span>&gt;</span>1998<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1999"</span> <span class="attr">selected</span>&gt;</span>1999<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ul><li>name属性设置在select标签上（告诉后台传过去的是什么）</li><li>value属性设置在option上，表示选中的值</li><li>selected属性设置默认选中，属性值省略</li></ul><h3 id="textarea文本域"><a href="#textarea文本域" class="headerlink" title="textarea文本域"></a>textarea文本域</h3><blockquote><p>用于输入大段文字</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">"规定文本区内的可见宽度"</span> <span class="attr">rows</span>=<span class="string">"规定文本区内的可见行数"</span>&gt;</span></span><br><span class="line">  文本内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="\images\textarea.png"></p><p><strong>注意：</strong>不能通过设置value使文本域有默认值，无效！</p><h3 id="label-标签"><a href="#label-标签" class="headerlink" title="label 标签"></a>label 标签</h3><blockquote><p>示例 : <a href="https://login.sina.com.cn/signup/signup?entry=homepage" target="_blank" rel="noopener">新浪网页注册</a></p></blockquote><p><strong>作用：</strong>让<strong>文本</strong>和<strong>表单元素</strong>绑定到一起（结拜兄弟）</p><p><img src="\images\label.jpg" alt="label"></p><p><img src="\images\猫哥.jpg" alt="猫哥"></p><p><strong>用法：</strong></p><ul><li>写 for ，值为 id，规定 label 与哪个表单元素绑定</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">性别 : </span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">id</span>=<span class="string">"nan"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">type</span>=<span class="string">"radio"</span>&gt;</span>  <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"nan"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span>  <span class="attr">id</span>=<span class="string">"nv"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">type</span>=<span class="string">"radio"</span>&gt;</span> <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"id名"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span>   </span><br><span class="line"></span><br><span class="line">步骤：</span><br><span class="line">1.在表单元素上添加id属性</span><br><span class="line">2.给label添加for属性，for的属性值与对应表单元素的id值相同即可</span><br></pre></td></tr></table></figure><ul><li><strong>不写 for</strong>，默认绑定 label 内的表单控件</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span>&gt;</span> 男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">步骤：用label把表单元素和文字包在一起即可</span><br></pre></td></tr></table></figure><h2 id="没有语义的布局标签（记忆）"><a href="#没有语义的布局标签（记忆）" class="headerlink" title="没有语义的布局标签（记忆）"></a>没有语义的布局标签（记忆）</h2><blockquote><p>div和span是没有语义的标签，一般用于页面布局使用（项目中会经常使用到）</p></blockquote><h3 id="div：div盒子"><a href="#div：div盒子" class="headerlink" title="div：div盒子"></a>div：div盒子</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>长亭外<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span>古道边<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>特点：</strong></p><ul><li>width由屏幕宽度决定（独占一行）height由内容撑开</li><li>默认占一整行（一行只能显示一个）</li></ul><p><strong>页面布局中用的最多~</strong></p><h3 id="span"><a href="#span" class="headerlink" title="span"></a>span</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;芳草碧连天&lt;/span&gt;</span><br></pre></td></tr></table></figure><p><strong>特点：</strong></p><ul><li>width、height由内容来决定（都由内容撑开）</li><li>一行里面可以显示多个</li></ul><p><strong>除了没有语义的标签可以用于布局，还有一些有语义的标签可以用于布局</strong></p><h2 id="HTML5新标签与属性"><a href="#HTML5新标签与属性" class="headerlink" title="HTML5新标签与属性"></a>HTML5新标签与属性</h2><blockquote><p>HTML5可以看做是HTML这个语言的一个新版本，里面有一些新加的标签和属性。</p><p>之后在就业班的学习中也会不断地学习H5C3的新知识。基础班先有一定的了解</p></blockquote><h3 id="HTML5新增语义标签（记忆）"><a href="#HTML5新增语义标签（记忆）" class="headerlink" title="HTML5新增语义标签（记忆）"></a>HTML5新增语义标签（记忆）</h3><ul><li><p><strong>头部：header标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">header：定义网页的头部---》头部语义 + div</span><br></pre></td></tr></table></figure></li><li><p><strong>导航：nav标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nav：定义网页的导航---》导航语义 + div</span><br></pre></td></tr></table></figure></li><li><p><strong>底部：footer标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">footer：定义网页的底部---》底部语义 + div</span><br></pre></td></tr></table></figure></li><li><p><strong>侧边栏：aside标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aside：定义网页的侧边---》侧边语义 + div</span><br></pre></td></tr></table></figure></li><li><p><strong>区块：section标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">section：定义网页的区块---》区块语义 + div</span><br></pre></td></tr></table></figure></li><li><p><strong>文章：article标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">article：定义网页的文章---》文章语义 + div</span><br></pre></td></tr></table></figure></li></ul><p><img src="\images\h5新标签.png" alt=""></p><p><strong>注意：</strong>html5标签有兼容性问题（老浏览器没效果），所以为了客户群多，会少用。</p><h3 id="HTML5新增的input表单（记忆）"><a href="#HTML5新增的input表单（记忆）" class="headerlink" title="HTML5新增的input表单（记忆）"></a>HTML5新增的input表单（记忆）</h3><blockquote><p>HTML5新增了input标签的校验效果，但是验证的较为简陋，实际开发中还需要配合JS实现！</p><p>下列的input新表单在移动端使用的更多。</p></blockquote><p><img src="\images\html5表单.png" alt="html5表单"></p><p><strong>代码：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">/* 输入一个网址，浏览器会自动校验网址的格式，格式不对不能提交！ */</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"url"</span>&gt;</span></span><br><span class="line">/* 输入一个邮箱，浏览器会自动校验邮箱的格式，格式不对不能提交！ */</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span>&gt;</span></span><br><span class="line">/* 浏览器会显示默认的选择日期控件 */</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span>&gt;</span></span><br><span class="line">/* 点击之后会自动弹出数字输入框（在移动端才有效！！） */</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"tel"</span>&gt;</span></span><br><span class="line">/* 只能输入数字 */</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span>&gt;</span></span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">type的属性值</th><th style="text-align:center">功能描述</th></tr></thead><tbody><tr><td style="text-align:center">url</td><td style="text-align:center">输入url格式（如：网址）</td></tr><tr><td style="text-align:center">email</td><td style="text-align:center">输入邮箱格式</td></tr><tr><td style="text-align:center">date</td><td style="text-align:center">显示日期输入框</td></tr><tr><td style="text-align:center">tel</td><td style="text-align:center">输入手机号码格式（只在移动设备上有效）</td></tr><tr><td style="text-align:center">number</td><td style="text-align:center">输入数字格式</td></tr></tbody></table><p>课后可以手机（移动端）访问看效果（部分HTML5标签的测试）：</p><p><img src="\images\new.png" alt="new"></p><p><strong>针对于tel的效果：</strong></p><p><img src="\images\tel.jpg" width="400px"></p><h3 id="HTML5新增的表单属性-记忆"><a href="#HTML5新增的表单属性-记忆" class="headerlink" title="HTML5新增的表单属性(记忆)"></a>HTML5新增的表单属性(记忆)</h3><table><thead><tr><th style="text-align:center">属性名</th><th style="text-align:center">属性值</th><th style="text-align:center">功能描述</th></tr></thead><tbody><tr><td style="text-align:center"><strong>placeholder</strong></td><td style="text-align:center">任意文字</td><td style="text-align:center">占位符（用于提示用户输入）</td></tr><tr><td style="text-align:center"><strong>autofocus</strong></td><td style="text-align:center">autofocus（可省略）</td><td style="text-align:center">当页面加载时自动获取焦点</td></tr><tr><td style="text-align:center"><strong>autocomplete</strong></td><td style="text-align:center">on：打开自动完成；off：关闭自动完成</td><td style="text-align:center">规定input是否应该启用自动完成功能（<strong>需要配合name属性一起使用</strong>）</td></tr><tr><td style="text-align:center"><strong>required</strong></td><td style="text-align:center">required（可省略）</td><td style="text-align:center">规定这个input的值是必填的</td></tr></tbody></table><h3 id="多媒体标签（了解）"><a href="#多媒体标签（了解）" class="headerlink" title="多媒体标签（了解）"></a>多媒体标签（了解）</h3><h4 id="audio-音频"><a href="#audio-音频" class="headerlink" title="audio 音频"></a>audio 音频</h4><blockquote><p>在网页中播放音频（声音）</p></blockquote><p><strong>属性：</strong></p><ul><li>controls 是否显示播放控件 </li><li>autoplay 自动播放（<strong>有兼容性问题</strong>）</li><li>loop 循环播放（<strong>有兼容性问题</strong>）</li></ul><p><strong>兼容性处理：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"1.mp3"</span>&gt;</span></span><br><span class="line">  您的版本过低,请升级高级版本 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.itcast.cn/"</span>&gt;</span>点击下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="video-视频"><a href="#video-视频" class="headerlink" title="video 视频"></a>video 视频</h4><blockquote><p>在网页中播放视频</p></blockquote><p><strong>属性（和audio类似）：</strong></p><ul><li>controls 是否显示播放控件 </li><li>autoplay 自动播放（<strong>有兼容性问题</strong>）</li><li>loop 循环播放（<strong>有兼容性问题</strong>）</li></ul><p><strong>兼容性处理：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">"1.mp3"</span>&gt;</span></span><br><span class="line">  您的版本过低,请升级高级版本 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.itcast.cn/"</span>&gt;</span>点击下载<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习目标&quot;&gt;&lt;a href=&quot;#学习目标&quot; class=&quot;headerlink&quot; title=&quot;学习目标&quot;&gt;&lt;/a&gt;学习目标&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li style=&quot;list-style: none&quot;&gt;&lt;input type=&quot;check
      
    
    </summary>
    
    
      <category term="授课笔记" scheme="http://yoursite.com/tags/%E6%8E%88%E8%AF%BE%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
</feed>
